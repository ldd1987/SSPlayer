//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer $Globals
{
    float4x4 worldMatrix;               // Offset:    0, size:   64
    float4x4 viewMatrix;                // Offset:   64, size:   64
    float4x4 projectionMatrix;          // Offset:  128, size:   64
    int     PixType;                    // Offset:  192, size:    4
    int     sourcewidth;                // Offset:  196, size:    4
    int     sourceheight;               // Offset:  200, size:    4
    int     transfer;                   // Offset:  204, size:    4
    int     distransfer;                // Offset:  208, size:    4
    int     primaries;                  // Offset:  212, size:    4
    int     disprimaries;               // Offset:  216, size:    4
    int     fullrange;                  // Offset:  220, size:    4
    int     srcrange;                   // Offset:  224, size:    4
    float   LuminanceScale;             // Offset:  228, size:    4
    int     DrawLine;                   // Offset:  232, size:    4
    float4  bt709yuv = { 0.0625, 0.5, 0.5, 0 };// Offset:  240, size:   16
    float4x4 bt601matrix = { 1.16400003, 1.16400003, 1.16400003, 0, 0, -0.391799986, 2.01719999, 0, 1.59599996, -0.813000023, 0, 0, 0, 0, 0, 0 };// Offset:  256, size:   64
    float4x4 bt709matrix = { 1.16400003, 1.16400003, 1.16400003, 0, 0, -0.213, 2.11199999, 0, 1.79299998, -0.532999992, 0, 0, 0, 0, 0, 0 };// Offset:  320, size:   64
    float4x4 bt2020matrix = { 1.16400003, 1.16400003, 1.16400003, 0, 0, -0.127007097, 2.14177227, 0, 1.67864001, -0.440987676, 0, 0, 0, 0, 0, 0 };// Offset:  384, size:   64
}

cbuffer PS_COLOR_TRANSFORM
{
    float4x4 WhitePoint;                // Offset:    0, size:   64
    float4x4 Colorspace;                // Offset:   64, size:   64
    float4x4 TransPrimaries;            // Offset:  128, size:   64
}

//
// 5 local object(s)
//
Texture2D TextureSourceY;
Texture2D TextureSourceU;
Texture2D TextureSourceV;
Texture2D TextureSourceA;
SamplerState SamplerDiffuse
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
    ComparisonFunc = uint(ALWAYS /* 8 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 BasicTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float4x4 worldMatrix;              // Offset:    0 Size:    64 [unused]
                //   float4x4 viewMatrix;               // Offset:   64 Size:    64
                //   float4x4 projectionMatrix;         // Offset:  128 Size:    64 [unused]
                //   int PixType;                       // Offset:  192 Size:     4 [unused]
                //   int sourcewidth;                   // Offset:  196 Size:     4 [unused]
                //   int sourceheight;                  // Offset:  200 Size:     4 [unused]
                //   int transfer;                      // Offset:  204 Size:     4 [unused]
                //   int distransfer;                   // Offset:  208 Size:     4 [unused]
                //   int primaries;                     // Offset:  212 Size:     4 [unused]
                //   int disprimaries;                  // Offset:  216 Size:     4 [unused]
                //   int fullrange;                     // Offset:  220 Size:     4 [unused]
                //   int srcrange;                      // Offset:  224 Size:     4 [unused]
                //   float LuminanceScale;              // Offset:  228 Size:     4 [unused]
                //   int DrawLine;                      // Offset:  232 Size:     4 [unused]
                //   float4 bt709yuv;                   // Offset:  240 Size:    16 [unused]
                //      = 0x3d800000 0x3f000000 0x3f000000 0x00000000 
                //   float4x4 bt601matrix;              // Offset:  256 Size:    64 [unused]
                //      = 0x3f94fdf4 0x3f94fdf4 0x3f94fdf4 0x00000000 
                //        0x00000000 0xbec89a02 0x400119ce 0x00000000 
                //        0x3fcc49ba 0xbf5020c5 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //   float4x4 bt709matrix;              // Offset:  320 Size:    64 [unused]
                //      = 0x3f94fdf4 0x3f94fdf4 0x3f94fdf4 0x00000000 
                //        0x00000000 0xbe5a1cac 0x40072b02 0x00000000 
                //        0x3fe58106 0xbf0872b0 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //   float4x4 bt2020matrix;             // Offset:  384 Size:    64 [unused]
                //      = 0x3f94fdf4 0x3f94fdf4 0x3f94fdf4 0x00000000 
                //        0x00000000 0xbe020e26 0x400912cc 0x00000000 
                //        0x3fd6ddad 0xbee1c923 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // $Globals                          cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyzw        0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- inPos.x; v0.y <- inPos.y; v0.z <- inPos.z; v0.w <- inPos.w; 
                //   v1.x <- inTexCoord.x; v1.y <- inTexCoord.y; 
                //   o1.x <- <VS return value>.TexCoord.x; o1.y <- <VS return value>.TexCoord.y; 
                //   o0.x <- <VS return value>.Pos.x; o0.y <- <VS return value>.Pos.y; o0.z <- <VS return value>.Pos.z; o0.w <- <VS return value>.Pos.w
                //
                #line 46 "C:\github\sinx\SSPlayer\SSPlayer\sharder\colorconvert.fx"
                mov r0.w, l(1.000000)  // r0.w <- inPos.w
                
                #line 50
                mov r0.xyz, v0.xyzx
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- output.Pos.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- output.Pos.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- output.Pos.z
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // r1.w <- output.Pos.w
                
                #line 54
                mov r0.xy, v1.xyxx  // r0.x <- output.TexCoord.x; r0.y <- output.TexCoord.y
                
                #line 55
                mov o0.xyzw, r1.xyzw
                mov o1.xy, r0.xyxx
                ret 
                // Approximately 10 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float4x4 worldMatrix;              // Offset:    0 Size:    64 [unused]
                //   float4x4 viewMatrix;               // Offset:   64 Size:    64 [unused]
                //   float4x4 projectionMatrix;         // Offset:  128 Size:    64 [unused]
                //   int PixType;                       // Offset:  192 Size:     4
                //   int sourcewidth;                   // Offset:  196 Size:     4 [unused]
                //   int sourceheight;                  // Offset:  200 Size:     4 [unused]
                //   int transfer;                      // Offset:  204 Size:     4
                //   int distransfer;                   // Offset:  208 Size:     4
                //   int primaries;                     // Offset:  212 Size:     4
                //   int disprimaries;                  // Offset:  216 Size:     4
                //   int fullrange;                     // Offset:  220 Size:     4 [unused]
                //   int srcrange;                      // Offset:  224 Size:     4 [unused]
                //   float LuminanceScale;              // Offset:  228 Size:     4
                //   int DrawLine;                      // Offset:  232 Size:     4
                //   float4 bt709yuv;                   // Offset:  240 Size:    16
                //      = 0x3d800000 0x3f000000 0x3f000000 0x00000000 
                //   float4x4 bt601matrix;              // Offset:  256 Size:    64 [unused]
                //      = 0x3f94fdf4 0x3f94fdf4 0x3f94fdf4 0x00000000 
                //        0x00000000 0xbec89a02 0x400119ce 0x00000000 
                //        0x3fcc49ba 0xbf5020c5 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //   float4x4 bt709matrix;              // Offset:  320 Size:    64 [unused]
                //      = 0x3f94fdf4 0x3f94fdf4 0x3f94fdf4 0x00000000 
                //        0x00000000 0xbe5a1cac 0x40072b02 0x00000000 
                //        0x3fe58106 0xbf0872b0 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //   float4x4 bt2020matrix;             // Offset:  384 Size:    64 [unused]
                //      = 0x3f94fdf4 0x3f94fdf4 0x3f94fdf4 0x00000000 
                //        0x00000000 0xbe020e26 0x400912cc 0x00000000 
                //        0x3fd6ddad 0xbee1c923 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //
                // }
                //
                // cbuffer PS_COLOR_TRANSFORM
                // {
                //
                //   float4x4 WhitePoint;               // Offset:    0 Size:    64
                //   float4x4 Colorspace;               // Offset:   64 Size:    64
                //   float4x4 TransPrimaries;           // Offset:  128 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // SamplerDiffuse                    sampler      NA          NA             s0      1 
                // TextureSourceY                    texture  float4          2d             t0      1 
                // TextureSourceU                    texture  float4          2d             t1      1 
                // TextureSourceV                    texture  float4          2d             t2      1 
                // $Globals                          cbuffer      NA          NA            cb0      1 
                // PS_COLOR_TRANSFORM                cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[16], immediateIndexed
                dcl_constantbuffer CB1[11], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 10
                //
                // Initial variable locations:
                //   v0.x <- input.Pos.x; v0.y <- input.Pos.y; v0.z <- input.Pos.z; v0.w <- input.Pos.w; 
                //   v1.x <- input.TexCoord.x; v1.y <- input.TexCoord.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 401 "C:\github\sinx\SSPlayer\SSPlayer\sharder\colorconvert.fx"
                nop 
                
                #line 329
                mov r0.xyzw, cb1[4].xyzw  // r0.x <- yuv2rgbmatrix._m00; r0.y <- yuv2rgbmatrix._m10; r0.z <- yuv2rgbmatrix._m20; r0.w <- yuv2rgbmatrix._m30
                mov r1.xyzw, cb1[5].xyzw  // r1.x <- yuv2rgbmatrix._m01; r1.y <- yuv2rgbmatrix._m11; r1.z <- yuv2rgbmatrix._m21; r1.w <- yuv2rgbmatrix._m31
                mov r2.xyzw, cb1[6].xyzw  // r2.x <- yuv2rgbmatrix._m02; r2.y <- yuv2rgbmatrix._m12; r2.z <- yuv2rgbmatrix._m22; r2.w <- yuv2rgbmatrix._m32
                mov r3.xyzw, cb1[7].xyzw  // r3.x <- yuv2rgbmatrix._m03; r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33
                
                #line 330
                ieq r4.x, cb0[12].x, l(6)
                if_nz r4.x
                
                #line 332
                  nop 
                
                #line 60
                  itof r4.xyz, l(0, 1, 0, 0)  // r4.x <- <PSPacked422_Reverse return value>.x; r4.y <- <PSPacked422_Reverse return value>.y; r4.z <- <PSPacked422_Reverse return value>.z
                  mov r4.w, l(1.000000)  // r4.w <- <PSPacked422_Reverse return value>.w
                
                #line 332
                  mov r4.xyzw, r4.xyzw  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 333
                  mov r5.xyzw, -cb0[15].xyzw
                  add r4.xyzw, r4.xyzw, r5.xyzw  // r4.x <- rgbasub.x; r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w
                
                #line 334
                  dp4 r5.x, r4.xyzw, r0.xyzw  // r5.x <- rgbarsp.x
                  dp4 r5.y, r4.xyzw, r1.xyzw  // r5.y <- rgbarsp.y
                  dp4 r5.z, r4.xyzw, r2.xyzw  // r5.z <- rgbarsp.z
                  dp4 r5.w, r4.xyzw, r3.xyzw  // r5.w <- rgbarsp.w
                
                #line 335
                  nop 
                  mov r5.xyzw, r5.xyzw
                
                #line 295
                  if_z cb0[14].z
                
                #line 297
                    nop 
                    mov r5.xyz, r5.xyzx
                
                #line 262
                    ieq r4.x, cb0[12].w, cb0[13].x
                    if_nz r4.x
                
                #line 264
                      mov r6.xyz, r5.xyzx
                
                #line 265
                    endif   // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 266
                    if_z r4.x
                      ieq r4.x, cb0[13].x, l(16)
                      if_nz r4.x
                
                #line 268
                        nop 
                        mov r5.xyz, r5.xyzx
                
                #line 170
                        mov r4.x, l(0.159302)  // r4.x <- ST2084_m1
                
                #line 171
                        mov r4.y, l(78.843750)  // r4.y <- ST2084_m2
                
                #line 172
                        mov r4.z, l(0.835938)  // r4.z <- ST2084_c1
                
                #line 173
                        mov r4.w, l(18.851562)  // r4.w <- ST2084_c2
                
                #line 174
                        mov r7.x, l(18.687500)  // r7.x <- ST2084_c3
                
                #line 175
                        itof r7.yzw, l(0, 1000, 1000, 1000)
                        div r7.yzw, r5.xxyz, r7.yyzw
                        log r7.yzw, r7.yyzw
                        mul r7.yzw, r4.xxxx, r7.yyzw
                        exp r7.yzw, r7.yyzw  // r7.y <- rgb.x; r7.z <- rgb.y; r7.w <- rgb.z
                
                #line 176
                        mul r8.xyz, r4.wwww, r7.yzwy
                        add r4.xzw, r4.zzzz, r8.xxyz
                        itof r8.xyz, l(1, 1, 1, 0)
                        mul r7.xyz, r7.yzwy, r7.xxxx
                        add r7.xyz, r7.xyzx, r8.xyzx
                        div r4.xzw, r4.xxzw, r7.xxyz  // r4.x <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 177
                        log r4.xzw, r4.xxzw
                        mul r4.xyz, r4.xzwx, r4.yyyy
                        exp r6.xyz, r4.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 178
                        mov r6.xyz, r6.xyzx  // r6.x <- <LineTOST2084 return value>.x; r6.y <- <LineTOST2084 return value>.y; r6.z <- <LineTOST2084 return value>.z
                
                #line 268
                        mov r6.xyz, r6.xyzx  // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 269
                      else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w
                
                #line 270
                        ieq r4.x, cb0[13].x, l(18)
                        if_nz r4.x
                
                #line 272
                          mov r6.xyz, r5.xyzx
                
                #line 273
                        else 
                
                #line 274
                          ieq r4.x, cb0[13].x, l(1)
                          if_nz r4.x
                
                #line 276
                            log r4.xyz, r5.xyzx
                            mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                            exp r6.xyz, r4.xyzx
                
                #line 277
                          else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z
                
                #line 278
                            ieq r4.x, cb0[13].x, l(4)
                            if_nz r4.x
                
                #line 280
                              log r4.xyz, r5.xyzx
                              mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                              exp r6.xyz, r4.xyzx
                
                #line 281
                            else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z
                
                #line 284
                              mov r6.xyz, r5.xyzx
                
                #line 285
                            endif 
                          endif 
                        endif 
                      endif 
                    endif 
                
                #line 297
                    mov r6.xyz, r6.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 298
                    nop 
                    mov r6.xyz, r6.xyzx
                
                #line 257
                    mov r6.xyz, r6.xyzx  // r6.x <- <adjustRange return value>.x; r6.y <- <adjustRange return value>.y; r6.z <- <adjustRange return value>.z
                
                #line 298
                    mov r6.xyz, r6.xyzx
                
                #line 299
                    nop 
                    mov r6.xyz, r6.xyzx
                
                #line 290
                    mov r6.xyz, r6.xyzx  // r6.x <- <reorderPlanes return value>.x; r6.y <- <reorderPlanes return value>.y; r6.z <- <reorderPlanes return value>.z
                
                #line 299
                    mov r6.xyz, r6.xyzx
                
                #line 300
                  else   // Prior locations: r4.x <- rgbasub.x; r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 295
                    mov r4.x, cb0[14].z  // r4.x <- DrawLine; r4.x <- DrawLine; r4.x <- DrawLine
                
                #line 301
                    ieq r4.x, r4.x, l(1)
                    if_nz r4.x
                
                #line 303
                      nop 
                      mov r6.xyzw, r5.xyzw
                
                #line 196
                      ieq r4.x, cb0[12].w, cb0[13].x
                      if_nz r4.x
                
                #line 198
                        mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 199
                      else 
                
                #line 200
                        ieq r4.x, cb0[12].w, l(16)
                        if_nz r4.x
                
                #line 202
                          nop 
                          mov r6.xyzw, r6.xyzw
                
                #line 131
                          mov r4.x, l(0.835938)  // r4.x <- ST2084_c1
                
                #line 132
                          mov r4.y, l(18.851562)  // r4.y <- ST2084_c2
                
                #line 133
                          mov r4.z, l(18.687500)  // r4.z <- ST2084_c3
                
                #line 134
                          itof r7.xyzw, l(0, 0, 0, 0)
                          max r7.xyzw, r6.xyzw, r7.xyzw
                          log r7.xyzw, r7.xyzw
                          mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                          exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 135
                          mov r8.xyzw, -r4.xxxx
                          add r8.xyzw, r7.xyzw, r8.xyzw
                          max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                          mul r7.xyzw, r4.zzzz, r7.xyzw
                          mov r7.xyzw, -r7.xyzw
                          add r4.xyzw, r4.yyyy, r7.xyzw
                          div r4.xyzw, r8.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 136
                          log r4.xyzw, r4.xyzw
                          mul r4.xyzw, r4.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                          exp r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 137
                          itof r7.xyzw, l(10000, 10000, 10000, 10000)
                          mul r6.xyzw, r4.xyzw, r7.xyzw  // r6.x <- <ST2084TOLinear return value>.x; r6.y <- <ST2084TOLinear return value>.y; r6.z <- <ST2084TOLinear return value>.z; r6.w <- <ST2084TOLinear return value>.w
                
                #line 202
                          mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 203
                        else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 204
                          ieq r4.x, cb0[12].w, l(1)
                          if_nz r4.x
                
                #line 206
                            nop 
                            mov r6.xyzw, r6.xyzw
                
                #line 152
                            log r4.xyzw, r6.xyzw
                            mul r4.xyzw, r4.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                            exp r6.xyzw, r4.xyzw  // r6.x <- <BT709TOLinear return value>.x; r6.y <- <BT709TOLinear return value>.y; r6.z <- <BT709TOLinear return value>.z; r6.w <- <BT709TOLinear return value>.w
                
                #line 206
                            mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 207
                          else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 210
                            mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 211
                          endif 
                        endif 
                      endif 
                
                #line 303
                      mov r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 304
                      nop 
                      mov r6.xyzw, r6.xyzw
                
                #line 222
                      ine r4.x, cb0[13].z, cb0[13].y
                      if_nz r4.x
                
                #line 224
                        nop 
                        mov r6.xyzw, r6.xyzw
                
                #line 217
                        dp4 r4.x, r6.xyzw, cb1[8].xyzw
                        dp4 r4.y, r6.xyzw, cb1[9].xyzw
                        dp4 r4.z, r6.xyzw, cb1[10].xyzw
                        itof r7.xyz, l(0, 0, 0, 0)
                        max r6.xyz, r4.xyzx, r7.xyzx  // r6.x <- <PrimariesTransform return value>.x; r6.y <- <PrimariesTransform return value>.y; r6.z <- <PrimariesTransform return value>.z
                
                #line 224
                        mov r6.xyz, r6.xyzx  // r6.x <- <transformPrimaries return value>.x; r6.y <- <transformPrimaries return value>.y; r6.z <- <transformPrimaries return value>.z
                
                #line 225
                      else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 228
                        mov r6.xyz, r6.xyzx  // r6.x <- <transformPrimaries return value>.x; r6.y <- <transformPrimaries return value>.y; r6.z <- <transformPrimaries return value>.z
                
                #line 229
                      endif 
                
                #line 304
                      mov r6.xyz, r6.xyzx
                
                #line 305
                      nop 
                      mov r6.xyz, r6.xyzx
                
                #line 234
                      ieq r4.x, cb0[13].x, l(1)
                      ieq r4.y, cb0[13].x, l(4)
                      or r4.x, r4.y, r4.x
                      if_nz r4.x
                
                #line 236
                        ieq r4.x, cb0[12].w, l(16)
                        if_nz r4.x
                
                #line 238
                          nop 
                          mov r6.xyz, r6.xyzx
                
                #line 189
                          nop 
                          mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                          mov r4.w, l(0.150000)  // r4.w <- A
                          mov r7.x, l(0.500000)  // r7.x <- B
                
                #line 184
                          mul r7.yzw, r4.xxyz, r4.wwww
                          add r7.yzw, r7.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
                          mul r7.yzw, r4.xxyz, r7.yyzw
                          add r7.yzw, r7.yyzw, l(0.000000, 0.004000, 0.004000, 0.004000)
                          mul r8.xyz, r4.xyzx, r4.wwww
                          add r8.xyz, r7.xxxx, r8.xyzx
                          mul r4.xyz, r4.xyzx, r8.xyzx
                          add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                          div r4.xyz, r7.yzwy, r4.xyzx
                          mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                          add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 189
                          mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 190
                          nop 
                          mul r7.xyz, r6.xyzx, cb0[14].yyyy
                
                #line 183
                          mov r4.w, l(0.150000)
                          mov r7.w, l(0.500000)  // r7.w <- B
                
                #line 184
                          mul r8.xyz, r7.xyzx, r4.wwww
                          add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                          mul r8.xyz, r7.xyzx, r8.xyzx
                          add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                          mul r9.xyz, r7.xyzx, r4.wwww
                          add r9.xyz, r7.wwww, r9.xyzx
                          mul r7.xyz, r7.xyzx, r9.xyzx
                          add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                          div r7.xyz, r8.xyzx, r7.xyzx
                          mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                          add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                          div r6.xyz, r7.xyzx, r4.xyzx  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z
                
                #line 191
                          mov r6.xyz, r6.xyzx  // r6.x <- <HDRToneMapping return value>.x; r6.y <- <HDRToneMapping return value>.y; r6.z <- <HDRToneMapping return value>.z
                
                #line 238
                          mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 239
                        else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 240
                          ieq r4.x, cb0[12].w, l(18)
                          if_nz r4.x
                
                #line 242
                            nop 
                            mov r6.xyz, r6.xyzx
                
                #line 189
                            nop 
                            mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                            mov r4.w, l(0.150000)  // r4.w <- A
                            mov r7.x, l(0.500000)  // r7.x <- B
                
                #line 184
                            mul r7.yzw, r4.xxyz, r4.wwww
                            add r7.yzw, r7.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
                            mul r7.yzw, r4.xxyz, r7.yyzw
                            add r7.yzw, r7.yyzw, l(0.000000, 0.004000, 0.004000, 0.004000)
                            mul r8.xyz, r4.xyzx, r4.wwww
                            add r8.xyz, r7.xxxx, r8.xyzx
                            mul r4.xyz, r4.xyzx, r8.xyzx
                            add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                            div r4.xyz, r7.yzwy, r4.xyzx
                            mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                            add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 189
                            mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 190
                            nop 
                            mul r7.xyz, r6.xyzx, cb0[14].yyyy
                
                #line 183
                            mov r4.w, l(0.150000)
                            mov r7.w, l(0.500000)  // r7.w <- B
                
                #line 184
                            mul r8.xyz, r7.xyzx, r4.wwww
                            add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                            mul r8.xyz, r7.xyzx, r8.xyzx
                            add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                            mul r9.xyz, r7.xyzx, r4.wwww
                            add r9.xyz, r7.wwww, r9.xyzx
                            mul r7.xyz, r7.xyzx, r9.xyzx
                            add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                            div r7.xyz, r8.xyzx, r7.xyzx
                            mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                            add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                            div r6.xyz, r7.xyzx, r4.xyzx  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z
                
                #line 191
                            mov r6.xyz, r6.xyzx  // r6.x <- <HDRToneMapping return value>.x; r6.y <- <HDRToneMapping return value>.y; r6.z <- <HDRToneMapping return value>.z
                
                #line 242
                            mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 243
                          else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 246
                            mul r6.xyz, r6.xyzx, cb0[14].yyyy  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 247
                          endif 
                        endif 
                
                #line 248
                      else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 251
                        mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 252
                      endif 
                
                #line 305
                      mov r6.xyz, r6.xyzx
                
                #line 306
                    else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.w <- rgbarsp.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 309
                      nop 
                      mov r5.xyzw, r5.xyzw
                
                #line 196
                      ieq r4.x, cb0[12].w, cb0[13].x
                      if_nz r4.x
                
                #line 198
                        mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 199
                      else 
                
                #line 200
                        ieq r4.x, cb0[12].w, l(16)
                        if_nz r4.x
                
                #line 202
                          nop 
                          mov r5.xyzw, r5.xyzw
                
                #line 131
                          mov r4.x, l(0.835938)  // r4.x <- ST2084_c1
                
                #line 132
                          mov r4.y, l(18.851562)  // r4.y <- ST2084_c2
                
                #line 133
                          mov r4.z, l(18.687500)  // r4.z <- ST2084_c3
                
                #line 134
                          itof r7.xyzw, l(0, 0, 0, 0)
                          max r7.xyzw, r5.xyzw, r7.xyzw
                          log r7.xyzw, r7.xyzw
                          mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                          exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 135
                          mov r8.xyzw, -r4.xxxx
                          add r8.xyzw, r7.xyzw, r8.xyzw
                          max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                          mul r7.xyzw, r4.zzzz, r7.xyzw
                          mov r7.xyzw, -r7.xyzw
                          add r4.xyzw, r4.yyyy, r7.xyzw
                          div r4.xyzw, r8.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 136
                          log r4.xyzw, r4.xyzw
                          mul r4.xyzw, r4.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                          exp r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 137
                          itof r7.xyzw, l(10000, 10000, 10000, 10000)
                          mul r5.xyzw, r4.xyzw, r7.xyzw  // r5.x <- <ST2084TOLinear return value>.x; r5.y <- <ST2084TOLinear return value>.y; r5.z <- <ST2084TOLinear return value>.z; r5.w <- <ST2084TOLinear return value>.w
                
                #line 202
                          mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 203
                        else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.w <- rgbarsp.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 204
                          ieq r4.x, cb0[12].w, l(1)
                          if_nz r4.x
                
                #line 206
                            nop 
                            mov r5.xyzw, r5.xyzw
                
                #line 152
                            log r4.xyzw, r5.xyzw
                            mul r4.xyzw, r4.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                            exp r5.xyzw, r4.xyzw  // r5.x <- <BT709TOLinear return value>.x; r5.y <- <BT709TOLinear return value>.y; r5.z <- <BT709TOLinear return value>.z; r5.w <- <BT709TOLinear return value>.w
                
                #line 206
                            mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 207
                          else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.w <- rgbarsp.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 210
                            mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 211
                          endif 
                        endif 
                      endif 
                
                #line 309
                      mov r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 310
                      nop 
                      mov r5.xyzw, r5.xyzw
                
                #line 222
                      ine r4.x, cb0[13].z, cb0[13].y
                      if_nz r4.x
                
                #line 224
                        nop 
                        mov r5.xyzw, r5.xyzw
                
                #line 217
                        dp4 r4.x, r5.xyzw, cb1[8].xyzw
                        dp4 r4.y, r5.xyzw, cb1[9].xyzw
                        dp4 r4.z, r5.xyzw, cb1[10].xyzw
                        itof r7.xyz, l(0, 0, 0, 0)
                        max r5.xyz, r4.xyzx, r7.xyzx  // r5.x <- <PrimariesTransform return value>.x; r5.y <- <PrimariesTransform return value>.y; r5.z <- <PrimariesTransform return value>.z
                
                #line 224
                        mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 225
                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 228
                        mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 229
                      endif 
                
                #line 310
                      mov r5.xyz, r5.xyzx
                
                #line 311
                      nop 
                      mov r5.xyz, r5.xyzx
                
                #line 234
                      ieq r4.x, cb0[13].x, l(1)
                      ieq r4.y, cb0[13].x, l(4)
                      or r4.x, r4.y, r4.x
                      if_nz r4.x
                
                #line 236
                        ieq r4.x, cb0[12].w, l(16)
                        if_nz r4.x
                
                #line 238
                          nop 
                          mov r5.xyz, r5.xyzx
                
                #line 189
                          nop 
                          mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                          mov r4.w, l(0.150000)  // r4.w <- A
                          mov r5.w, l(0.500000)  // r5.w <- B
                
                #line 184
                          mul r7.xyz, r4.xyzx, r4.wwww
                          add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                          mul r7.xyz, r4.xyzx, r7.xyzx
                          add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                          mul r8.xyz, r4.xyzx, r4.wwww
                          add r8.xyz, r5.wwww, r8.xyzx
                          mul r4.xyz, r4.xyzx, r8.xyzx
                          add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                          div r4.xyz, r7.xyzx, r4.xyzx
                          mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                          add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 189
                          mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 190
                          nop 
                          mul r7.xyz, r5.xyzx, cb0[14].yyyy
                
                #line 183
                          mov r4.w, l(0.150000)
                          mov r5.w, l(0.500000)
                
                #line 184
                          mul r8.xyz, r7.xyzx, r4.wwww
                          add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                          mul r8.xyz, r7.xyzx, r8.xyzx
                          add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                          mul r9.xyz, r7.xyzx, r4.wwww
                          add r9.xyz, r5.wwww, r9.xyzx
                          mul r7.xyz, r7.xyzx, r9.xyzx
                          add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                          div r7.xyz, r8.xyzx, r7.xyzx
                          mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                          add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                          div r5.xyz, r7.xyzx, r4.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 191
                          mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 238
                          mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 239
                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 240
                          ieq r4.x, cb0[12].w, l(18)
                          if_nz r4.x
                
                #line 242
                            nop 
                            mov r5.xyz, r5.xyzx
                
                #line 189
                            nop 
                            mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                            mov r4.w, l(0.150000)  // r4.w <- A
                            mov r5.w, l(0.500000)  // r5.w <- B
                
                #line 184
                            mul r7.xyz, r4.xyzx, r4.wwww
                            add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                            mul r7.xyz, r4.xyzx, r7.xyzx
                            add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                            mul r8.xyz, r4.xyzx, r4.wwww
                            add r8.xyz, r5.wwww, r8.xyzx
                            mul r4.xyz, r4.xyzx, r8.xyzx
                            add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                            div r4.xyz, r7.xyzx, r4.xyzx
                            mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                            add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 189
                            mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 190
                            nop 
                            mul r7.xyz, r5.xyzx, cb0[14].yyyy
                
                #line 183
                            mov r4.w, l(0.150000)
                            mov r5.w, l(0.500000)
                
                #line 184
                            mul r8.xyz, r7.xyzx, r4.wwww
                            add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                            mul r8.xyz, r7.xyzx, r8.xyzx
                            add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                            mul r9.xyz, r7.xyzx, r4.wwww
                            add r9.xyz, r5.wwww, r9.xyzx
                            mul r7.xyz, r7.xyzx, r9.xyzx
                            add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                            div r7.xyz, r8.xyzx, r7.xyzx
                            mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                            add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                            div r5.xyz, r7.xyzx, r4.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 191
                            mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 242
                            mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 243
                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 246
                            mul r5.xyz, r5.xyzx, cb0[14].yyyy  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 247
                          endif 
                        endif 
                
                #line 248
                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 251
                        mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 252
                      endif 
                
                #line 311
                      mov r5.xyz, r5.xyzx
                
                #line 312
                      nop 
                      mov r5.xyz, r5.xyzx
                
                #line 262
                      ieq r4.x, cb0[12].w, cb0[13].x
                      if_nz r4.x
                
                #line 264
                        mov r6.xyz, r5.xyzx
                
                #line 265
                      endif   // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 266
                      if_z r4.x
                        ieq r4.x, cb0[13].x, l(16)
                        if_nz r4.x
                
                #line 268
                          nop 
                          mov r5.xyz, r5.xyzx
                
                #line 170
                          mov r4.x, l(0.159302)  // r4.x <- ST2084_m1
                
                #line 171
                          mov r4.y, l(78.843750)  // r4.y <- ST2084_m2
                
                #line 172
                          mov r4.z, l(0.835938)  // r4.z <- ST2084_c1
                
                #line 173
                          mov r4.w, l(18.851562)  // r4.w <- ST2084_c2
                
                #line 174
                          mov r5.w, l(18.687500)  // r5.w <- ST2084_c3
                
                #line 175
                          itof r7.xyz, l(1000, 1000, 1000, 0)
                          div r7.xyz, r5.xyzx, r7.xyzx
                          log r7.xyz, r7.xyzx
                          mul r7.xyz, r4.xxxx, r7.xyzx
                          exp r7.xyz, r7.xyzx  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z
                
                #line 176
                          mul r8.xyz, r4.wwww, r7.xyzx
                          add r4.xzw, r4.zzzz, r8.xxyz
                          itof r8.xyz, l(1, 1, 1, 0)
                          mul r7.xyz, r5.wwww, r7.xyzx
                          add r7.xyz, r7.xyzx, r8.xyzx
                          div r4.xzw, r4.xxzw, r7.xxyz  // r4.x <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 177
                          log r4.xzw, r4.xxzw
                          mul r4.xyz, r4.xzwx, r4.yyyy
                          exp r6.xyz, r4.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 178
                          mov r6.xyz, r6.xyzx  // r6.x <- <LineTOST2084 return value>.x; r6.y <- <LineTOST2084 return value>.y; r6.z <- <LineTOST2084 return value>.z
                
                #line 268
                          mov r6.xyz, r6.xyzx  // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 269
                        else 
                
                #line 270
                          ieq r4.x, cb0[13].x, l(18)
                          if_nz r4.x
                
                #line 272
                            mov r6.xyz, r5.xyzx
                
                #line 273
                          else 
                
                #line 274
                            ieq r4.x, cb0[13].x, l(1)
                            if_nz r4.x
                
                #line 276
                              log r4.xyz, r5.xyzx
                              mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                              exp r6.xyz, r4.xyzx
                
                #line 277
                            else 
                
                #line 278
                              ieq r4.x, cb0[13].x, l(4)
                              if_nz r4.x
                
                #line 280
                                log r4.xyz, r5.xyzx
                                mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                exp r6.xyz, r4.xyzx
                
                #line 281
                              else 
                
                #line 284
                                mov r6.xyz, r5.xyzx
                
                #line 285
                              endif 
                            endif 
                          endif 
                        endif 
                      endif 
                
                #line 312
                      mov r6.xyz, r6.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 313
                      nop 
                      mov r6.xyz, r6.xyzx
                
                #line 257
                      mov r6.xyz, r6.xyzx  // r6.x <- <adjustRange return value>.x; r6.y <- <adjustRange return value>.y; r6.z <- <adjustRange return value>.z
                
                #line 313
                      mov r6.xyz, r6.xyzx
                
                #line 314
                      nop 
                      mov r6.xyz, r6.xyzx
                
                #line 290
                      mov r6.xyz, r6.xyzx  // r6.x <- <reorderPlanes return value>.x; r6.y <- <reorderPlanes return value>.y; r6.z <- <reorderPlanes return value>.z
                
                #line 314
                      mov r6.xyz, r6.xyzx
                
                #line 315
                    endif 
                  endif 
                
                #line 319
                  mov r6.xyz, r6.xyzx  // r6.x <- <RenderFloat return value>.x; r6.y <- <RenderFloat return value>.y; r6.z <- <RenderFloat return value>.z
                
                #line 335
                  mov r6.xyz, r6.xyzx  // r6.x <- rgbarsp.x; r6.y <- rgbarsp.y; r6.z <- rgbarsp.z
                
                #line 336
                  itof r6.w, l(1)  // r6.w <- rgbarsp.w
                
                #line 337
                  mov r6.xyz, r6.xyzx  // r6.x <- <GetRGBA return value>.x; r6.y <- <GetRGBA return value>.y; r6.z <- <GetRGBA return value>.z
                  mov r6.w, r6.w  // r6.w <- <GetRGBA return value>.w
                
                #line 338
                else 
                
                #line 339
                  ieq r4.x, cb0[12].x, l(5)
                  if_nz r4.x
                
                #line 341
                    nop 
                
                #line 60
                    itof r4.xyz, l(0, 1, 0, 0)  // r4.x <- <PSPacked422_Reverse return value>.x; r4.y <- <PSPacked422_Reverse return value>.y; r4.z <- <PSPacked422_Reverse return value>.z
                    mov r4.w, l(1.000000)  // r4.w <- <PSPacked422_Reverse return value>.w
                
                #line 341
                    mov r4.xyzw, r4.xyzw  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 342
                    mov r5.xyzw, -cb0[15].xyzw
                    add r4.xyzw, r4.xyzw, r5.xyzw  // r4.x <- rgbasub.x; r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w
                
                #line 343
                    dp4 r5.x, r4.xyzw, r0.xyzw  // r5.x <- rgbarsp.x
                    dp4 r5.y, r4.xyzw, r1.xyzw  // r5.y <- rgbarsp.y
                    dp4 r5.z, r4.xyzw, r2.xyzw  // r5.z <- rgbarsp.z
                    dp4 r5.w, r4.xyzw, r3.xyzw  // r5.w <- rgbarsp.w
                
                #line 344
                    nop 
                    mov r5.xyzw, r5.xyzw
                
                #line 295
                    if_z cb0[14].z
                
                #line 297
                      nop 
                      mov r5.xyz, r5.xyzx
                
                #line 262
                      ieq r4.x, cb0[12].w, cb0[13].x
                      if_nz r4.x
                
                #line 264
                        mov r6.xyz, r5.xyzx
                
                #line 265
                      endif   // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 266
                      if_z r4.x
                        ieq r4.x, cb0[13].x, l(16)
                        if_nz r4.x
                
                #line 268
                          nop 
                          mov r5.xyz, r5.xyzx
                
                #line 170
                          mov r4.x, l(0.159302)  // r4.x <- ST2084_m1
                
                #line 171
                          mov r4.y, l(78.843750)  // r4.y <- ST2084_m2
                
                #line 172
                          mov r4.z, l(0.835938)  // r4.z <- ST2084_c1
                
                #line 173
                          mov r4.w, l(18.851562)  // r4.w <- ST2084_c2
                
                #line 174
                          mov r7.x, l(18.687500)  // r7.x <- ST2084_c3
                
                #line 175
                          itof r7.yzw, l(0, 1000, 1000, 1000)
                          div r7.yzw, r5.xxyz, r7.yyzw
                          log r7.yzw, r7.yyzw
                          mul r7.yzw, r4.xxxx, r7.yyzw
                          exp r7.yzw, r7.yyzw  // r7.y <- rgb.x; r7.z <- rgb.y; r7.w <- rgb.z
                
                #line 176
                          mul r8.xyz, r4.wwww, r7.yzwy
                          add r4.xzw, r4.zzzz, r8.xxyz
                          itof r8.xyz, l(1, 1, 1, 0)
                          mul r7.xyz, r7.yzwy, r7.xxxx
                          add r7.xyz, r7.xyzx, r8.xyzx
                          div r4.xzw, r4.xxzw, r7.xxyz  // r4.x <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 177
                          log r4.xzw, r4.xxzw
                          mul r4.xyz, r4.xzwx, r4.yyyy
                          exp r6.xyz, r4.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 178
                          mov r6.xyz, r6.xyzx  // r6.x <- <LineTOST2084 return value>.x; r6.y <- <LineTOST2084 return value>.y; r6.z <- <LineTOST2084 return value>.z
                
                #line 268
                          mov r6.xyz, r6.xyzx  // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 269
                        else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w
                
                #line 270
                          ieq r4.x, cb0[13].x, l(18)
                          if_nz r4.x
                
                #line 272
                            mov r6.xyz, r5.xyzx
                
                #line 273
                          else 
                
                #line 274
                            ieq r4.x, cb0[13].x, l(1)
                            if_nz r4.x
                
                #line 276
                              log r4.xyz, r5.xyzx
                              mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                              exp r6.xyz, r4.xyzx
                
                #line 277
                            else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z
                
                #line 278
                              ieq r4.x, cb0[13].x, l(4)
                              if_nz r4.x
                
                #line 280
                                log r4.xyz, r5.xyzx
                                mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                exp r6.xyz, r4.xyzx
                
                #line 281
                              else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z
                
                #line 284
                                mov r6.xyz, r5.xyzx
                
                #line 285
                              endif 
                            endif 
                          endif 
                        endif 
                      endif 
                
                #line 297
                      mov r6.xyz, r6.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 298
                      nop 
                      mov r6.xyz, r6.xyzx
                
                #line 257
                      mov r6.xyz, r6.xyzx  // r6.x <- <adjustRange return value>.x; r6.y <- <adjustRange return value>.y; r6.z <- <adjustRange return value>.z
                
                #line 298
                      mov r6.xyz, r6.xyzx
                
                #line 299
                      nop 
                      mov r6.xyz, r6.xyzx
                
                #line 290
                      mov r6.xyz, r6.xyzx  // r6.x <- <reorderPlanes return value>.x; r6.y <- <reorderPlanes return value>.y; r6.z <- <reorderPlanes return value>.z
                
                #line 299
                      mov r6.xyz, r6.xyzx
                
                #line 300
                    else   // Prior locations: r4.x <- rgbasub.x; r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 295
                      mov r4.x, cb0[14].z  // r4.x <- DrawLine; r4.x <- DrawLine; r4.x <- DrawLine
                
                #line 301
                      ieq r4.x, r4.x, l(1)
                      if_nz r4.x
                
                #line 303
                        nop 
                        mov r6.xyzw, r5.xyzw
                
                #line 196
                        ieq r4.x, cb0[12].w, cb0[13].x
                        if_nz r4.x
                
                #line 198
                          mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 199
                        else 
                
                #line 200
                          ieq r4.x, cb0[12].w, l(16)
                          if_nz r4.x
                
                #line 202
                            nop 
                            mov r6.xyzw, r6.xyzw
                
                #line 131
                            mov r4.x, l(0.835938)  // r4.x <- ST2084_c1
                
                #line 132
                            mov r4.y, l(18.851562)  // r4.y <- ST2084_c2
                
                #line 133
                            mov r4.z, l(18.687500)  // r4.z <- ST2084_c3
                
                #line 134
                            itof r7.xyzw, l(0, 0, 0, 0)
                            max r7.xyzw, r6.xyzw, r7.xyzw
                            log r7.xyzw, r7.xyzw
                            mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                            exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 135
                            mov r8.xyzw, -r4.xxxx
                            add r8.xyzw, r7.xyzw, r8.xyzw
                            max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                            mul r7.xyzw, r4.zzzz, r7.xyzw
                            mov r7.xyzw, -r7.xyzw
                            add r4.xyzw, r4.yyyy, r7.xyzw
                            div r4.xyzw, r8.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 136
                            log r4.xyzw, r4.xyzw
                            mul r4.xyzw, r4.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                            exp r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 137
                            itof r7.xyzw, l(10000, 10000, 10000, 10000)
                            mul r6.xyzw, r4.xyzw, r7.xyzw  // r6.x <- <ST2084TOLinear return value>.x; r6.y <- <ST2084TOLinear return value>.y; r6.z <- <ST2084TOLinear return value>.z; r6.w <- <ST2084TOLinear return value>.w
                
                #line 202
                            mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 203
                          else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 204
                            ieq r4.x, cb0[12].w, l(1)
                            if_nz r4.x
                
                #line 206
                              nop 
                              mov r6.xyzw, r6.xyzw
                
                #line 152
                              log r4.xyzw, r6.xyzw
                              mul r4.xyzw, r4.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                              exp r6.xyzw, r4.xyzw  // r6.x <- <BT709TOLinear return value>.x; r6.y <- <BT709TOLinear return value>.y; r6.z <- <BT709TOLinear return value>.z; r6.w <- <BT709TOLinear return value>.w
                
                #line 206
                              mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 207
                            else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 210
                              mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 211
                            endif 
                          endif 
                        endif 
                
                #line 303
                        mov r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 304
                        nop 
                        mov r6.xyzw, r6.xyzw
                
                #line 222
                        ine r4.x, cb0[13].z, cb0[13].y
                        if_nz r4.x
                
                #line 224
                          nop 
                          mov r6.xyzw, r6.xyzw
                
                #line 217
                          dp4 r4.x, r6.xyzw, cb1[8].xyzw
                          dp4 r4.y, r6.xyzw, cb1[9].xyzw
                          dp4 r4.z, r6.xyzw, cb1[10].xyzw
                          itof r7.xyz, l(0, 0, 0, 0)
                          max r6.xyz, r4.xyzx, r7.xyzx  // r6.x <- <PrimariesTransform return value>.x; r6.y <- <PrimariesTransform return value>.y; r6.z <- <PrimariesTransform return value>.z
                
                #line 224
                          mov r6.xyz, r6.xyzx  // r6.x <- <transformPrimaries return value>.x; r6.y <- <transformPrimaries return value>.y; r6.z <- <transformPrimaries return value>.z
                
                #line 225
                        else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 228
                          mov r6.xyz, r6.xyzx  // r6.x <- <transformPrimaries return value>.x; r6.y <- <transformPrimaries return value>.y; r6.z <- <transformPrimaries return value>.z
                
                #line 229
                        endif 
                
                #line 304
                        mov r6.xyz, r6.xyzx
                
                #line 305
                        nop 
                        mov r6.xyz, r6.xyzx
                
                #line 234
                        ieq r4.x, cb0[13].x, l(1)
                        ieq r4.y, cb0[13].x, l(4)
                        or r4.x, r4.y, r4.x
                        if_nz r4.x
                
                #line 236
                          ieq r4.x, cb0[12].w, l(16)
                          if_nz r4.x
                
                #line 238
                            nop 
                            mov r6.xyz, r6.xyzx
                
                #line 189
                            nop 
                            mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                            mov r4.w, l(0.150000)  // r4.w <- A
                            mov r7.x, l(0.500000)  // r7.x <- B
                
                #line 184
                            mul r7.yzw, r4.xxyz, r4.wwww
                            add r7.yzw, r7.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
                            mul r7.yzw, r4.xxyz, r7.yyzw
                            add r7.yzw, r7.yyzw, l(0.000000, 0.004000, 0.004000, 0.004000)
                            mul r8.xyz, r4.xyzx, r4.wwww
                            add r8.xyz, r7.xxxx, r8.xyzx
                            mul r4.xyz, r4.xyzx, r8.xyzx
                            add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                            div r4.xyz, r7.yzwy, r4.xyzx
                            mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                            add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 189
                            mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 190
                            nop 
                            mul r7.xyz, r6.xyzx, cb0[14].yyyy
                
                #line 183
                            mov r4.w, l(0.150000)
                            mov r7.w, l(0.500000)  // r7.w <- B
                
                #line 184
                            mul r8.xyz, r7.xyzx, r4.wwww
                            add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                            mul r8.xyz, r7.xyzx, r8.xyzx
                            add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                            mul r9.xyz, r7.xyzx, r4.wwww
                            add r9.xyz, r7.wwww, r9.xyzx
                            mul r7.xyz, r7.xyzx, r9.xyzx
                            add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                            div r7.xyz, r8.xyzx, r7.xyzx
                            mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                            add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                            div r6.xyz, r7.xyzx, r4.xyzx  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z
                
                #line 191
                            mov r6.xyz, r6.xyzx  // r6.x <- <HDRToneMapping return value>.x; r6.y <- <HDRToneMapping return value>.y; r6.z <- <HDRToneMapping return value>.z
                
                #line 238
                            mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 239
                          else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 240
                            ieq r4.x, cb0[12].w, l(18)
                            if_nz r4.x
                
                #line 242
                              nop 
                              mov r6.xyz, r6.xyzx
                
                #line 189
                              nop 
                              mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                              mov r4.w, l(0.150000)  // r4.w <- A
                              mov r7.x, l(0.500000)  // r7.x <- B
                
                #line 184
                              mul r7.yzw, r4.xxyz, r4.wwww
                              add r7.yzw, r7.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
                              mul r7.yzw, r4.xxyz, r7.yyzw
                              add r7.yzw, r7.yyzw, l(0.000000, 0.004000, 0.004000, 0.004000)
                              mul r8.xyz, r4.xyzx, r4.wwww
                              add r8.xyz, r7.xxxx, r8.xyzx
                              mul r4.xyz, r4.xyzx, r8.xyzx
                              add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                              div r4.xyz, r7.yzwy, r4.xyzx
                              mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                              add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 189
                              mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 190
                              nop 
                              mul r7.xyz, r6.xyzx, cb0[14].yyyy
                
                #line 183
                              mov r4.w, l(0.150000)
                              mov r7.w, l(0.500000)  // r7.w <- B
                
                #line 184
                              mul r8.xyz, r7.xyzx, r4.wwww
                              add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                              mul r8.xyz, r7.xyzx, r8.xyzx
                              add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                              mul r9.xyz, r7.xyzx, r4.wwww
                              add r9.xyz, r7.wwww, r9.xyzx
                              mul r7.xyz, r7.xyzx, r9.xyzx
                              add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                              div r7.xyz, r8.xyzx, r7.xyzx
                              mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                              add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                              div r6.xyz, r7.xyzx, r4.xyzx  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z
                
                #line 191
                              mov r6.xyz, r6.xyzx  // r6.x <- <HDRToneMapping return value>.x; r6.y <- <HDRToneMapping return value>.y; r6.z <- <HDRToneMapping return value>.z
                
                #line 242
                              mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 243
                            else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 246
                              mul r6.xyz, r6.xyzx, cb0[14].yyyy  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 247
                            endif 
                          endif 
                
                #line 248
                        else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 251
                          mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 252
                        endif 
                
                #line 305
                        mov r6.xyz, r6.xyzx
                
                #line 306
                      else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.w <- rgbarsp.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 309
                        nop 
                        mov r5.xyzw, r5.xyzw
                
                #line 196
                        ieq r4.x, cb0[12].w, cb0[13].x
                        if_nz r4.x
                
                #line 198
                          mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 199
                        else 
                
                #line 200
                          ieq r4.x, cb0[12].w, l(16)
                          if_nz r4.x
                
                #line 202
                            nop 
                            mov r5.xyzw, r5.xyzw
                
                #line 131
                            mov r4.x, l(0.835938)  // r4.x <- ST2084_c1
                
                #line 132
                            mov r4.y, l(18.851562)  // r4.y <- ST2084_c2
                
                #line 133
                            mov r4.z, l(18.687500)  // r4.z <- ST2084_c3
                
                #line 134
                            itof r7.xyzw, l(0, 0, 0, 0)
                            max r7.xyzw, r5.xyzw, r7.xyzw
                            log r7.xyzw, r7.xyzw
                            mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                            exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 135
                            mov r8.xyzw, -r4.xxxx
                            add r8.xyzw, r7.xyzw, r8.xyzw
                            max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                            mul r7.xyzw, r4.zzzz, r7.xyzw
                            mov r7.xyzw, -r7.xyzw
                            add r4.xyzw, r4.yyyy, r7.xyzw
                            div r4.xyzw, r8.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 136
                            log r4.xyzw, r4.xyzw
                            mul r4.xyzw, r4.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                            exp r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 137
                            itof r7.xyzw, l(10000, 10000, 10000, 10000)
                            mul r5.xyzw, r4.xyzw, r7.xyzw  // r5.x <- <ST2084TOLinear return value>.x; r5.y <- <ST2084TOLinear return value>.y; r5.z <- <ST2084TOLinear return value>.z; r5.w <- <ST2084TOLinear return value>.w
                
                #line 202
                            mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 203
                          else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.w <- rgbarsp.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 204
                            ieq r4.x, cb0[12].w, l(1)
                            if_nz r4.x
                
                #line 206
                              nop 
                              mov r5.xyzw, r5.xyzw
                
                #line 152
                              log r4.xyzw, r5.xyzw
                              mul r4.xyzw, r4.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                              exp r5.xyzw, r4.xyzw  // r5.x <- <BT709TOLinear return value>.x; r5.y <- <BT709TOLinear return value>.y; r5.z <- <BT709TOLinear return value>.z; r5.w <- <BT709TOLinear return value>.w
                
                #line 206
                              mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 207
                            else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.w <- rgbarsp.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 210
                              mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 211
                            endif 
                          endif 
                        endif 
                
                #line 309
                        mov r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 310
                        nop 
                        mov r5.xyzw, r5.xyzw
                
                #line 222
                        ine r4.x, cb0[13].z, cb0[13].y
                        if_nz r4.x
                
                #line 224
                          nop 
                          mov r5.xyzw, r5.xyzw
                
                #line 217
                          dp4 r4.x, r5.xyzw, cb1[8].xyzw
                          dp4 r4.y, r5.xyzw, cb1[9].xyzw
                          dp4 r4.z, r5.xyzw, cb1[10].xyzw
                          itof r7.xyz, l(0, 0, 0, 0)
                          max r5.xyz, r4.xyzx, r7.xyzx  // r5.x <- <PrimariesTransform return value>.x; r5.y <- <PrimariesTransform return value>.y; r5.z <- <PrimariesTransform return value>.z
                
                #line 224
                          mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 225
                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 228
                          mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 229
                        endif 
                
                #line 310
                        mov r5.xyz, r5.xyzx
                
                #line 311
                        nop 
                        mov r5.xyz, r5.xyzx
                
                #line 234
                        ieq r4.x, cb0[13].x, l(1)
                        ieq r4.y, cb0[13].x, l(4)
                        or r4.x, r4.y, r4.x
                        if_nz r4.x
                
                #line 236
                          ieq r4.x, cb0[12].w, l(16)
                          if_nz r4.x
                
                #line 238
                            nop 
                            mov r5.xyz, r5.xyzx
                
                #line 189
                            nop 
                            mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                            mov r4.w, l(0.150000)  // r4.w <- A
                            mov r5.w, l(0.500000)  // r5.w <- B
                
                #line 184
                            mul r7.xyz, r4.xyzx, r4.wwww
                            add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                            mul r7.xyz, r4.xyzx, r7.xyzx
                            add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                            mul r8.xyz, r4.xyzx, r4.wwww
                            add r8.xyz, r5.wwww, r8.xyzx
                            mul r4.xyz, r4.xyzx, r8.xyzx
                            add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                            div r4.xyz, r7.xyzx, r4.xyzx
                            mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                            add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 189
                            mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 190
                            nop 
                            mul r7.xyz, r5.xyzx, cb0[14].yyyy
                
                #line 183
                            mov r4.w, l(0.150000)
                            mov r5.w, l(0.500000)
                
                #line 184
                            mul r8.xyz, r7.xyzx, r4.wwww
                            add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                            mul r8.xyz, r7.xyzx, r8.xyzx
                            add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                            mul r9.xyz, r7.xyzx, r4.wwww
                            add r9.xyz, r5.wwww, r9.xyzx
                            mul r7.xyz, r7.xyzx, r9.xyzx
                            add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                            div r7.xyz, r8.xyzx, r7.xyzx
                            mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                            add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                            div r5.xyz, r7.xyzx, r4.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 191
                            mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 238
                            mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 239
                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 240
                            ieq r4.x, cb0[12].w, l(18)
                            if_nz r4.x
                
                #line 242
                              nop 
                              mov r5.xyz, r5.xyzx
                
                #line 189
                              nop 
                              mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                              mov r4.w, l(0.150000)  // r4.w <- A
                              mov r5.w, l(0.500000)  // r5.w <- B
                
                #line 184
                              mul r7.xyz, r4.xyzx, r4.wwww
                              add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                              mul r7.xyz, r4.xyzx, r7.xyzx
                              add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                              mul r8.xyz, r4.xyzx, r4.wwww
                              add r8.xyz, r5.wwww, r8.xyzx
                              mul r4.xyz, r4.xyzx, r8.xyzx
                              add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                              div r4.xyz, r7.xyzx, r4.xyzx
                              mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                              add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 189
                              mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 190
                              nop 
                              mul r7.xyz, r5.xyzx, cb0[14].yyyy
                
                #line 183
                              mov r4.w, l(0.150000)
                              mov r5.w, l(0.500000)
                
                #line 184
                              mul r8.xyz, r7.xyzx, r4.wwww
                              add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                              mul r8.xyz, r7.xyzx, r8.xyzx
                              add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                              mul r9.xyz, r7.xyzx, r4.wwww
                              add r9.xyz, r5.wwww, r9.xyzx
                              mul r7.xyz, r7.xyzx, r9.xyzx
                              add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                              div r7.xyz, r8.xyzx, r7.xyzx
                              mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                              add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                              div r5.xyz, r7.xyzx, r4.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 191
                              mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 242
                              mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 243
                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 246
                              mul r5.xyz, r5.xyzx, cb0[14].yyyy  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 247
                            endif 
                          endif 
                
                #line 248
                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 251
                          mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 252
                        endif 
                
                #line 311
                        mov r5.xyz, r5.xyzx
                
                #line 312
                        nop 
                        mov r5.xyz, r5.xyzx
                
                #line 262
                        ieq r4.x, cb0[12].w, cb0[13].x
                        if_nz r4.x
                
                #line 264
                          mov r6.xyz, r5.xyzx
                
                #line 265
                        endif   // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 266
                        if_z r4.x
                          ieq r4.x, cb0[13].x, l(16)
                          if_nz r4.x
                
                #line 268
                            nop 
                            mov r5.xyz, r5.xyzx
                
                #line 170
                            mov r4.x, l(0.159302)  // r4.x <- ST2084_m1
                
                #line 171
                            mov r4.y, l(78.843750)  // r4.y <- ST2084_m2
                
                #line 172
                            mov r4.z, l(0.835938)  // r4.z <- ST2084_c1
                
                #line 173
                            mov r4.w, l(18.851562)  // r4.w <- ST2084_c2
                
                #line 174
                            mov r5.w, l(18.687500)  // r5.w <- ST2084_c3
                
                #line 175
                            itof r7.xyz, l(1000, 1000, 1000, 0)
                            div r7.xyz, r5.xyzx, r7.xyzx
                            log r7.xyz, r7.xyzx
                            mul r7.xyz, r4.xxxx, r7.xyzx
                            exp r7.xyz, r7.xyzx  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z
                
                #line 176
                            mul r8.xyz, r4.wwww, r7.xyzx
                            add r4.xzw, r4.zzzz, r8.xxyz
                            itof r8.xyz, l(1, 1, 1, 0)
                            mul r7.xyz, r5.wwww, r7.xyzx
                            add r7.xyz, r7.xyzx, r8.xyzx
                            div r4.xzw, r4.xxzw, r7.xxyz  // r4.x <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 177
                            log r4.xzw, r4.xxzw
                            mul r4.xyz, r4.xzwx, r4.yyyy
                            exp r6.xyz, r4.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 178
                            mov r6.xyz, r6.xyzx  // r6.x <- <LineTOST2084 return value>.x; r6.y <- <LineTOST2084 return value>.y; r6.z <- <LineTOST2084 return value>.z
                
                #line 268
                            mov r6.xyz, r6.xyzx  // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 269
                          else 
                
                #line 270
                            ieq r4.x, cb0[13].x, l(18)
                            if_nz r4.x
                
                #line 272
                              mov r6.xyz, r5.xyzx
                
                #line 273
                            else 
                
                #line 274
                              ieq r4.x, cb0[13].x, l(1)
                              if_nz r4.x
                
                #line 276
                                log r4.xyz, r5.xyzx
                                mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                exp r6.xyz, r4.xyzx
                
                #line 277
                              else 
                
                #line 278
                                ieq r4.x, cb0[13].x, l(4)
                                if_nz r4.x
                
                #line 280
                                  log r4.xyz, r5.xyzx
                                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                  exp r6.xyz, r4.xyzx
                
                #line 281
                                else 
                
                #line 284
                                  mov r6.xyz, r5.xyzx
                
                #line 285
                                endif 
                              endif 
                            endif 
                          endif 
                        endif 
                
                #line 312
                        mov r6.xyz, r6.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 313
                        nop 
                        mov r6.xyz, r6.xyzx
                
                #line 257
                        mov r6.xyz, r6.xyzx  // r6.x <- <adjustRange return value>.x; r6.y <- <adjustRange return value>.y; r6.z <- <adjustRange return value>.z
                
                #line 313
                        mov r6.xyz, r6.xyzx
                
                #line 314
                        nop 
                        mov r6.xyz, r6.xyzx
                
                #line 290
                        mov r6.xyz, r6.xyzx  // r6.x <- <reorderPlanes return value>.x; r6.y <- <reorderPlanes return value>.y; r6.z <- <reorderPlanes return value>.z
                
                #line 314
                        mov r6.xyz, r6.xyzx
                
                #line 315
                      endif 
                    endif 
                
                #line 319
                    mov r6.xyz, r6.xyzx  // r6.x <- <RenderFloat return value>.x; r6.y <- <RenderFloat return value>.y; r6.z <- <RenderFloat return value>.z
                
                #line 344
                    mov r6.xyz, r6.xyzx  // r6.x <- rgbarsp.x; r6.y <- rgbarsp.y; r6.z <- rgbarsp.z
                
                #line 345
                    itof r6.w, l(1)  // r6.w <- rgbarsp.w
                
                #line 346
                    mov r6.xyz, r6.xyzx  // r6.x <- <GetRGBA return value>.x; r6.y <- <GetRGBA return value>.y; r6.z <- <GetRGBA return value>.z
                    mov r6.w, r6.w  // r6.w <- <GetRGBA return value>.w
                
                #line 347
                  else 
                
                #line 348
                    ieq r4.x, cb0[12].x, l(3)
                    if_nz r4.x
                
                #line 350
                      nop 
                
                #line 60
                      itof r4.xyz, l(0, 1, 0, 0)  // r4.x <- <PSPacked422_Reverse return value>.x; r4.y <- <PSPacked422_Reverse return value>.y; r4.z <- <PSPacked422_Reverse return value>.z
                      mov r4.w, l(1.000000)  // r4.w <- <PSPacked422_Reverse return value>.w
                
                #line 350
                      mov r4.xyzw, r4.xyzw  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 351
                      mov r5.xyzw, -cb0[15].xyzw
                      add r4.xyzw, r4.xyzw, r5.xyzw  // r4.x <- rgbasub.x; r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w
                
                #line 352
                      dp4 r5.x, r4.xyzw, r0.xyzw  // r5.x <- rgbarsp.x
                      dp4 r5.y, r4.xyzw, r1.xyzw  // r5.y <- rgbarsp.y
                      dp4 r5.z, r4.xyzw, r2.xyzw  // r5.z <- rgbarsp.z
                      dp4 r5.w, r4.xyzw, r3.xyzw  // r5.w <- rgbarsp.w
                
                #line 353
                      nop 
                      mov r5.xyzw, r5.xyzw
                
                #line 295
                      if_z cb0[14].z
                
                #line 297
                        nop 
                        mov r5.xyz, r5.xyzx
                
                #line 262
                        ieq r4.x, cb0[12].w, cb0[13].x
                        if_nz r4.x
                
                #line 264
                          mov r6.xyz, r5.xyzx
                
                #line 265
                        endif   // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 266
                        if_z r4.x
                          ieq r4.x, cb0[13].x, l(16)
                          if_nz r4.x
                
                #line 268
                            nop 
                            mov r5.xyz, r5.xyzx
                
                #line 170
                            mov r4.x, l(0.159302)  // r4.x <- ST2084_m1
                
                #line 171
                            mov r4.y, l(78.843750)  // r4.y <- ST2084_m2
                
                #line 172
                            mov r4.z, l(0.835938)  // r4.z <- ST2084_c1
                
                #line 173
                            mov r4.w, l(18.851562)  // r4.w <- ST2084_c2
                
                #line 174
                            mov r7.x, l(18.687500)  // r7.x <- ST2084_c3
                
                #line 175
                            itof r7.yzw, l(0, 1000, 1000, 1000)
                            div r7.yzw, r5.xxyz, r7.yyzw
                            log r7.yzw, r7.yyzw
                            mul r7.yzw, r4.xxxx, r7.yyzw
                            exp r7.yzw, r7.yyzw  // r7.y <- rgb.x; r7.z <- rgb.y; r7.w <- rgb.z
                
                #line 176
                            mul r8.xyz, r4.wwww, r7.yzwy
                            add r4.xzw, r4.zzzz, r8.xxyz
                            itof r8.xyz, l(1, 1, 1, 0)
                            mul r7.xyz, r7.yzwy, r7.xxxx
                            add r7.xyz, r7.xyzx, r8.xyzx
                            div r4.xzw, r4.xxzw, r7.xxyz  // r4.x <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 177
                            log r4.xzw, r4.xxzw
                            mul r4.xyz, r4.xzwx, r4.yyyy
                            exp r6.xyz, r4.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 178
                            mov r6.xyz, r6.xyzx  // r6.x <- <LineTOST2084 return value>.x; r6.y <- <LineTOST2084 return value>.y; r6.z <- <LineTOST2084 return value>.z
                
                #line 268
                            mov r6.xyz, r6.xyzx  // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 269
                          else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w
                
                #line 270
                            ieq r4.x, cb0[13].x, l(18)
                            if_nz r4.x
                
                #line 272
                              mov r6.xyz, r5.xyzx
                
                #line 273
                            else 
                
                #line 274
                              ieq r4.x, cb0[13].x, l(1)
                              if_nz r4.x
                
                #line 276
                                log r4.xyz, r5.xyzx
                                mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                exp r6.xyz, r4.xyzx
                
                #line 277
                              else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z
                
                #line 278
                                ieq r4.x, cb0[13].x, l(4)
                                if_nz r4.x
                
                #line 280
                                  log r4.xyz, r5.xyzx
                                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                  exp r6.xyz, r4.xyzx
                
                #line 281
                                else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z
                
                #line 284
                                  mov r6.xyz, r5.xyzx
                
                #line 285
                                endif 
                              endif 
                            endif 
                          endif 
                        endif 
                
                #line 297
                        mov r6.xyz, r6.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 298
                        nop 
                        mov r6.xyz, r6.xyzx
                
                #line 257
                        mov r6.xyz, r6.xyzx  // r6.x <- <adjustRange return value>.x; r6.y <- <adjustRange return value>.y; r6.z <- <adjustRange return value>.z
                
                #line 298
                        mov r6.xyz, r6.xyzx
                
                #line 299
                        nop 
                        mov r6.xyz, r6.xyzx
                
                #line 290
                        mov r6.xyz, r6.xyzx  // r6.x <- <reorderPlanes return value>.x; r6.y <- <reorderPlanes return value>.y; r6.z <- <reorderPlanes return value>.z
                
                #line 299
                        mov r6.xyz, r6.xyzx
                
                #line 300
                      else   // Prior locations: r4.x <- rgbasub.x; r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 295
                        mov r4.x, cb0[14].z  // r4.x <- DrawLine; r4.x <- DrawLine; r4.x <- DrawLine
                
                #line 301
                        ieq r4.x, r4.x, l(1)
                        if_nz r4.x
                
                #line 303
                          nop 
                          mov r6.xyzw, r5.xyzw
                
                #line 196
                          ieq r4.x, cb0[12].w, cb0[13].x
                          if_nz r4.x
                
                #line 198
                            mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 199
                          else 
                
                #line 200
                            ieq r4.x, cb0[12].w, l(16)
                            if_nz r4.x
                
                #line 202
                              nop 
                              mov r6.xyzw, r6.xyzw
                
                #line 131
                              mov r4.x, l(0.835938)  // r4.x <- ST2084_c1
                
                #line 132
                              mov r4.y, l(18.851562)  // r4.y <- ST2084_c2
                
                #line 133
                              mov r4.z, l(18.687500)  // r4.z <- ST2084_c3
                
                #line 134
                              itof r7.xyzw, l(0, 0, 0, 0)
                              max r7.xyzw, r6.xyzw, r7.xyzw
                              log r7.xyzw, r7.xyzw
                              mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                              exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 135
                              mov r8.xyzw, -r4.xxxx
                              add r8.xyzw, r7.xyzw, r8.xyzw
                              max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                              mul r7.xyzw, r4.zzzz, r7.xyzw
                              mov r7.xyzw, -r7.xyzw
                              add r4.xyzw, r4.yyyy, r7.xyzw
                              div r4.xyzw, r8.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 136
                              log r4.xyzw, r4.xyzw
                              mul r4.xyzw, r4.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                              exp r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 137
                              itof r7.xyzw, l(10000, 10000, 10000, 10000)
                              mul r6.xyzw, r4.xyzw, r7.xyzw  // r6.x <- <ST2084TOLinear return value>.x; r6.y <- <ST2084TOLinear return value>.y; r6.z <- <ST2084TOLinear return value>.z; r6.w <- <ST2084TOLinear return value>.w
                
                #line 202
                              mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 203
                            else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 204
                              ieq r4.x, cb0[12].w, l(1)
                              if_nz r4.x
                
                #line 206
                                nop 
                                mov r6.xyzw, r6.xyzw
                
                #line 152
                                log r4.xyzw, r6.xyzw
                                mul r4.xyzw, r4.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                exp r6.xyzw, r4.xyzw  // r6.x <- <BT709TOLinear return value>.x; r6.y <- <BT709TOLinear return value>.y; r6.z <- <BT709TOLinear return value>.z; r6.w <- <BT709TOLinear return value>.w
                
                #line 206
                                mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 207
                              else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 210
                                mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 211
                              endif 
                            endif 
                          endif 
                
                #line 303
                          mov r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 304
                          nop 
                          mov r6.xyzw, r6.xyzw
                
                #line 222
                          ine r4.x, cb0[13].z, cb0[13].y
                          if_nz r4.x
                
                #line 224
                            nop 
                            mov r6.xyzw, r6.xyzw
                
                #line 217
                            dp4 r4.x, r6.xyzw, cb1[8].xyzw
                            dp4 r4.y, r6.xyzw, cb1[9].xyzw
                            dp4 r4.z, r6.xyzw, cb1[10].xyzw
                            itof r7.xyz, l(0, 0, 0, 0)
                            max r6.xyz, r4.xyzx, r7.xyzx  // r6.x <- <PrimariesTransform return value>.x; r6.y <- <PrimariesTransform return value>.y; r6.z <- <PrimariesTransform return value>.z
                
                #line 224
                            mov r6.xyz, r6.xyzx  // r6.x <- <transformPrimaries return value>.x; r6.y <- <transformPrimaries return value>.y; r6.z <- <transformPrimaries return value>.z
                
                #line 225
                          else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 228
                            mov r6.xyz, r6.xyzx  // r6.x <- <transformPrimaries return value>.x; r6.y <- <transformPrimaries return value>.y; r6.z <- <transformPrimaries return value>.z
                
                #line 229
                          endif 
                
                #line 304
                          mov r6.xyz, r6.xyzx
                
                #line 305
                          nop 
                          mov r6.xyz, r6.xyzx
                
                #line 234
                          ieq r4.x, cb0[13].x, l(1)
                          ieq r4.y, cb0[13].x, l(4)
                          or r4.x, r4.y, r4.x
                          if_nz r4.x
                
                #line 236
                            ieq r4.x, cb0[12].w, l(16)
                            if_nz r4.x
                
                #line 238
                              nop 
                              mov r6.xyz, r6.xyzx
                
                #line 189
                              nop 
                              mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                              mov r4.w, l(0.150000)  // r4.w <- A
                              mov r7.x, l(0.500000)  // r7.x <- B
                
                #line 184
                              mul r7.yzw, r4.xxyz, r4.wwww
                              add r7.yzw, r7.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
                              mul r7.yzw, r4.xxyz, r7.yyzw
                              add r7.yzw, r7.yyzw, l(0.000000, 0.004000, 0.004000, 0.004000)
                              mul r8.xyz, r4.xyzx, r4.wwww
                              add r8.xyz, r7.xxxx, r8.xyzx
                              mul r4.xyz, r4.xyzx, r8.xyzx
                              add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                              div r4.xyz, r7.yzwy, r4.xyzx
                              mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                              add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 189
                              mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 190
                              nop 
                              mul r7.xyz, r6.xyzx, cb0[14].yyyy
                
                #line 183
                              mov r4.w, l(0.150000)
                              mov r7.w, l(0.500000)  // r7.w <- B
                
                #line 184
                              mul r8.xyz, r7.xyzx, r4.wwww
                              add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                              mul r8.xyz, r7.xyzx, r8.xyzx
                              add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                              mul r9.xyz, r7.xyzx, r4.wwww
                              add r9.xyz, r7.wwww, r9.xyzx
                              mul r7.xyz, r7.xyzx, r9.xyzx
                              add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                              div r7.xyz, r8.xyzx, r7.xyzx
                              mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                              add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                              div r6.xyz, r7.xyzx, r4.xyzx  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z
                
                #line 191
                              mov r6.xyz, r6.xyzx  // r6.x <- <HDRToneMapping return value>.x; r6.y <- <HDRToneMapping return value>.y; r6.z <- <HDRToneMapping return value>.z
                
                #line 238
                              mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 239
                            else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 240
                              ieq r4.x, cb0[12].w, l(18)
                              if_nz r4.x
                
                #line 242
                                nop 
                                mov r6.xyz, r6.xyzx
                
                #line 189
                                nop 
                                mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                mov r4.w, l(0.150000)  // r4.w <- A
                                mov r7.x, l(0.500000)  // r7.x <- B
                
                #line 184
                                mul r7.yzw, r4.xxyz, r4.wwww
                                add r7.yzw, r7.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
                                mul r7.yzw, r4.xxyz, r7.yyzw
                                add r7.yzw, r7.yyzw, l(0.000000, 0.004000, 0.004000, 0.004000)
                                mul r8.xyz, r4.xyzx, r4.wwww
                                add r8.xyz, r7.xxxx, r8.xyzx
                                mul r4.xyz, r4.xyzx, r8.xyzx
                                add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                div r4.xyz, r7.yzwy, r4.xyzx
                                mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 189
                                mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 190
                                nop 
                                mul r7.xyz, r6.xyzx, cb0[14].yyyy
                
                #line 183
                                mov r4.w, l(0.150000)
                                mov r7.w, l(0.500000)  // r7.w <- B
                
                #line 184
                                mul r8.xyz, r7.xyzx, r4.wwww
                                add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                mul r8.xyz, r7.xyzx, r8.xyzx
                                add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                mul r9.xyz, r7.xyzx, r4.wwww
                                add r9.xyz, r7.wwww, r9.xyzx
                                mul r7.xyz, r7.xyzx, r9.xyzx
                                add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                div r7.xyz, r8.xyzx, r7.xyzx
                                mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                                div r6.xyz, r7.xyzx, r4.xyzx  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z
                
                #line 191
                                mov r6.xyz, r6.xyzx  // r6.x <- <HDRToneMapping return value>.x; r6.y <- <HDRToneMapping return value>.y; r6.z <- <HDRToneMapping return value>.z
                
                #line 242
                                mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 243
                              else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 246
                                mul r6.xyz, r6.xyzx, cb0[14].yyyy  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 247
                              endif 
                            endif 
                
                #line 248
                          else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 251
                            mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 252
                          endif 
                
                #line 305
                          mov r6.xyz, r6.xyzx
                
                #line 306
                        else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.w <- rgbarsp.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 309
                          nop 
                          mov r5.xyzw, r5.xyzw
                
                #line 196
                          ieq r4.x, cb0[12].w, cb0[13].x
                          if_nz r4.x
                
                #line 198
                            mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 199
                          else 
                
                #line 200
                            ieq r4.x, cb0[12].w, l(16)
                            if_nz r4.x
                
                #line 202
                              nop 
                              mov r5.xyzw, r5.xyzw
                
                #line 131
                              mov r4.x, l(0.835938)  // r4.x <- ST2084_c1
                
                #line 132
                              mov r4.y, l(18.851562)  // r4.y <- ST2084_c2
                
                #line 133
                              mov r4.z, l(18.687500)  // r4.z <- ST2084_c3
                
                #line 134
                              itof r7.xyzw, l(0, 0, 0, 0)
                              max r7.xyzw, r5.xyzw, r7.xyzw
                              log r7.xyzw, r7.xyzw
                              mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                              exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 135
                              mov r8.xyzw, -r4.xxxx
                              add r8.xyzw, r7.xyzw, r8.xyzw
                              max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                              mul r7.xyzw, r4.zzzz, r7.xyzw
                              mov r7.xyzw, -r7.xyzw
                              add r4.xyzw, r4.yyyy, r7.xyzw
                              div r4.xyzw, r8.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 136
                              log r4.xyzw, r4.xyzw
                              mul r4.xyzw, r4.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                              exp r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 137
                              itof r7.xyzw, l(10000, 10000, 10000, 10000)
                              mul r5.xyzw, r4.xyzw, r7.xyzw  // r5.x <- <ST2084TOLinear return value>.x; r5.y <- <ST2084TOLinear return value>.y; r5.z <- <ST2084TOLinear return value>.z; r5.w <- <ST2084TOLinear return value>.w
                
                #line 202
                              mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 203
                            else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.w <- rgbarsp.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 204
                              ieq r4.x, cb0[12].w, l(1)
                              if_nz r4.x
                
                #line 206
                                nop 
                                mov r5.xyzw, r5.xyzw
                
                #line 152
                                log r4.xyzw, r5.xyzw
                                mul r4.xyzw, r4.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                exp r5.xyzw, r4.xyzw  // r5.x <- <BT709TOLinear return value>.x; r5.y <- <BT709TOLinear return value>.y; r5.z <- <BT709TOLinear return value>.z; r5.w <- <BT709TOLinear return value>.w
                
                #line 206
                                mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 207
                              else   // Prior locations: r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.w <- rgbarsp.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 210
                                mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 211
                              endif 
                            endif 
                          endif 
                
                #line 309
                          mov r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 310
                          nop 
                          mov r5.xyzw, r5.xyzw
                
                #line 222
                          ine r4.x, cb0[13].z, cb0[13].y
                          if_nz r4.x
                
                #line 224
                            nop 
                            mov r5.xyzw, r5.xyzw
                
                #line 217
                            dp4 r4.x, r5.xyzw, cb1[8].xyzw
                            dp4 r4.y, r5.xyzw, cb1[9].xyzw
                            dp4 r4.z, r5.xyzw, cb1[10].xyzw
                            itof r7.xyz, l(0, 0, 0, 0)
                            max r5.xyz, r4.xyzx, r7.xyzx  // r5.x <- <PrimariesTransform return value>.x; r5.y <- <PrimariesTransform return value>.y; r5.z <- <PrimariesTransform return value>.z
                
                #line 224
                            mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 225
                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 228
                            mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 229
                          endif 
                
                #line 310
                          mov r5.xyz, r5.xyzx
                
                #line 311
                          nop 
                          mov r5.xyz, r5.xyzx
                
                #line 234
                          ieq r4.x, cb0[13].x, l(1)
                          ieq r4.y, cb0[13].x, l(4)
                          or r4.x, r4.y, r4.x
                          if_nz r4.x
                
                #line 236
                            ieq r4.x, cb0[12].w, l(16)
                            if_nz r4.x
                
                #line 238
                              nop 
                              mov r5.xyz, r5.xyzx
                
                #line 189
                              nop 
                              mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                              mov r4.w, l(0.150000)  // r4.w <- A
                              mov r5.w, l(0.500000)  // r5.w <- B
                
                #line 184
                              mul r7.xyz, r4.xyzx, r4.wwww
                              add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                              mul r7.xyz, r4.xyzx, r7.xyzx
                              add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                              mul r8.xyz, r4.xyzx, r4.wwww
                              add r8.xyz, r5.wwww, r8.xyzx
                              mul r4.xyz, r4.xyzx, r8.xyzx
                              add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                              div r4.xyz, r7.xyzx, r4.xyzx
                              mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                              add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 189
                              mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 190
                              nop 
                              mul r7.xyz, r5.xyzx, cb0[14].yyyy
                
                #line 183
                              mov r4.w, l(0.150000)
                              mov r5.w, l(0.500000)
                
                #line 184
                              mul r8.xyz, r7.xyzx, r4.wwww
                              add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                              mul r8.xyz, r7.xyzx, r8.xyzx
                              add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                              mul r9.xyz, r7.xyzx, r4.wwww
                              add r9.xyz, r5.wwww, r9.xyzx
                              mul r7.xyz, r7.xyzx, r9.xyzx
                              add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                              div r7.xyz, r8.xyzx, r7.xyzx
                              mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                              add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                              div r5.xyz, r7.xyzx, r4.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 191
                              mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 238
                              mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 239
                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 240
                              ieq r4.x, cb0[12].w, l(18)
                              if_nz r4.x
                
                #line 242
                                nop 
                                mov r5.xyz, r5.xyzx
                
                #line 189
                                nop 
                                mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                mov r4.w, l(0.150000)  // r4.w <- A
                                mov r5.w, l(0.500000)  // r5.w <- B
                
                #line 184
                                mul r7.xyz, r4.xyzx, r4.wwww
                                add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                mul r7.xyz, r4.xyzx, r7.xyzx
                                add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                mul r8.xyz, r4.xyzx, r4.wwww
                                add r8.xyz, r5.wwww, r8.xyzx
                                mul r4.xyz, r4.xyzx, r8.xyzx
                                add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                div r4.xyz, r7.xyzx, r4.xyzx
                                mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 189
                                mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 190
                                nop 
                                mul r7.xyz, r5.xyzx, cb0[14].yyyy
                
                #line 183
                                mov r4.w, l(0.150000)
                                mov r5.w, l(0.500000)
                
                #line 184
                                mul r8.xyz, r7.xyzx, r4.wwww
                                add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                mul r8.xyz, r7.xyzx, r8.xyzx
                                add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                mul r9.xyz, r7.xyzx, r4.wwww
                                add r9.xyz, r5.wwww, r9.xyzx
                                mul r7.xyz, r7.xyzx, r9.xyzx
                                add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                div r7.xyz, r8.xyzx, r7.xyzx
                                mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                                div r5.xyz, r7.xyzx, r4.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 191
                                mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 242
                                mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 243
                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 246
                                mul r5.xyz, r5.xyzx, cb0[14].yyyy  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 247
                              endif 
                            endif 
                
                #line 248
                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 251
                            mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 252
                          endif 
                
                #line 311
                          mov r5.xyz, r5.xyzx
                
                #line 312
                          nop 
                          mov r5.xyz, r5.xyzx
                
                #line 262
                          ieq r4.x, cb0[12].w, cb0[13].x
                          if_nz r4.x
                
                #line 264
                            mov r6.xyz, r5.xyzx
                
                #line 265
                          endif   // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 266
                          if_z r4.x
                            ieq r4.x, cb0[13].x, l(16)
                            if_nz r4.x
                
                #line 268
                              nop 
                              mov r5.xyz, r5.xyzx
                
                #line 170
                              mov r4.x, l(0.159302)  // r4.x <- ST2084_m1
                
                #line 171
                              mov r4.y, l(78.843750)  // r4.y <- ST2084_m2
                
                #line 172
                              mov r4.z, l(0.835938)  // r4.z <- ST2084_c1
                
                #line 173
                              mov r4.w, l(18.851562)  // r4.w <- ST2084_c2
                
                #line 174
                              mov r5.w, l(18.687500)  // r5.w <- ST2084_c3
                
                #line 175
                              itof r7.xyz, l(1000, 1000, 1000, 0)
                              div r7.xyz, r5.xyzx, r7.xyzx
                              log r7.xyz, r7.xyzx
                              mul r7.xyz, r4.xxxx, r7.xyzx
                              exp r7.xyz, r7.xyzx  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z
                
                #line 176
                              mul r8.xyz, r4.wwww, r7.xyzx
                              add r4.xzw, r4.zzzz, r8.xxyz
                              itof r8.xyz, l(1, 1, 1, 0)
                              mul r7.xyz, r5.wwww, r7.xyzx
                              add r7.xyz, r7.xyzx, r8.xyzx
                              div r4.xzw, r4.xxzw, r7.xxyz  // r4.x <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 177
                              log r4.xzw, r4.xxzw
                              mul r4.xyz, r4.xzwx, r4.yyyy
                              exp r6.xyz, r4.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 178
                              mov r6.xyz, r6.xyzx  // r6.x <- <LineTOST2084 return value>.x; r6.y <- <LineTOST2084 return value>.y; r6.z <- <LineTOST2084 return value>.z
                
                #line 268
                              mov r6.xyz, r6.xyzx  // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 269
                            else 
                
                #line 270
                              ieq r4.x, cb0[13].x, l(18)
                              if_nz r4.x
                
                #line 272
                                mov r6.xyz, r5.xyzx
                
                #line 273
                              else 
                
                #line 274
                                ieq r4.x, cb0[13].x, l(1)
                                if_nz r4.x
                
                #line 276
                                  log r4.xyz, r5.xyzx
                                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                  exp r6.xyz, r4.xyzx
                
                #line 277
                                else 
                
                #line 278
                                  ieq r4.x, cb0[13].x, l(4)
                                  if_nz r4.x
                
                #line 280
                                    log r4.xyz, r5.xyzx
                                    mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                    exp r6.xyz, r4.xyzx
                
                #line 281
                                  else 
                
                #line 284
                                    mov r6.xyz, r5.xyzx
                
                #line 285
                                  endif 
                                endif 
                              endif 
                            endif 
                          endif 
                
                #line 312
                          mov r6.xyz, r6.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 313
                          nop 
                          mov r6.xyz, r6.xyzx
                
                #line 257
                          mov r6.xyz, r6.xyzx  // r6.x <- <adjustRange return value>.x; r6.y <- <adjustRange return value>.y; r6.z <- <adjustRange return value>.z
                
                #line 313
                          mov r6.xyz, r6.xyzx
                
                #line 314
                          nop 
                          mov r6.xyz, r6.xyzx
                
                #line 290
                          mov r6.xyz, r6.xyzx  // r6.x <- <reorderPlanes return value>.x; r6.y <- <reorderPlanes return value>.y; r6.z <- <reorderPlanes return value>.z
                
                #line 314
                          mov r6.xyz, r6.xyzx
                
                #line 315
                        endif 
                      endif 
                
                #line 319
                      mov r6.xyz, r6.xyzx  // r6.x <- <RenderFloat return value>.x; r6.y <- <RenderFloat return value>.y; r6.z <- <RenderFloat return value>.z
                
                #line 353
                      mov r6.xyz, r6.xyzx  // r6.x <- rgbarsp.x; r6.y <- rgbarsp.y; r6.z <- rgbarsp.z
                
                #line 354
                      itof r6.w, l(1)  // r6.w <- rgbarsp.w
                
                #line 355
                      mov r6.xyz, r6.xyzx  // r6.x <- <GetRGBA return value>.x; r6.y <- <GetRGBA return value>.y; r6.z <- <GetRGBA return value>.z
                      mov r6.w, r6.w  // r6.w <- <GetRGBA return value>.w
                
                #line 356
                    else 
                
                #line 357
                      ieq r4.x, cb0[12].x, l(2)
                      if_nz r4.x
                
                #line 359
                        nop 
                
                #line 65
                        sample_indexable(texture2d)(float,float,float,float) r4.x, v1.xyxx, t0.xyzw, s0  // r4.x <- y
                
                #line 67
                        sample_indexable(texture2d)(float,float,float,float) r4.y, v1.xyxx, t1.yxzw, s0  // r4.y <- u
                
                #line 68
                        sample_indexable(texture2d)(float,float,float,float) r4.z, v1.xyxx, t2.yzxw, s0  // r4.z <- v
                
                #line 70
                        mov r4.w, l(1.000000)
                        mov r4.xyzw, r4.xyzw  // r4.x <- <PSPlanar420_Reverse return value>.x; r4.y <- <PSPlanar420_Reverse return value>.y; r4.z <- <PSPlanar420_Reverse return value>.z; r4.w <- <PSPlanar420_Reverse return value>.w
                
                #line 359
                        mov r4.xyzw, r4.xyzw  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 360
                        mov r5.xyzw, -cb0[15].xyzw
                        add r4.xyzw, r4.xyzw, r5.xyzw  // r4.x <- rgbasub.x; r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w
                
                #line 361
                        dp4 r6.x, r4.xyzw, r0.xyzw  // r6.x <- rgbarsp.x
                        dp4 r6.y, r4.xyzw, r1.xyzw  // r6.y <- rgbarsp.y
                        dp4 r6.z, r4.xyzw, r2.xyzw  // r6.z <- rgbarsp.z
                
                #line 362
                        nop 
                
                #line 295
                        if_z cb0[14].z
                
                #line 297
                          nop 
                
                #line 262
                          ieq r4.x, cb0[12].w, cb0[13].x
                
                #line 266
                          if_z r4.x
                            ieq r4.x, cb0[13].x, l(16)
                            if_nz r4.x
                
                #line 268
                              nop 
                
                #line 285
                            endif 
                          endif 
                
                #line 298
                          nop 
                
                #line 299
                          nop 
                
                #line 300
                        else   // Prior locations: r4.x <- rgbasub.x
                
                #line 295
                          mov r4.x, cb0[14].z  // r4.x <- DrawLine; r4.x <- DrawLine; r4.x <- DrawLine
                
                #line 301
                          ieq r4.x, r4.x, l(1)
                          if_nz r4.x
                
                #line 303
                            nop 
                
                #line 196
                            ieq r4.x, cb0[12].w, cb0[13].x
                            if_z r4.x
                
                #line 200
                              ieq r4.x, cb0[12].w, l(16)
                              if_nz r4.x
                
                #line 202
                                nop 
                
                #line 203
                              else 
                
                #line 204
                                ieq r4.x, cb0[12].w, l(1)
                                if_nz r4.x
                
                #line 206
                                  nop 
                
                #line 211
                                endif 
                              endif 
                            endif 
                
                #line 304
                            nop 
                
                #line 222
                            ine r4.x, cb0[13].z, cb0[13].y
                            if_nz r4.x
                
                #line 224
                              nop 
                
                #line 229
                            endif 
                
                #line 305
                            nop 
                
                #line 234
                            ieq r4.x, cb0[13].x, l(1)
                            ieq r4.y, cb0[13].x, l(4)
                            or r4.x, r4.y, r4.x
                            if_nz r4.x
                
                #line 236
                              ieq r4.x, cb0[12].w, l(16)
                              if_nz r4.x
                
                #line 238
                                nop 
                
                #line 189
                                nop 
                
                #line 190
                                nop 
                
                #line 239
                              else 
                
                #line 240
                                ieq r4.x, cb0[12].w, l(18)
                                if_nz r4.x
                
                #line 242
                                  nop 
                
                #line 189
                                  nop 
                
                #line 190
                                  nop 
                
                #line 247
                                endif 
                              endif 
                
                #line 252
                            endif 
                
                #line 306
                          else   // Prior locations: r4.y <- rgbasub.y
                
                #line 309
                            nop 
                
                #line 196
                            ieq r4.x, cb0[12].w, cb0[13].x
                            if_z r4.x
                
                #line 200
                              ieq r4.x, cb0[12].w, l(16)
                              if_nz r4.x
                
                #line 202
                                nop 
                
                #line 203
                              else 
                
                #line 204
                                ieq r4.x, cb0[12].w, l(1)
                                if_nz r4.x
                
                #line 206
                                  nop 
                
                #line 211
                                endif 
                              endif 
                            endif 
                
                #line 310
                            nop 
                
                #line 222
                            ine r4.x, cb0[13].z, cb0[13].y
                            if_nz r4.x
                
                #line 224
                              nop 
                
                #line 229
                            endif 
                
                #line 311
                            nop 
                
                #line 234
                            ieq r4.x, cb0[13].x, l(1)
                            ieq r4.y, cb0[13].x, l(4)
                            or r4.x, r4.y, r4.x
                            if_nz r4.x
                
                #line 236
                              ieq r4.x, cb0[12].w, l(16)
                              if_nz r4.x
                
                #line 238
                                nop 
                
                #line 189
                                nop 
                
                #line 190
                                nop 
                
                #line 239
                              else 
                
                #line 240
                                ieq r4.x, cb0[12].w, l(18)
                                if_nz r4.x
                
                #line 242
                                  nop 
                
                #line 189
                                  nop 
                
                #line 190
                                  nop 
                
                #line 247
                                endif 
                              endif 
                
                #line 252
                            endif 
                
                #line 312
                            nop 
                
                #line 262
                            ieq r4.x, cb0[12].w, cb0[13].x
                
                #line 266
                            if_z r4.x
                              ieq r4.x, cb0[13].x, l(16)
                              if_nz r4.x
                
                #line 268
                                nop 
                
                #line 285
                              endif 
                            endif 
                
                #line 313
                            nop 
                
                #line 314
                            nop 
                
                #line 315
                          endif 
                        endif 
                
                #line 363
                        itof r6.w, l(1)  // r6.w <- rgbarsp.w
                
                #line 364
                        mov r6.xyz, r6.xyzx  // r6.x <- <GetRGBA return value>.x; r6.y <- <GetRGBA return value>.y; r6.z <- <GetRGBA return value>.z
                        mov r6.w, r6.w  // r6.w <- <GetRGBA return value>.w
                
                #line 365
                      else 
                
                #line 366
                        ieq r4.x, cb0[12].x, l(1)
                        if_nz r4.x
                
                #line 368
                          sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v1.xyxx, t0.xyzw, s0  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 369
                          nop 
                          mov r4.xyzw, r4.xyzw
                
                #line 295
                          if_z cb0[14].z
                
                #line 297
                            nop 
                            mov r4.xyz, r4.xyzx
                
                #line 262
                            ieq r5.x, cb0[12].w, cb0[13].x
                            if_nz r5.x
                
                #line 264
                              mov r6.xyz, r4.xyzx
                
                #line 265
                            endif   // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 266
                            if_z r5.x
                              ieq r5.x, cb0[13].x, l(16)
                              if_nz r5.x
                
                #line 268
                                nop 
                                mov r4.xyz, r4.xyzx
                
                #line 170
                                mov r5.x, l(0.159302)  // r5.x <- ST2084_m1
                
                #line 171
                                mov r5.y, l(78.843750)  // r5.y <- ST2084_m2
                
                #line 172
                                mov r5.z, l(0.835938)  // r5.z <- ST2084_c1
                
                #line 173
                                mov r5.w, l(18.851562)  // r5.w <- ST2084_c2
                
                #line 174
                                mov r7.x, l(18.687500)  // r7.x <- ST2084_c3
                
                #line 175
                                itof r7.yzw, l(0, 1000, 1000, 1000)
                                div r7.yzw, r4.xxyz, r7.yyzw
                                log r7.yzw, r7.yyzw
                                mul r7.yzw, r5.xxxx, r7.yyzw
                                exp r7.yzw, r7.yyzw  // r7.y <- rgb.x; r7.z <- rgb.y; r7.w <- rgb.z
                
                #line 176
                                mul r8.xyz, r5.wwww, r7.yzwy
                                add r5.xzw, r5.zzzz, r8.xxyz
                                itof r8.xyz, l(1, 1, 1, 0)
                                mul r7.xyz, r7.yzwy, r7.xxxx
                                add r7.xyz, r7.xyzx, r8.xyzx
                                div r5.xzw, r5.xxzw, r7.xxyz  // r5.x <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 177
                                log r5.xzw, r5.xxzw
                                mul r5.xyz, r5.xzwx, r5.yyyy
                                exp r6.xyz, r5.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 178
                                mov r6.xyz, r6.xyzx  // r6.x <- <LineTOST2084 return value>.x; r6.y <- <LineTOST2084 return value>.y; r6.z <- <LineTOST2084 return value>.z
                
                #line 268
                                mov r6.xyz, r6.xyzx  // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 269
                              else 
                
                #line 270
                                ieq r5.x, cb0[13].x, l(18)
                                if_nz r5.x
                
                #line 272
                                  mov r6.xyz, r4.xyzx
                
                #line 273
                                else 
                
                #line 274
                                  ieq r5.x, cb0[13].x, l(1)
                                  if_nz r5.x
                
                #line 276
                                    log r5.xyz, r4.xyzx
                                    mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                    exp r6.xyz, r5.xyzx
                
                #line 277
                                  else 
                
                #line 278
                                    ieq r5.x, cb0[13].x, l(4)
                                    if_nz r5.x
                
                #line 280
                                      log r5.xyz, r4.xyzx
                                      mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                      exp r6.xyz, r5.xyzx
                
                #line 281
                                    else 
                
                #line 284
                                      mov r6.xyz, r4.xyzx
                
                #line 285
                                    endif 
                                  endif 
                                endif 
                              endif 
                            endif 
                
                #line 297
                            mov r6.xyz, r6.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 298
                            nop 
                            mov r6.xyz, r6.xyzx
                
                #line 257
                            mov r6.xyz, r6.xyzx  // r6.x <- <adjustRange return value>.x; r6.y <- <adjustRange return value>.y; r6.z <- <adjustRange return value>.z
                
                #line 298
                            mov r6.xyz, r6.xyzx
                
                #line 299
                            nop 
                            mov r6.xyz, r6.xyzx
                
                #line 290
                            mov r6.xyz, r6.xyzx  // r6.x <- <reorderPlanes return value>.x; r6.y <- <reorderPlanes return value>.y; r6.z <- <reorderPlanes return value>.z
                
                #line 299
                            mov r6.xyz, r6.xyzx
                
                #line 300
                          else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 295
                            mov r5.x, cb0[14].z  // r5.x <- DrawLine; r5.x <- DrawLine; r5.x <- DrawLine
                
                #line 301
                            ieq r5.x, r5.x, l(1)
                            if_nz r5.x
                
                #line 303
                              nop 
                              mov r6.xyzw, r4.xyzw
                
                #line 196
                              ieq r5.x, cb0[12].w, cb0[13].x
                              if_nz r5.x
                
                #line 198
                                mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 199
                              else 
                
                #line 200
                                ieq r5.x, cb0[12].w, l(16)
                                if_nz r5.x
                
                #line 202
                                  nop 
                                  mov r6.xyzw, r6.xyzw
                
                #line 131
                                  mov r5.x, l(0.835938)  // r5.x <- ST2084_c1
                
                #line 132
                                  mov r5.y, l(18.851562)  // r5.y <- ST2084_c2
                
                #line 133
                                  mov r5.z, l(18.687500)  // r5.z <- ST2084_c3
                
                #line 134
                                  itof r7.xyzw, l(0, 0, 0, 0)
                                  max r7.xyzw, r6.xyzw, r7.xyzw
                                  log r7.xyzw, r7.xyzw
                                  mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                  exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 135
                                  mov r8.xyzw, -r5.xxxx
                                  add r8.xyzw, r7.xyzw, r8.xyzw
                                  max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                  mul r7.xyzw, r5.zzzz, r7.xyzw
                                  mov r7.xyzw, -r7.xyzw
                                  add r5.xyzw, r5.yyyy, r7.xyzw
                                  div r5.xyzw, r8.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 136
                                  log r5.xyzw, r5.xyzw
                                  mul r5.xyzw, r5.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                  exp r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 137
                                  itof r7.xyzw, l(10000, 10000, 10000, 10000)
                                  mul r6.xyzw, r5.xyzw, r7.xyzw  // r6.x <- <ST2084TOLinear return value>.x; r6.y <- <ST2084TOLinear return value>.y; r6.z <- <ST2084TOLinear return value>.z; r6.w <- <ST2084TOLinear return value>.w
                
                #line 202
                                  mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 203
                                else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 204
                                  ieq r5.x, cb0[12].w, l(1)
                                  if_nz r5.x
                
                #line 206
                                    nop 
                                    mov r6.xyzw, r6.xyzw
                
                #line 152
                                    log r5.xyzw, r6.xyzw
                                    mul r5.xyzw, r5.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                    exp r6.xyzw, r5.xyzw  // r6.x <- <BT709TOLinear return value>.x; r6.y <- <BT709TOLinear return value>.y; r6.z <- <BT709TOLinear return value>.z; r6.w <- <BT709TOLinear return value>.w
                
                #line 206
                                    mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 207
                                  else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 210
                                    mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 211
                                  endif 
                                endif 
                              endif 
                
                #line 303
                              mov r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 304
                              nop 
                              mov r6.xyzw, r6.xyzw
                
                #line 222
                              ine r5.x, cb0[13].z, cb0[13].y
                              if_nz r5.x
                
                #line 224
                                nop 
                                mov r6.xyzw, r6.xyzw
                
                #line 217
                                dp4 r5.x, r6.xyzw, cb1[8].xyzw
                                dp4 r5.y, r6.xyzw, cb1[9].xyzw
                                dp4 r5.z, r6.xyzw, cb1[10].xyzw
                                itof r7.xyz, l(0, 0, 0, 0)
                                max r6.xyz, r5.xyzx, r7.xyzx  // r6.x <- <PrimariesTransform return value>.x; r6.y <- <PrimariesTransform return value>.y; r6.z <- <PrimariesTransform return value>.z
                
                #line 224
                                mov r6.xyz, r6.xyzx  // r6.x <- <transformPrimaries return value>.x; r6.y <- <transformPrimaries return value>.y; r6.z <- <transformPrimaries return value>.z
                
                #line 225
                              else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 228
                                mov r6.xyz, r6.xyzx  // r6.x <- <transformPrimaries return value>.x; r6.y <- <transformPrimaries return value>.y; r6.z <- <transformPrimaries return value>.z
                
                #line 229
                              endif 
                
                #line 304
                              mov r6.xyz, r6.xyzx
                
                #line 305
                              nop 
                              mov r6.xyz, r6.xyzx
                
                #line 234
                              ieq r5.x, cb0[13].x, l(1)
                              ieq r5.y, cb0[13].x, l(4)
                              or r5.x, r5.y, r5.x
                              if_nz r5.x
                
                #line 236
                                ieq r5.x, cb0[12].w, l(16)
                                if_nz r5.x
                
                #line 238
                                  nop 
                                  mov r6.xyz, r6.xyzx
                
                #line 189
                                  nop 
                                  mov r5.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                  mov r5.w, l(0.150000)  // r5.w <- A
                                  mov r7.x, l(0.500000)  // r7.x <- B
                
                #line 184
                                  mul r7.yzw, r5.xxyz, r5.wwww
                                  add r7.yzw, r7.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
                                  mul r7.yzw, r5.xxyz, r7.yyzw
                                  add r7.yzw, r7.yyzw, l(0.000000, 0.004000, 0.004000, 0.004000)
                                  mul r8.xyz, r5.xyzx, r5.wwww
                                  add r8.xyz, r7.xxxx, r8.xyzx
                                  mul r5.xyz, r5.xyzx, r8.xyzx
                                  add r5.xyz, r5.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                  div r5.xyz, r7.yzwy, r5.xyzx
                                  mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                  add r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- <hable return value>.x; r5.y <- <hable return value>.y; r5.z <- <hable return value>.z
                
                #line 189
                                  mov r5.xyz, r5.xyzx  // r5.x <- HABLE_DIV.x; r5.y <- HABLE_DIV.y; r5.z <- HABLE_DIV.z
                
                #line 190
                                  nop 
                                  mul r7.xyz, r6.xyzx, cb0[14].yyyy
                
                #line 183
                                  mov r5.w, l(0.150000)
                                  mov r7.w, l(0.500000)  // r7.w <- B
                
                #line 184
                                  mul r8.xyz, r7.xyzx, r5.wwww
                                  add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                  mul r8.xyz, r7.xyzx, r8.xyzx
                                  add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                  mul r9.xyz, r7.xyzx, r5.wwww
                                  add r9.xyz, r7.wwww, r9.xyzx
                                  mul r7.xyz, r7.xyzx, r9.xyzx
                                  add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                  div r7.xyz, r8.xyzx, r7.xyzx
                                  mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                  add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                                  div r6.xyz, r7.xyzx, r5.xyzx  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z
                
                #line 191
                                  mov r6.xyz, r6.xyzx  // r6.x <- <HDRToneMapping return value>.x; r6.y <- <HDRToneMapping return value>.y; r6.z <- <HDRToneMapping return value>.z
                
                #line 238
                                  mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 239
                                else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 240
                                  ieq r5.x, cb0[12].w, l(18)
                                  if_nz r5.x
                
                #line 242
                                    nop 
                                    mov r6.xyz, r6.xyzx
                
                #line 189
                                    nop 
                                    mov r5.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                    mov r5.w, l(0.150000)  // r5.w <- A
                                    mov r7.x, l(0.500000)  // r7.x <- B
                
                #line 184
                                    mul r7.yzw, r5.xxyz, r5.wwww
                                    add r7.yzw, r7.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
                                    mul r7.yzw, r5.xxyz, r7.yyzw
                                    add r7.yzw, r7.yyzw, l(0.000000, 0.004000, 0.004000, 0.004000)
                                    mul r8.xyz, r5.xyzx, r5.wwww
                                    add r8.xyz, r7.xxxx, r8.xyzx
                                    mul r5.xyz, r5.xyzx, r8.xyzx
                                    add r5.xyz, r5.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                    div r5.xyz, r7.yzwy, r5.xyzx
                                    mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                    add r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- <hable return value>.x; r5.y <- <hable return value>.y; r5.z <- <hable return value>.z
                
                #line 189
                                    mov r5.xyz, r5.xyzx  // r5.x <- HABLE_DIV.x; r5.y <- HABLE_DIV.y; r5.z <- HABLE_DIV.z
                
                #line 190
                                    nop 
                                    mul r7.xyz, r6.xyzx, cb0[14].yyyy
                
                #line 183
                                    mov r5.w, l(0.150000)
                                    mov r7.w, l(0.500000)  // r7.w <- B
                
                #line 184
                                    mul r8.xyz, r7.xyzx, r5.wwww
                                    add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                    mul r8.xyz, r7.xyzx, r8.xyzx
                                    add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                    mul r9.xyz, r7.xyzx, r5.wwww
                                    add r9.xyz, r7.wwww, r9.xyzx
                                    mul r7.xyz, r7.xyzx, r9.xyzx
                                    add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                    div r7.xyz, r8.xyzx, r7.xyzx
                                    mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                    add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                                    div r6.xyz, r7.xyzx, r5.xyzx  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z
                
                #line 191
                                    mov r6.xyz, r6.xyzx  // r6.x <- <HDRToneMapping return value>.x; r6.y <- <HDRToneMapping return value>.y; r6.z <- <HDRToneMapping return value>.z
                
                #line 242
                                    mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 243
                                  else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 246
                                    mul r6.xyz, r6.xyzx, cb0[14].yyyy  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 247
                                  endif 
                                endif 
                
                #line 248
                              else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 251
                                mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 252
                              endif 
                
                #line 305
                              mov r6.xyz, r6.xyzx
                
                #line 306
                            else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 309
                              nop 
                              mov r4.xyzw, r4.xyzw
                
                #line 196
                              ieq r5.x, cb0[12].w, cb0[13].x
                              if_nz r5.x
                
                #line 198
                                mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 199
                              else 
                
                #line 200
                                ieq r5.x, cb0[12].w, l(16)
                                if_nz r5.x
                
                #line 202
                                  nop 
                                  mov r4.xyzw, r4.xyzw
                
                #line 131
                                  mov r5.x, l(0.835938)  // r5.x <- ST2084_c1
                
                #line 132
                                  mov r5.y, l(18.851562)  // r5.y <- ST2084_c2
                
                #line 133
                                  mov r5.z, l(18.687500)  // r5.z <- ST2084_c3
                
                #line 134
                                  itof r7.xyzw, l(0, 0, 0, 0)
                                  max r7.xyzw, r4.xyzw, r7.xyzw
                                  log r7.xyzw, r7.xyzw
                                  mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                  exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 135
                                  mov r8.xyzw, -r5.xxxx
                                  add r8.xyzw, r7.xyzw, r8.xyzw
                                  max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                  mul r7.xyzw, r5.zzzz, r7.xyzw
                                  mov r7.xyzw, -r7.xyzw
                                  add r5.xyzw, r5.yyyy, r7.xyzw
                                  div r5.xyzw, r8.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 136
                                  log r5.xyzw, r5.xyzw
                                  mul r5.xyzw, r5.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                  exp r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 137
                                  itof r7.xyzw, l(10000, 10000, 10000, 10000)
                                  mul r4.xyzw, r5.xyzw, r7.xyzw  // r4.x <- <ST2084TOLinear return value>.x; r4.y <- <ST2084TOLinear return value>.y; r4.z <- <ST2084TOLinear return value>.z; r4.w <- <ST2084TOLinear return value>.w
                
                #line 202
                                  mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 203
                                else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 204
                                  ieq r5.x, cb0[12].w, l(1)
                                  if_nz r5.x
                
                #line 206
                                    nop 
                                    mov r4.xyzw, r4.xyzw
                
                #line 152
                                    log r5.xyzw, r4.xyzw
                                    mul r5.xyzw, r5.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                    exp r4.xyzw, r5.xyzw  // r4.x <- <BT709TOLinear return value>.x; r4.y <- <BT709TOLinear return value>.y; r4.z <- <BT709TOLinear return value>.z; r4.w <- <BT709TOLinear return value>.w
                
                #line 206
                                    mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 207
                                  else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 210
                                    mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 211
                                  endif 
                                endif 
                              endif 
                
                #line 309
                              mov r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 310
                              nop 
                              mov r4.xyzw, r4.xyzw
                
                #line 222
                              ine r5.x, cb0[13].z, cb0[13].y
                              if_nz r5.x
                
                #line 224
                                nop 
                                mov r4.xyzw, r4.xyzw
                
                #line 217
                                dp4 r5.x, r4.xyzw, cb1[8].xyzw
                                dp4 r5.y, r4.xyzw, cb1[9].xyzw
                                dp4 r5.z, r4.xyzw, cb1[10].xyzw
                                itof r7.xyz, l(0, 0, 0, 0)
                                max r4.xyz, r5.xyzx, r7.xyzx  // r4.x <- <PrimariesTransform return value>.x; r4.y <- <PrimariesTransform return value>.y; r4.z <- <PrimariesTransform return value>.z
                
                #line 224
                                mov r4.xyz, r4.xyzx  // r4.x <- <transformPrimaries return value>.x; r4.y <- <transformPrimaries return value>.y; r4.z <- <transformPrimaries return value>.z
                
                #line 225
                              else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 228
                                mov r4.xyz, r4.xyzx  // r4.x <- <transformPrimaries return value>.x; r4.y <- <transformPrimaries return value>.y; r4.z <- <transformPrimaries return value>.z
                
                #line 229
                              endif 
                
                #line 310
                              mov r4.xyz, r4.xyzx
                
                #line 311
                              nop 
                              mov r4.xyz, r4.xyzx
                
                #line 234
                              ieq r4.w, cb0[13].x, l(1)
                              ieq r5.x, cb0[13].x, l(4)
                              or r4.w, r4.w, r5.x
                              if_nz r4.w
                
                #line 236
                                ieq r4.w, cb0[12].w, l(16)
                                if_nz r4.w
                
                #line 238
                                  nop 
                                  mov r4.xyz, r4.xyzx
                
                #line 189
                                  nop 
                                  mov r5.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                  mov r4.w, l(0.150000)  // r4.w <- A
                                  mov r5.w, l(0.500000)  // r5.w <- B
                
                #line 184
                                  mul r7.xyz, r5.xyzx, r4.wwww
                                  add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                  mul r7.xyz, r5.xyzx, r7.xyzx
                                  add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                  mul r8.xyz, r5.xyzx, r4.wwww
                                  add r8.xyz, r5.wwww, r8.xyzx
                                  mul r5.xyz, r5.xyzx, r8.xyzx
                                  add r5.xyz, r5.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                  div r5.xyz, r7.xyzx, r5.xyzx
                                  mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                  add r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- <hable return value>.x; r5.y <- <hable return value>.y; r5.z <- <hable return value>.z
                
                #line 189
                                  mov r5.xyz, r5.xyzx  // r5.x <- HABLE_DIV.x; r5.y <- HABLE_DIV.y; r5.z <- HABLE_DIV.z
                
                #line 190
                                  nop 
                                  mul r7.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 183
                                  mov r4.w, l(0.150000)
                                  mov r5.w, l(0.500000)
                
                #line 184
                                  mul r8.xyz, r7.xyzx, r4.wwww
                                  add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                  mul r8.xyz, r7.xyzx, r8.xyzx
                                  add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                  mul r9.xyz, r7.xyzx, r4.wwww
                                  add r9.xyz, r5.wwww, r9.xyzx
                                  mul r7.xyz, r7.xyzx, r9.xyzx
                                  add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                  div r7.xyz, r8.xyzx, r7.xyzx
                                  mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                  add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                                  div r4.xyz, r7.xyzx, r5.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 191
                                  mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 238
                                  mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 239
                                else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 240
                                  ieq r4.w, cb0[12].w, l(18)
                                  if_nz r4.w
                
                #line 242
                                    nop 
                                    mov r4.xyz, r4.xyzx
                
                #line 189
                                    nop 
                                    mov r5.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                    mov r4.w, l(0.150000)  // r4.w <- A
                                    mov r5.w, l(0.500000)  // r5.w <- B
                
                #line 184
                                    mul r7.xyz, r5.xyzx, r4.wwww
                                    add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                    mul r7.xyz, r5.xyzx, r7.xyzx
                                    add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                    mul r8.xyz, r5.xyzx, r4.wwww
                                    add r8.xyz, r5.wwww, r8.xyzx
                                    mul r5.xyz, r5.xyzx, r8.xyzx
                                    add r5.xyz, r5.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                    div r5.xyz, r7.xyzx, r5.xyzx
                                    mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                    add r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- <hable return value>.x; r5.y <- <hable return value>.y; r5.z <- <hable return value>.z
                
                #line 189
                                    mov r5.xyz, r5.xyzx  // r5.x <- HABLE_DIV.x; r5.y <- HABLE_DIV.y; r5.z <- HABLE_DIV.z
                
                #line 190
                                    nop 
                                    mul r7.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 183
                                    mov r4.w, l(0.150000)
                                    mov r5.w, l(0.500000)
                
                #line 184
                                    mul r8.xyz, r7.xyzx, r4.wwww
                                    add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                    mul r8.xyz, r7.xyzx, r8.xyzx
                                    add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                    mul r9.xyz, r7.xyzx, r4.wwww
                                    add r9.xyz, r5.wwww, r9.xyzx
                                    mul r7.xyz, r7.xyzx, r9.xyzx
                                    add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                    div r7.xyz, r8.xyzx, r7.xyzx
                                    mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                    add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                                    div r4.xyz, r7.xyzx, r5.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 191
                                    mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 242
                                    mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 243
                                  else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 246
                                    mul r4.xyz, r4.xyzx, cb0[14].yyyy  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 247
                                  endif 
                                endif 
                
                #line 248
                              else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 251
                                mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 252
                              endif 
                
                #line 311
                              mov r4.xyz, r4.xyzx
                
                #line 312
                              nop 
                              mov r4.xyz, r4.xyzx
                
                #line 262
                              ieq r4.w, cb0[12].w, cb0[13].x
                              if_nz r4.w
                
                #line 264
                                mov r6.xyz, r4.xyzx
                
                #line 265
                              endif   // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 266
                              if_z r4.w
                                ieq r4.w, cb0[13].x, l(16)
                                if_nz r4.w
                
                #line 268
                                  nop 
                                  mov r4.xyz, r4.xyzx
                
                #line 170
                                  mov r4.w, l(0.159302)  // r4.w <- ST2084_m1
                
                #line 171
                                  mov r5.x, l(78.843750)  // r5.x <- ST2084_m2
                
                #line 172
                                  mov r5.y, l(0.835938)  // r5.y <- ST2084_c1
                
                #line 173
                                  mov r5.z, l(18.851562)  // r5.z <- ST2084_c2
                
                #line 174
                                  mov r5.w, l(18.687500)  // r5.w <- ST2084_c3
                
                #line 175
                                  itof r7.xyz, l(1000, 1000, 1000, 0)
                                  div r7.xyz, r4.xyzx, r7.xyzx
                                  log r7.xyz, r7.xyzx
                                  mul r7.xyz, r4.wwww, r7.xyzx
                                  exp r7.xyz, r7.xyzx  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z
                
                #line 176
                                  mul r8.xyz, r5.zzzz, r7.xyzx
                                  add r8.xyz, r5.yyyy, r8.xyzx
                                  itof r9.xyz, l(1, 1, 1, 0)
                                  mul r5.yzw, r5.wwww, r7.xxyz
                                  add r5.yzw, r5.yyzw, r9.xxyz
                                  div r5.yzw, r8.xxyz, r5.yyzw  // r5.y <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 177
                                  log r5.yzw, r5.yyzw
                                  mul r5.xyz, r5.yzwy, r5.xxxx
                                  exp r6.xyz, r5.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 178
                                  mov r6.xyz, r6.xyzx  // r6.x <- <LineTOST2084 return value>.x; r6.y <- <LineTOST2084 return value>.y; r6.z <- <LineTOST2084 return value>.z
                
                #line 268
                                  mov r6.xyz, r6.xyzx  // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 269
                                else 
                
                #line 270
                                  ieq r4.w, cb0[13].x, l(18)
                                  if_nz r4.w
                
                #line 272
                                    mov r6.xyz, r4.xyzx
                
                #line 273
                                  else 
                
                #line 274
                                    ieq r4.w, cb0[13].x, l(1)
                                    if_nz r4.w
                
                #line 276
                                      log r5.xyz, r4.xyzx
                                      mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                      exp r6.xyz, r5.xyzx
                
                #line 277
                                    else 
                
                #line 278
                                      ieq r4.w, cb0[13].x, l(4)
                                      if_nz r4.w
                
                #line 280
                                        log r5.xyz, r4.xyzx
                                        mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                        exp r6.xyz, r5.xyzx
                
                #line 281
                                      else 
                
                #line 284
                                        mov r6.xyz, r4.xyzx
                
                #line 285
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                
                #line 312
                              mov r6.xyz, r6.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 313
                              nop 
                              mov r6.xyz, r6.xyzx
                
                #line 257
                              mov r6.xyz, r6.xyzx  // r6.x <- <adjustRange return value>.x; r6.y <- <adjustRange return value>.y; r6.z <- <adjustRange return value>.z
                
                #line 313
                              mov r6.xyz, r6.xyzx
                
                #line 314
                              nop 
                              mov r6.xyz, r6.xyzx
                
                #line 290
                              mov r6.xyz, r6.xyzx  // r6.x <- <reorderPlanes return value>.x; r6.y <- <reorderPlanes return value>.y; r6.z <- <reorderPlanes return value>.z
                
                #line 314
                              mov r6.xyz, r6.xyzx
                
                #line 315
                            endif 
                          endif 
                
                #line 319
                          itof r6.w, l(1)  // r6.w <- <RenderFloat return value>.w
                          mov r6.xyz, r6.xyzx  // r6.x <- <RenderFloat return value>.x; r6.y <- <RenderFloat return value>.y; r6.z <- <RenderFloat return value>.z
                
                #line 369
                          mov r6.xyzw, r6.xyzw  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z; r6.w <- rgba.w
                
                #line 370
                          mov r6.xyzw, r6.xyzw  // r6.x <- <GetRGBA return value>.x; r6.y <- <GetRGBA return value>.y; r6.z <- <GetRGBA return value>.z; r6.w <- <GetRGBA return value>.w
                
                #line 371
                        else 
                
                #line 372
                          ieq r4.x, cb0[12].x, l(4)
                          if_nz r4.x
                
                #line 374
                            nop 
                
                #line 86
                            itof r4.xyz, l(0, 1, 0, 0)  // r4.x <- <PSPlanarRGB_Reverse return value>.x; r4.y <- <PSPlanarRGB_Reverse return value>.y; r4.z <- <PSPlanarRGB_Reverse return value>.z
                            mov r4.w, l(1.000000)  // r4.w <- <PSPlanarRGB_Reverse return value>.w
                
                #line 374
                            mov r4.xyzw, r4.xyzw  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 375
                            nop 
                            mov r4.xyzw, r4.xyzw
                
                #line 295
                            if_z cb0[14].z
                
                #line 297
                              nop 
                              mov r4.xyz, r4.xyzx
                
                #line 262
                              ieq r5.x, cb0[12].w, cb0[13].x
                              if_nz r5.x
                
                #line 264
                                mov r6.xyz, r4.xyzx
                
                #line 265
                              endif   // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 266
                              if_z r5.x
                                ieq r5.x, cb0[13].x, l(16)
                                if_nz r5.x
                
                #line 268
                                  nop 
                                  mov r4.xyz, r4.xyzx
                
                #line 170
                                  mov r5.x, l(0.159302)  // r5.x <- ST2084_m1
                
                #line 171
                                  mov r5.y, l(78.843750)  // r5.y <- ST2084_m2
                
                #line 172
                                  mov r5.z, l(0.835938)  // r5.z <- ST2084_c1
                
                #line 173
                                  mov r5.w, l(18.851562)  // r5.w <- ST2084_c2
                
                #line 174
                                  mov r7.x, l(18.687500)  // r7.x <- ST2084_c3
                
                #line 175
                                  itof r7.yzw, l(0, 1000, 1000, 1000)
                                  div r7.yzw, r4.xxyz, r7.yyzw
                                  log r7.yzw, r7.yyzw
                                  mul r7.yzw, r5.xxxx, r7.yyzw
                                  exp r7.yzw, r7.yyzw  // r7.y <- rgb.x; r7.z <- rgb.y; r7.w <- rgb.z
                
                #line 176
                                  mul r8.xyz, r5.wwww, r7.yzwy
                                  add r5.xzw, r5.zzzz, r8.xxyz
                                  itof r8.xyz, l(1, 1, 1, 0)
                                  mul r7.xyz, r7.yzwy, r7.xxxx
                                  add r7.xyz, r7.xyzx, r8.xyzx
                                  div r5.xzw, r5.xxzw, r7.xxyz  // r5.x <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 177
                                  log r5.xzw, r5.xxzw
                                  mul r5.xyz, r5.xzwx, r5.yyyy
                                  exp r6.xyz, r5.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 178
                                  mov r6.xyz, r6.xyzx  // r6.x <- <LineTOST2084 return value>.x; r6.y <- <LineTOST2084 return value>.y; r6.z <- <LineTOST2084 return value>.z
                
                #line 268
                                  mov r6.xyz, r6.xyzx  // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 269
                                else 
                
                #line 270
                                  ieq r5.x, cb0[13].x, l(18)
                                  if_nz r5.x
                
                #line 272
                                    mov r6.xyz, r4.xyzx
                
                #line 273
                                  else 
                
                #line 274
                                    ieq r5.x, cb0[13].x, l(1)
                                    if_nz r5.x
                
                #line 276
                                      log r5.xyz, r4.xyzx
                                      mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                      exp r6.xyz, r5.xyzx
                
                #line 277
                                    else 
                
                #line 278
                                      ieq r5.x, cb0[13].x, l(4)
                                      if_nz r5.x
                
                #line 280
                                        log r5.xyz, r4.xyzx
                                        mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                        exp r6.xyz, r5.xyzx
                
                #line 281
                                      else 
                
                #line 284
                                        mov r6.xyz, r4.xyzx
                
                #line 285
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                
                #line 297
                              mov r6.xyz, r6.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 298
                              nop 
                              mov r6.xyz, r6.xyzx
                
                #line 257
                              mov r6.xyz, r6.xyzx  // r6.x <- <adjustRange return value>.x; r6.y <- <adjustRange return value>.y; r6.z <- <adjustRange return value>.z
                
                #line 298
                              mov r6.xyz, r6.xyzx
                
                #line 299
                              nop 
                              mov r6.xyz, r6.xyzx
                
                #line 290
                              mov r6.xyz, r6.xyzx  // r6.x <- <reorderPlanes return value>.x; r6.y <- <reorderPlanes return value>.y; r6.z <- <reorderPlanes return value>.z
                
                #line 299
                              mov r6.xyz, r6.xyzx
                
                #line 300
                            else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 295
                              mov r5.x, cb0[14].z  // r5.x <- DrawLine; r5.x <- DrawLine; r5.x <- DrawLine
                
                #line 301
                              ieq r5.x, r5.x, l(1)
                              if_nz r5.x
                
                #line 303
                                nop 
                                mov r6.xyzw, r4.xyzw
                
                #line 196
                                ieq r5.x, cb0[12].w, cb0[13].x
                                if_nz r5.x
                
                #line 198
                                  mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 199
                                else 
                
                #line 200
                                  ieq r5.x, cb0[12].w, l(16)
                                  if_nz r5.x
                
                #line 202
                                    nop 
                                    mov r6.xyzw, r6.xyzw
                
                #line 131
                                    mov r5.x, l(0.835938)  // r5.x <- ST2084_c1
                
                #line 132
                                    mov r5.y, l(18.851562)  // r5.y <- ST2084_c2
                
                #line 133
                                    mov r5.z, l(18.687500)  // r5.z <- ST2084_c3
                
                #line 134
                                    itof r7.xyzw, l(0, 0, 0, 0)
                                    max r7.xyzw, r6.xyzw, r7.xyzw
                                    log r7.xyzw, r7.xyzw
                                    mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                    exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 135
                                    mov r8.xyzw, -r5.xxxx
                                    add r8.xyzw, r7.xyzw, r8.xyzw
                                    max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                    mul r7.xyzw, r5.zzzz, r7.xyzw
                                    mov r7.xyzw, -r7.xyzw
                                    add r5.xyzw, r5.yyyy, r7.xyzw
                                    div r5.xyzw, r8.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 136
                                    log r5.xyzw, r5.xyzw
                                    mul r5.xyzw, r5.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                    exp r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 137
                                    itof r7.xyzw, l(10000, 10000, 10000, 10000)
                                    mul r6.xyzw, r5.xyzw, r7.xyzw  // r6.x <- <ST2084TOLinear return value>.x; r6.y <- <ST2084TOLinear return value>.y; r6.z <- <ST2084TOLinear return value>.z; r6.w <- <ST2084TOLinear return value>.w
                
                #line 202
                                    mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 203
                                  else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 204
                                    ieq r5.x, cb0[12].w, l(1)
                                    if_nz r5.x
                
                #line 206
                                      nop 
                                      mov r6.xyzw, r6.xyzw
                
                #line 152
                                      log r5.xyzw, r6.xyzw
                                      mul r5.xyzw, r5.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                      exp r6.xyzw, r5.xyzw  // r6.x <- <BT709TOLinear return value>.x; r6.y <- <BT709TOLinear return value>.y; r6.z <- <BT709TOLinear return value>.z; r6.w <- <BT709TOLinear return value>.w
                
                #line 206
                                      mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 207
                                    else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 210
                                      mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 211
                                    endif 
                                  endif 
                                endif 
                
                #line 303
                                mov r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 304
                                nop 
                                mov r6.xyzw, r6.xyzw
                
                #line 222
                                ine r5.x, cb0[13].z, cb0[13].y
                                if_nz r5.x
                
                #line 224
                                  nop 
                                  mov r6.xyzw, r6.xyzw
                
                #line 217
                                  dp4 r5.x, r6.xyzw, cb1[8].xyzw
                                  dp4 r5.y, r6.xyzw, cb1[9].xyzw
                                  dp4 r5.z, r6.xyzw, cb1[10].xyzw
                                  itof r7.xyz, l(0, 0, 0, 0)
                                  max r6.xyz, r5.xyzx, r7.xyzx  // r6.x <- <PrimariesTransform return value>.x; r6.y <- <PrimariesTransform return value>.y; r6.z <- <PrimariesTransform return value>.z
                
                #line 224
                                  mov r6.xyz, r6.xyzx  // r6.x <- <transformPrimaries return value>.x; r6.y <- <transformPrimaries return value>.y; r6.z <- <transformPrimaries return value>.z
                
                #line 225
                                else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 228
                                  mov r6.xyz, r6.xyzx  // r6.x <- <transformPrimaries return value>.x; r6.y <- <transformPrimaries return value>.y; r6.z <- <transformPrimaries return value>.z
                
                #line 229
                                endif 
                
                #line 304
                                mov r6.xyz, r6.xyzx
                
                #line 305
                                nop 
                                mov r6.xyz, r6.xyzx
                
                #line 234
                                ieq r5.x, cb0[13].x, l(1)
                                ieq r5.y, cb0[13].x, l(4)
                                or r5.x, r5.y, r5.x
                                if_nz r5.x
                
                #line 236
                                  ieq r5.x, cb0[12].w, l(16)
                                  if_nz r5.x
                
                #line 238
                                    nop 
                                    mov r6.xyz, r6.xyzx
                
                #line 189
                                    nop 
                                    mov r5.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                    mov r5.w, l(0.150000)  // r5.w <- A
                                    mov r7.x, l(0.500000)  // r7.x <- B
                
                #line 184
                                    mul r7.yzw, r5.xxyz, r5.wwww
                                    add r7.yzw, r7.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
                                    mul r7.yzw, r5.xxyz, r7.yyzw
                                    add r7.yzw, r7.yyzw, l(0.000000, 0.004000, 0.004000, 0.004000)
                                    mul r8.xyz, r5.xyzx, r5.wwww
                                    add r8.xyz, r7.xxxx, r8.xyzx
                                    mul r5.xyz, r5.xyzx, r8.xyzx
                                    add r5.xyz, r5.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                    div r5.xyz, r7.yzwy, r5.xyzx
                                    mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                    add r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- <hable return value>.x; r5.y <- <hable return value>.y; r5.z <- <hable return value>.z
                
                #line 189
                                    mov r5.xyz, r5.xyzx  // r5.x <- HABLE_DIV.x; r5.y <- HABLE_DIV.y; r5.z <- HABLE_DIV.z
                
                #line 190
                                    nop 
                                    mul r7.xyz, r6.xyzx, cb0[14].yyyy
                
                #line 183
                                    mov r5.w, l(0.150000)
                                    mov r7.w, l(0.500000)  // r7.w <- B
                
                #line 184
                                    mul r8.xyz, r7.xyzx, r5.wwww
                                    add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                    mul r8.xyz, r7.xyzx, r8.xyzx
                                    add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                    mul r9.xyz, r7.xyzx, r5.wwww
                                    add r9.xyz, r7.wwww, r9.xyzx
                                    mul r7.xyz, r7.xyzx, r9.xyzx
                                    add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                    div r7.xyz, r8.xyzx, r7.xyzx
                                    mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                    add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                                    div r6.xyz, r7.xyzx, r5.xyzx  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z
                
                #line 191
                                    mov r6.xyz, r6.xyzx  // r6.x <- <HDRToneMapping return value>.x; r6.y <- <HDRToneMapping return value>.y; r6.z <- <HDRToneMapping return value>.z
                
                #line 238
                                    mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 239
                                  else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 240
                                    ieq r5.x, cb0[12].w, l(18)
                                    if_nz r5.x
                
                #line 242
                                      nop 
                                      mov r6.xyz, r6.xyzx
                
                #line 189
                                      nop 
                                      mov r5.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                      mov r5.w, l(0.150000)  // r5.w <- A
                                      mov r7.x, l(0.500000)  // r7.x <- B
                
                #line 184
                                      mul r7.yzw, r5.xxyz, r5.wwww
                                      add r7.yzw, r7.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
                                      mul r7.yzw, r5.xxyz, r7.yyzw
                                      add r7.yzw, r7.yyzw, l(0.000000, 0.004000, 0.004000, 0.004000)
                                      mul r8.xyz, r5.xyzx, r5.wwww
                                      add r8.xyz, r7.xxxx, r8.xyzx
                                      mul r5.xyz, r5.xyzx, r8.xyzx
                                      add r5.xyz, r5.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                      div r5.xyz, r7.yzwy, r5.xyzx
                                      mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                      add r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- <hable return value>.x; r5.y <- <hable return value>.y; r5.z <- <hable return value>.z
                
                #line 189
                                      mov r5.xyz, r5.xyzx  // r5.x <- HABLE_DIV.x; r5.y <- HABLE_DIV.y; r5.z <- HABLE_DIV.z
                
                #line 190
                                      nop 
                                      mul r7.xyz, r6.xyzx, cb0[14].yyyy
                
                #line 183
                                      mov r5.w, l(0.150000)
                                      mov r7.w, l(0.500000)  // r7.w <- B
                
                #line 184
                                      mul r8.xyz, r7.xyzx, r5.wwww
                                      add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                      mul r8.xyz, r7.xyzx, r8.xyzx
                                      add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                      mul r9.xyz, r7.xyzx, r5.wwww
                                      add r9.xyz, r7.wwww, r9.xyzx
                                      mul r7.xyz, r7.xyzx, r9.xyzx
                                      add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                      div r7.xyz, r8.xyzx, r7.xyzx
                                      mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                      add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                                      div r6.xyz, r7.xyzx, r5.xyzx  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z
                
                #line 191
                                      mov r6.xyz, r6.xyzx  // r6.x <- <HDRToneMapping return value>.x; r6.y <- <HDRToneMapping return value>.y; r6.z <- <HDRToneMapping return value>.z
                
                #line 242
                                      mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 243
                                    else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 246
                                      mul r6.xyz, r6.xyzx, cb0[14].yyyy  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 247
                                    endif 
                                  endif 
                
                #line 248
                                else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 251
                                  mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 252
                                endif 
                
                #line 305
                                mov r6.xyz, r6.xyzx
                
                #line 306
                              else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 309
                                nop 
                                mov r4.xyzw, r4.xyzw
                
                #line 196
                                ieq r5.x, cb0[12].w, cb0[13].x
                                if_nz r5.x
                
                #line 198
                                  mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 199
                                else 
                
                #line 200
                                  ieq r5.x, cb0[12].w, l(16)
                                  if_nz r5.x
                
                #line 202
                                    nop 
                                    mov r4.xyzw, r4.xyzw
                
                #line 131
                                    mov r5.x, l(0.835938)  // r5.x <- ST2084_c1
                
                #line 132
                                    mov r5.y, l(18.851562)  // r5.y <- ST2084_c2
                
                #line 133
                                    mov r5.z, l(18.687500)  // r5.z <- ST2084_c3
                
                #line 134
                                    itof r7.xyzw, l(0, 0, 0, 0)
                                    max r7.xyzw, r4.xyzw, r7.xyzw
                                    log r7.xyzw, r7.xyzw
                                    mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                    exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 135
                                    mov r8.xyzw, -r5.xxxx
                                    add r8.xyzw, r7.xyzw, r8.xyzw
                                    max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                    mul r7.xyzw, r5.zzzz, r7.xyzw
                                    mov r7.xyzw, -r7.xyzw
                                    add r5.xyzw, r5.yyyy, r7.xyzw
                                    div r5.xyzw, r8.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 136
                                    log r5.xyzw, r5.xyzw
                                    mul r5.xyzw, r5.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                    exp r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 137
                                    itof r7.xyzw, l(10000, 10000, 10000, 10000)
                                    mul r4.xyzw, r5.xyzw, r7.xyzw  // r4.x <- <ST2084TOLinear return value>.x; r4.y <- <ST2084TOLinear return value>.y; r4.z <- <ST2084TOLinear return value>.z; r4.w <- <ST2084TOLinear return value>.w
                
                #line 202
                                    mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 203
                                  else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 204
                                    ieq r5.x, cb0[12].w, l(1)
                                    if_nz r5.x
                
                #line 206
                                      nop 
                                      mov r4.xyzw, r4.xyzw
                
                #line 152
                                      log r5.xyzw, r4.xyzw
                                      mul r5.xyzw, r5.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                      exp r4.xyzw, r5.xyzw  // r4.x <- <BT709TOLinear return value>.x; r4.y <- <BT709TOLinear return value>.y; r4.z <- <BT709TOLinear return value>.z; r4.w <- <BT709TOLinear return value>.w
                
                #line 206
                                      mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 207
                                    else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 210
                                      mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 211
                                    endif 
                                  endif 
                                endif 
                
                #line 309
                                mov r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 310
                                nop 
                                mov r4.xyzw, r4.xyzw
                
                #line 222
                                ine r5.x, cb0[13].z, cb0[13].y
                                if_nz r5.x
                
                #line 224
                                  nop 
                                  mov r4.xyzw, r4.xyzw
                
                #line 217
                                  dp4 r5.x, r4.xyzw, cb1[8].xyzw
                                  dp4 r5.y, r4.xyzw, cb1[9].xyzw
                                  dp4 r5.z, r4.xyzw, cb1[10].xyzw
                                  itof r7.xyz, l(0, 0, 0, 0)
                                  max r4.xyz, r5.xyzx, r7.xyzx  // r4.x <- <PrimariesTransform return value>.x; r4.y <- <PrimariesTransform return value>.y; r4.z <- <PrimariesTransform return value>.z
                
                #line 224
                                  mov r4.xyz, r4.xyzx  // r4.x <- <transformPrimaries return value>.x; r4.y <- <transformPrimaries return value>.y; r4.z <- <transformPrimaries return value>.z
                
                #line 225
                                else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 228
                                  mov r4.xyz, r4.xyzx  // r4.x <- <transformPrimaries return value>.x; r4.y <- <transformPrimaries return value>.y; r4.z <- <transformPrimaries return value>.z
                
                #line 229
                                endif 
                
                #line 310
                                mov r4.xyz, r4.xyzx
                
                #line 311
                                nop 
                                mov r4.xyz, r4.xyzx
                
                #line 234
                                ieq r4.w, cb0[13].x, l(1)
                                ieq r5.x, cb0[13].x, l(4)
                                or r4.w, r4.w, r5.x
                                if_nz r4.w
                
                #line 236
                                  ieq r4.w, cb0[12].w, l(16)
                                  if_nz r4.w
                
                #line 238
                                    nop 
                                    mov r4.xyz, r4.xyzx
                
                #line 189
                                    nop 
                                    mov r5.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                    mov r4.w, l(0.150000)  // r4.w <- A
                                    mov r5.w, l(0.500000)  // r5.w <- B
                
                #line 184
                                    mul r7.xyz, r5.xyzx, r4.wwww
                                    add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                    mul r7.xyz, r5.xyzx, r7.xyzx
                                    add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                    mul r8.xyz, r5.xyzx, r4.wwww
                                    add r8.xyz, r5.wwww, r8.xyzx
                                    mul r5.xyz, r5.xyzx, r8.xyzx
                                    add r5.xyz, r5.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                    div r5.xyz, r7.xyzx, r5.xyzx
                                    mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                    add r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- <hable return value>.x; r5.y <- <hable return value>.y; r5.z <- <hable return value>.z
                
                #line 189
                                    mov r5.xyz, r5.xyzx  // r5.x <- HABLE_DIV.x; r5.y <- HABLE_DIV.y; r5.z <- HABLE_DIV.z
                
                #line 190
                                    nop 
                                    mul r7.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 183
                                    mov r4.w, l(0.150000)
                                    mov r5.w, l(0.500000)
                
                #line 184
                                    mul r8.xyz, r7.xyzx, r4.wwww
                                    add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                    mul r8.xyz, r7.xyzx, r8.xyzx
                                    add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                    mul r9.xyz, r7.xyzx, r4.wwww
                                    add r9.xyz, r5.wwww, r9.xyzx
                                    mul r7.xyz, r7.xyzx, r9.xyzx
                                    add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                    div r7.xyz, r8.xyzx, r7.xyzx
                                    mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                    add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                                    div r4.xyz, r7.xyzx, r5.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 191
                                    mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 238
                                    mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 239
                                  else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 240
                                    ieq r4.w, cb0[12].w, l(18)
                                    if_nz r4.w
                
                #line 242
                                      nop 
                                      mov r4.xyz, r4.xyzx
                
                #line 189
                                      nop 
                                      mov r5.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                      mov r4.w, l(0.150000)  // r4.w <- A
                                      mov r5.w, l(0.500000)  // r5.w <- B
                
                #line 184
                                      mul r7.xyz, r5.xyzx, r4.wwww
                                      add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                      mul r7.xyz, r5.xyzx, r7.xyzx
                                      add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                      mul r8.xyz, r5.xyzx, r4.wwww
                                      add r8.xyz, r5.wwww, r8.xyzx
                                      mul r5.xyz, r5.xyzx, r8.xyzx
                                      add r5.xyz, r5.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                      div r5.xyz, r7.xyzx, r5.xyzx
                                      mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                      add r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- <hable return value>.x; r5.y <- <hable return value>.y; r5.z <- <hable return value>.z
                
                #line 189
                                      mov r5.xyz, r5.xyzx  // r5.x <- HABLE_DIV.x; r5.y <- HABLE_DIV.y; r5.z <- HABLE_DIV.z
                
                #line 190
                                      nop 
                                      mul r7.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 183
                                      mov r4.w, l(0.150000)
                                      mov r5.w, l(0.500000)
                
                #line 184
                                      mul r8.xyz, r7.xyzx, r4.wwww
                                      add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                      mul r8.xyz, r7.xyzx, r8.xyzx
                                      add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                      mul r9.xyz, r7.xyzx, r4.wwww
                                      add r9.xyz, r5.wwww, r9.xyzx
                                      mul r7.xyz, r7.xyzx, r9.xyzx
                                      add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                      div r7.xyz, r8.xyzx, r7.xyzx
                                      mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                      add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                                      div r4.xyz, r7.xyzx, r5.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 191
                                      mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 242
                                      mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 243
                                    else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 246
                                      mul r4.xyz, r4.xyzx, cb0[14].yyyy  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 247
                                    endif 
                                  endif 
                
                #line 248
                                else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 251
                                  mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 252
                                endif 
                
                #line 311
                                mov r4.xyz, r4.xyzx
                
                #line 312
                                nop 
                                mov r4.xyz, r4.xyzx
                
                #line 262
                                ieq r4.w, cb0[12].w, cb0[13].x
                                if_nz r4.w
                
                #line 264
                                  mov r6.xyz, r4.xyzx
                
                #line 265
                                endif   // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 266
                                if_z r4.w
                                  ieq r4.w, cb0[13].x, l(16)
                                  if_nz r4.w
                
                #line 268
                                    nop 
                                    mov r4.xyz, r4.xyzx
                
                #line 170
                                    mov r4.w, l(0.159302)  // r4.w <- ST2084_m1
                
                #line 171
                                    mov r5.x, l(78.843750)  // r5.x <- ST2084_m2
                
                #line 172
                                    mov r5.y, l(0.835938)  // r5.y <- ST2084_c1
                
                #line 173
                                    mov r5.z, l(18.851562)  // r5.z <- ST2084_c2
                
                #line 174
                                    mov r5.w, l(18.687500)  // r5.w <- ST2084_c3
                
                #line 175
                                    itof r7.xyz, l(1000, 1000, 1000, 0)
                                    div r7.xyz, r4.xyzx, r7.xyzx
                                    log r7.xyz, r7.xyzx
                                    mul r7.xyz, r4.wwww, r7.xyzx
                                    exp r7.xyz, r7.xyzx  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z
                
                #line 176
                                    mul r8.xyz, r5.zzzz, r7.xyzx
                                    add r8.xyz, r5.yyyy, r8.xyzx
                                    itof r9.xyz, l(1, 1, 1, 0)
                                    mul r5.yzw, r5.wwww, r7.xxyz
                                    add r5.yzw, r5.yyzw, r9.xxyz
                                    div r5.yzw, r8.xxyz, r5.yyzw  // r5.y <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 177
                                    log r5.yzw, r5.yyzw
                                    mul r5.xyz, r5.yzwy, r5.xxxx
                                    exp r6.xyz, r5.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 178
                                    mov r6.xyz, r6.xyzx  // r6.x <- <LineTOST2084 return value>.x; r6.y <- <LineTOST2084 return value>.y; r6.z <- <LineTOST2084 return value>.z
                
                #line 268
                                    mov r6.xyz, r6.xyzx  // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 269
                                  else 
                
                #line 270
                                    ieq r4.w, cb0[13].x, l(18)
                                    if_nz r4.w
                
                #line 272
                                      mov r6.xyz, r4.xyzx
                
                #line 273
                                    else 
                
                #line 274
                                      ieq r4.w, cb0[13].x, l(1)
                                      if_nz r4.w
                
                #line 276
                                        log r5.xyz, r4.xyzx
                                        mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                        exp r6.xyz, r5.xyzx
                
                #line 277
                                      else 
                
                #line 278
                                        ieq r4.w, cb0[13].x, l(4)
                                        if_nz r4.w
                
                #line 280
                                          log r5.xyz, r4.xyzx
                                          mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                          exp r6.xyz, r5.xyzx
                
                #line 281
                                        else 
                
                #line 284
                                          mov r6.xyz, r4.xyzx
                
                #line 285
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                                endif 
                
                #line 312
                                mov r6.xyz, r6.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 313
                                nop 
                                mov r6.xyz, r6.xyzx
                
                #line 257
                                mov r6.xyz, r6.xyzx  // r6.x <- <adjustRange return value>.x; r6.y <- <adjustRange return value>.y; r6.z <- <adjustRange return value>.z
                
                #line 313
                                mov r6.xyz, r6.xyzx
                
                #line 314
                                nop 
                                mov r6.xyz, r6.xyzx
                
                #line 290
                                mov r6.xyz, r6.xyzx  // r6.x <- <reorderPlanes return value>.x; r6.y <- <reorderPlanes return value>.y; r6.z <- <reorderPlanes return value>.z
                
                #line 314
                                mov r6.xyz, r6.xyzx
                
                #line 315
                              endif 
                            endif 
                
                #line 319
                            itof r6.w, l(1)  // r6.w <- <RenderFloat return value>.w
                            mov r6.xyz, r6.xyzx  // r6.x <- <RenderFloat return value>.x; r6.y <- <RenderFloat return value>.y; r6.z <- <RenderFloat return value>.z
                
                #line 375
                            mov r6.xyzw, r6.xyzw  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z; r6.w <- rgba.w
                
                #line 376
                            mov r6.xyzw, r6.xyzw  // r6.x <- <GetRGBA return value>.x; r6.y <- <GetRGBA return value>.y; r6.z <- <GetRGBA return value>.z; r6.w <- <GetRGBA return value>.w
                
                #line 377
                          else 
                
                #line 378
                            ieq r4.x, cb0[12].x, l(7)
                            if_nz r4.x
                
                #line 380
                              sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v1.xyxx, t0.xyzw, s0  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 381
                              nop 
                              mov r4.xyzw, r4.xyzw
                
                #line 295
                              if_z cb0[14].z
                
                #line 297
                                nop 
                                mov r4.xyz, r4.xyzx
                
                #line 262
                                ieq r5.x, cb0[12].w, cb0[13].x
                                if_nz r5.x
                
                #line 264
                                  mov r6.xyz, r4.xyzx
                
                #line 265
                                endif   // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 266
                                if_z r5.x
                                  ieq r5.x, cb0[13].x, l(16)
                                  if_nz r5.x
                
                #line 268
                                    nop 
                                    mov r4.xyz, r4.xyzx
                
                #line 170
                                    mov r5.x, l(0.159302)  // r5.x <- ST2084_m1
                
                #line 171
                                    mov r5.y, l(78.843750)  // r5.y <- ST2084_m2
                
                #line 172
                                    mov r5.z, l(0.835938)  // r5.z <- ST2084_c1
                
                #line 173
                                    mov r5.w, l(18.851562)  // r5.w <- ST2084_c2
                
                #line 174
                                    mov r7.x, l(18.687500)  // r7.x <- ST2084_c3
                
                #line 175
                                    itof r7.yzw, l(0, 1000, 1000, 1000)
                                    div r7.yzw, r4.xxyz, r7.yyzw
                                    log r7.yzw, r7.yyzw
                                    mul r7.yzw, r5.xxxx, r7.yyzw
                                    exp r7.yzw, r7.yyzw  // r7.y <- rgb.x; r7.z <- rgb.y; r7.w <- rgb.z
                
                #line 176
                                    mul r8.xyz, r5.wwww, r7.yzwy
                                    add r5.xzw, r5.zzzz, r8.xxyz
                                    itof r8.xyz, l(1, 1, 1, 0)
                                    mul r7.xyz, r7.yzwy, r7.xxxx
                                    add r7.xyz, r7.xyzx, r8.xyzx
                                    div r5.xzw, r5.xxzw, r7.xxyz  // r5.x <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 177
                                    log r5.xzw, r5.xxzw
                                    mul r5.xyz, r5.xzwx, r5.yyyy
                                    exp r6.xyz, r5.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 178
                                    mov r6.xyz, r6.xyzx  // r6.x <- <LineTOST2084 return value>.x; r6.y <- <LineTOST2084 return value>.y; r6.z <- <LineTOST2084 return value>.z
                
                #line 268
                                    mov r6.xyz, r6.xyzx  // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 269
                                  else 
                
                #line 270
                                    ieq r5.x, cb0[13].x, l(18)
                                    if_nz r5.x
                
                #line 272
                                      mov r6.xyz, r4.xyzx
                
                #line 273
                                    else 
                
                #line 274
                                      ieq r5.x, cb0[13].x, l(1)
                                      if_nz r5.x
                
                #line 276
                                        log r5.xyz, r4.xyzx
                                        mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                        exp r6.xyz, r5.xyzx
                
                #line 277
                                      else 
                
                #line 278
                                        ieq r5.x, cb0[13].x, l(4)
                                        if_nz r5.x
                
                #line 280
                                          log r5.xyz, r4.xyzx
                                          mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                          exp r6.xyz, r5.xyzx
                
                #line 281
                                        else 
                
                #line 284
                                          mov r6.xyz, r4.xyzx
                
                #line 285
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                                endif 
                
                #line 297
                                mov r6.xyz, r6.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 298
                                nop 
                                mov r6.xyz, r6.xyzx
                
                #line 257
                                mov r6.xyz, r6.xyzx  // r6.x <- <adjustRange return value>.x; r6.y <- <adjustRange return value>.y; r6.z <- <adjustRange return value>.z
                
                #line 298
                                mov r6.xyz, r6.xyzx
                
                #line 299
                                nop 
                                mov r6.xyz, r6.xyzx
                
                #line 290
                                mov r6.xyz, r6.xyzx  // r6.x <- <reorderPlanes return value>.x; r6.y <- <reorderPlanes return value>.y; r6.z <- <reorderPlanes return value>.z
                
                #line 299
                                mov r6.xyz, r6.xyzx
                
                #line 300
                              else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 295
                                mov r5.x, cb0[14].z  // r5.x <- DrawLine; r5.x <- DrawLine; r5.x <- DrawLine
                
                #line 301
                                ieq r5.x, r5.x, l(1)
                                if_nz r5.x
                
                #line 303
                                  nop 
                                  mov r6.xyzw, r4.xyzw
                
                #line 196
                                  ieq r5.x, cb0[12].w, cb0[13].x
                                  if_nz r5.x
                
                #line 198
                                    mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 199
                                  else 
                
                #line 200
                                    ieq r5.x, cb0[12].w, l(16)
                                    if_nz r5.x
                
                #line 202
                                      nop 
                                      mov r6.xyzw, r6.xyzw
                
                #line 131
                                      mov r5.x, l(0.835938)  // r5.x <- ST2084_c1
                
                #line 132
                                      mov r5.y, l(18.851562)  // r5.y <- ST2084_c2
                
                #line 133
                                      mov r5.z, l(18.687500)  // r5.z <- ST2084_c3
                
                #line 134
                                      itof r7.xyzw, l(0, 0, 0, 0)
                                      max r7.xyzw, r6.xyzw, r7.xyzw
                                      log r7.xyzw, r7.xyzw
                                      mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                      exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 135
                                      mov r8.xyzw, -r5.xxxx
                                      add r8.xyzw, r7.xyzw, r8.xyzw
                                      max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                      mul r7.xyzw, r5.zzzz, r7.xyzw
                                      mov r7.xyzw, -r7.xyzw
                                      add r5.xyzw, r5.yyyy, r7.xyzw
                                      div r5.xyzw, r8.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 136
                                      log r5.xyzw, r5.xyzw
                                      mul r5.xyzw, r5.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                      exp r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 137
                                      itof r7.xyzw, l(10000, 10000, 10000, 10000)
                                      mul r6.xyzw, r5.xyzw, r7.xyzw  // r6.x <- <ST2084TOLinear return value>.x; r6.y <- <ST2084TOLinear return value>.y; r6.z <- <ST2084TOLinear return value>.z; r6.w <- <ST2084TOLinear return value>.w
                
                #line 202
                                      mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 203
                                    else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 204
                                      ieq r5.x, cb0[12].w, l(1)
                                      if_nz r5.x
                
                #line 206
                                        nop 
                                        mov r6.xyzw, r6.xyzw
                
                #line 152
                                        log r5.xyzw, r6.xyzw
                                        mul r5.xyzw, r5.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                        exp r6.xyzw, r5.xyzw  // r6.x <- <BT709TOLinear return value>.x; r6.y <- <BT709TOLinear return value>.y; r6.z <- <BT709TOLinear return value>.z; r6.w <- <BT709TOLinear return value>.w
                
                #line 206
                                        mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 207
                                      else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 210
                                        mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 211
                                      endif 
                                    endif 
                                  endif 
                
                #line 303
                                  mov r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 304
                                  nop 
                                  mov r6.xyzw, r6.xyzw
                
                #line 222
                                  ine r5.x, cb0[13].z, cb0[13].y
                                  if_nz r5.x
                
                #line 224
                                    nop 
                                    mov r6.xyzw, r6.xyzw
                
                #line 217
                                    dp4 r5.x, r6.xyzw, cb1[8].xyzw
                                    dp4 r5.y, r6.xyzw, cb1[9].xyzw
                                    dp4 r5.z, r6.xyzw, cb1[10].xyzw
                                    itof r7.xyz, l(0, 0, 0, 0)
                                    max r6.xyz, r5.xyzx, r7.xyzx  // r6.x <- <PrimariesTransform return value>.x; r6.y <- <PrimariesTransform return value>.y; r6.z <- <PrimariesTransform return value>.z
                
                #line 224
                                    mov r6.xyz, r6.xyzx  // r6.x <- <transformPrimaries return value>.x; r6.y <- <transformPrimaries return value>.y; r6.z <- <transformPrimaries return value>.z
                
                #line 225
                                  else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 228
                                    mov r6.xyz, r6.xyzx  // r6.x <- <transformPrimaries return value>.x; r6.y <- <transformPrimaries return value>.y; r6.z <- <transformPrimaries return value>.z
                
                #line 229
                                  endif 
                
                #line 304
                                  mov r6.xyz, r6.xyzx
                
                #line 305
                                  nop 
                                  mov r6.xyz, r6.xyzx
                
                #line 234
                                  ieq r5.x, cb0[13].x, l(1)
                                  ieq r5.y, cb0[13].x, l(4)
                                  or r5.x, r5.y, r5.x
                                  if_nz r5.x
                
                #line 236
                                    ieq r5.x, cb0[12].w, l(16)
                                    if_nz r5.x
                
                #line 238
                                      nop 
                                      mov r6.xyz, r6.xyzx
                
                #line 189
                                      nop 
                                      mov r5.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                      mov r5.w, l(0.150000)  // r5.w <- A
                                      mov r7.x, l(0.500000)  // r7.x <- B
                
                #line 184
                                      mul r7.yzw, r5.xxyz, r5.wwww
                                      add r7.yzw, r7.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
                                      mul r7.yzw, r5.xxyz, r7.yyzw
                                      add r7.yzw, r7.yyzw, l(0.000000, 0.004000, 0.004000, 0.004000)
                                      mul r8.xyz, r5.xyzx, r5.wwww
                                      add r8.xyz, r7.xxxx, r8.xyzx
                                      mul r5.xyz, r5.xyzx, r8.xyzx
                                      add r5.xyz, r5.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                      div r5.xyz, r7.yzwy, r5.xyzx
                                      mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                      add r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- <hable return value>.x; r5.y <- <hable return value>.y; r5.z <- <hable return value>.z
                
                #line 189
                                      mov r5.xyz, r5.xyzx  // r5.x <- HABLE_DIV.x; r5.y <- HABLE_DIV.y; r5.z <- HABLE_DIV.z
                
                #line 190
                                      nop 
                                      mul r7.xyz, r6.xyzx, cb0[14].yyyy
                
                #line 183
                                      mov r5.w, l(0.150000)
                                      mov r7.w, l(0.500000)  // r7.w <- B
                
                #line 184
                                      mul r8.xyz, r7.xyzx, r5.wwww
                                      add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                      mul r8.xyz, r7.xyzx, r8.xyzx
                                      add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                      mul r9.xyz, r7.xyzx, r5.wwww
                                      add r9.xyz, r7.wwww, r9.xyzx
                                      mul r7.xyz, r7.xyzx, r9.xyzx
                                      add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                      div r7.xyz, r8.xyzx, r7.xyzx
                                      mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                      add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                                      div r6.xyz, r7.xyzx, r5.xyzx  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z
                
                #line 191
                                      mov r6.xyz, r6.xyzx  // r6.x <- <HDRToneMapping return value>.x; r6.y <- <HDRToneMapping return value>.y; r6.z <- <HDRToneMapping return value>.z
                
                #line 238
                                      mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 239
                                    else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 240
                                      ieq r5.x, cb0[12].w, l(18)
                                      if_nz r5.x
                
                #line 242
                                        nop 
                                        mov r6.xyz, r6.xyzx
                
                #line 189
                                        nop 
                                        mov r5.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                        mov r5.w, l(0.150000)  // r5.w <- A
                                        mov r7.x, l(0.500000)  // r7.x <- B
                
                #line 184
                                        mul r7.yzw, r5.xxyz, r5.wwww
                                        add r7.yzw, r7.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
                                        mul r7.yzw, r5.xxyz, r7.yyzw
                                        add r7.yzw, r7.yyzw, l(0.000000, 0.004000, 0.004000, 0.004000)
                                        mul r8.xyz, r5.xyzx, r5.wwww
                                        add r8.xyz, r7.xxxx, r8.xyzx
                                        mul r5.xyz, r5.xyzx, r8.xyzx
                                        add r5.xyz, r5.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                        div r5.xyz, r7.yzwy, r5.xyzx
                                        mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                        add r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- <hable return value>.x; r5.y <- <hable return value>.y; r5.z <- <hable return value>.z
                
                #line 189
                                        mov r5.xyz, r5.xyzx  // r5.x <- HABLE_DIV.x; r5.y <- HABLE_DIV.y; r5.z <- HABLE_DIV.z
                
                #line 190
                                        nop 
                                        mul r7.xyz, r6.xyzx, cb0[14].yyyy
                
                #line 183
                                        mov r5.w, l(0.150000)
                                        mov r7.w, l(0.500000)  // r7.w <- B
                
                #line 184
                                        mul r8.xyz, r7.xyzx, r5.wwww
                                        add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                        mul r8.xyz, r7.xyzx, r8.xyzx
                                        add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                        mul r9.xyz, r7.xyzx, r5.wwww
                                        add r9.xyz, r7.wwww, r9.xyzx
                                        mul r7.xyz, r7.xyzx, r9.xyzx
                                        add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                        div r7.xyz, r8.xyzx, r7.xyzx
                                        mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                        add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                                        div r6.xyz, r7.xyzx, r5.xyzx  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z
                
                #line 191
                                        mov r6.xyz, r6.xyzx  // r6.x <- <HDRToneMapping return value>.x; r6.y <- <HDRToneMapping return value>.y; r6.z <- <HDRToneMapping return value>.z
                
                #line 242
                                        mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 243
                                      else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 246
                                        mul r6.xyz, r6.xyzx, cb0[14].yyyy  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 247
                                      endif 
                                    endif 
                
                #line 248
                                  else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 251
                                    mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 252
                                  endif 
                
                #line 305
                                  mov r6.xyz, r6.xyzx
                
                #line 306
                                else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 309
                                  nop 
                                  mov r4.xyzw, r4.xyzw
                
                #line 196
                                  ieq r5.x, cb0[12].w, cb0[13].x
                                  if_nz r5.x
                
                #line 198
                                    mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 199
                                  else 
                
                #line 200
                                    ieq r5.x, cb0[12].w, l(16)
                                    if_nz r5.x
                
                #line 202
                                      nop 
                                      mov r4.xyzw, r4.xyzw
                
                #line 131
                                      mov r5.x, l(0.835938)  // r5.x <- ST2084_c1
                
                #line 132
                                      mov r5.y, l(18.851562)  // r5.y <- ST2084_c2
                
                #line 133
                                      mov r5.z, l(18.687500)  // r5.z <- ST2084_c3
                
                #line 134
                                      itof r7.xyzw, l(0, 0, 0, 0)
                                      max r7.xyzw, r4.xyzw, r7.xyzw
                                      log r7.xyzw, r7.xyzw
                                      mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                      exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 135
                                      mov r8.xyzw, -r5.xxxx
                                      add r8.xyzw, r7.xyzw, r8.xyzw
                                      max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                      mul r7.xyzw, r5.zzzz, r7.xyzw
                                      mov r7.xyzw, -r7.xyzw
                                      add r5.xyzw, r5.yyyy, r7.xyzw
                                      div r5.xyzw, r8.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 136
                                      log r5.xyzw, r5.xyzw
                                      mul r5.xyzw, r5.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                      exp r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 137
                                      itof r7.xyzw, l(10000, 10000, 10000, 10000)
                                      mul r4.xyzw, r5.xyzw, r7.xyzw  // r4.x <- <ST2084TOLinear return value>.x; r4.y <- <ST2084TOLinear return value>.y; r4.z <- <ST2084TOLinear return value>.z; r4.w <- <ST2084TOLinear return value>.w
                
                #line 202
                                      mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 203
                                    else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 204
                                      ieq r5.x, cb0[12].w, l(1)
                                      if_nz r5.x
                
                #line 206
                                        nop 
                                        mov r4.xyzw, r4.xyzw
                
                #line 152
                                        log r5.xyzw, r4.xyzw
                                        mul r5.xyzw, r5.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                        exp r4.xyzw, r5.xyzw  // r4.x <- <BT709TOLinear return value>.x; r4.y <- <BT709TOLinear return value>.y; r4.z <- <BT709TOLinear return value>.z; r4.w <- <BT709TOLinear return value>.w
                
                #line 206
                                        mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 207
                                      else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 210
                                        mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 211
                                      endif 
                                    endif 
                                  endif 
                
                #line 309
                                  mov r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 310
                                  nop 
                                  mov r4.xyzw, r4.xyzw
                
                #line 222
                                  ine r5.x, cb0[13].z, cb0[13].y
                                  if_nz r5.x
                
                #line 224
                                    nop 
                                    mov r4.xyzw, r4.xyzw
                
                #line 217
                                    dp4 r5.x, r4.xyzw, cb1[8].xyzw
                                    dp4 r5.y, r4.xyzw, cb1[9].xyzw
                                    dp4 r5.z, r4.xyzw, cb1[10].xyzw
                                    itof r7.xyz, l(0, 0, 0, 0)
                                    max r4.xyz, r5.xyzx, r7.xyzx  // r4.x <- <PrimariesTransform return value>.x; r4.y <- <PrimariesTransform return value>.y; r4.z <- <PrimariesTransform return value>.z
                
                #line 224
                                    mov r4.xyz, r4.xyzx  // r4.x <- <transformPrimaries return value>.x; r4.y <- <transformPrimaries return value>.y; r4.z <- <transformPrimaries return value>.z
                
                #line 225
                                  else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 228
                                    mov r4.xyz, r4.xyzx  // r4.x <- <transformPrimaries return value>.x; r4.y <- <transformPrimaries return value>.y; r4.z <- <transformPrimaries return value>.z
                
                #line 229
                                  endif 
                
                #line 310
                                  mov r4.xyz, r4.xyzx
                
                #line 311
                                  nop 
                                  mov r4.xyz, r4.xyzx
                
                #line 234
                                  ieq r4.w, cb0[13].x, l(1)
                                  ieq r5.x, cb0[13].x, l(4)
                                  or r4.w, r4.w, r5.x
                                  if_nz r4.w
                
                #line 236
                                    ieq r4.w, cb0[12].w, l(16)
                                    if_nz r4.w
                
                #line 238
                                      nop 
                                      mov r4.xyz, r4.xyzx
                
                #line 189
                                      nop 
                                      mov r5.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                      mov r4.w, l(0.150000)  // r4.w <- A
                                      mov r5.w, l(0.500000)  // r5.w <- B
                
                #line 184
                                      mul r7.xyz, r5.xyzx, r4.wwww
                                      add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                      mul r7.xyz, r5.xyzx, r7.xyzx
                                      add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                      mul r8.xyz, r5.xyzx, r4.wwww
                                      add r8.xyz, r5.wwww, r8.xyzx
                                      mul r5.xyz, r5.xyzx, r8.xyzx
                                      add r5.xyz, r5.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                      div r5.xyz, r7.xyzx, r5.xyzx
                                      mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                      add r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- <hable return value>.x; r5.y <- <hable return value>.y; r5.z <- <hable return value>.z
                
                #line 189
                                      mov r5.xyz, r5.xyzx  // r5.x <- HABLE_DIV.x; r5.y <- HABLE_DIV.y; r5.z <- HABLE_DIV.z
                
                #line 190
                                      nop 
                                      mul r7.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 183
                                      mov r4.w, l(0.150000)
                                      mov r5.w, l(0.500000)
                
                #line 184
                                      mul r8.xyz, r7.xyzx, r4.wwww
                                      add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                      mul r8.xyz, r7.xyzx, r8.xyzx
                                      add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                      mul r9.xyz, r7.xyzx, r4.wwww
                                      add r9.xyz, r5.wwww, r9.xyzx
                                      mul r7.xyz, r7.xyzx, r9.xyzx
                                      add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                      div r7.xyz, r8.xyzx, r7.xyzx
                                      mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                      add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                                      div r4.xyz, r7.xyzx, r5.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 191
                                      mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 238
                                      mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 239
                                    else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 240
                                      ieq r4.w, cb0[12].w, l(18)
                                      if_nz r4.w
                
                #line 242
                                        nop 
                                        mov r4.xyz, r4.xyzx
                
                #line 189
                                        nop 
                                        mov r5.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                        mov r4.w, l(0.150000)  // r4.w <- A
                                        mov r5.w, l(0.500000)  // r5.w <- B
                
                #line 184
                                        mul r7.xyz, r5.xyzx, r4.wwww
                                        add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                        mul r7.xyz, r5.xyzx, r7.xyzx
                                        add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                        mul r8.xyz, r5.xyzx, r4.wwww
                                        add r8.xyz, r5.wwww, r8.xyzx
                                        mul r5.xyz, r5.xyzx, r8.xyzx
                                        add r5.xyz, r5.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                        div r5.xyz, r7.xyzx, r5.xyzx
                                        mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                        add r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- <hable return value>.x; r5.y <- <hable return value>.y; r5.z <- <hable return value>.z
                
                #line 189
                                        mov r5.xyz, r5.xyzx  // r5.x <- HABLE_DIV.x; r5.y <- HABLE_DIV.y; r5.z <- HABLE_DIV.z
                
                #line 190
                                        nop 
                                        mul r7.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 183
                                        mov r4.w, l(0.150000)
                                        mov r5.w, l(0.500000)
                
                #line 184
                                        mul r8.xyz, r7.xyzx, r4.wwww
                                        add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                        mul r8.xyz, r7.xyzx, r8.xyzx
                                        add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                        mul r9.xyz, r7.xyzx, r4.wwww
                                        add r9.xyz, r5.wwww, r9.xyzx
                                        mul r7.xyz, r7.xyzx, r9.xyzx
                                        add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                        div r7.xyz, r8.xyzx, r7.xyzx
                                        mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                        add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 190
                                        div r4.xyz, r7.xyzx, r5.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 191
                                        mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 242
                                        mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 243
                                      else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 246
                                        mul r4.xyz, r4.xyzx, cb0[14].yyyy  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 247
                                      endif 
                                    endif 
                
                #line 248
                                  else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 251
                                    mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 252
                                  endif 
                
                #line 311
                                  mov r4.xyz, r4.xyzx
                
                #line 312
                                  nop 
                                  mov r4.xyz, r4.xyzx
                
                #line 262
                                  ieq r4.w, cb0[12].w, cb0[13].x
                                  if_nz r4.w
                
                #line 264
                                    mov r6.xyz, r4.xyzx
                
                #line 265
                                  endif   // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 266
                                  if_z r4.w
                                    ieq r4.w, cb0[13].x, l(16)
                                    if_nz r4.w
                
                #line 268
                                      nop 
                                      mov r4.xyz, r4.xyzx
                
                #line 170
                                      mov r4.w, l(0.159302)  // r4.w <- ST2084_m1
                
                #line 171
                                      mov r5.x, l(78.843750)  // r5.x <- ST2084_m2
                
                #line 172
                                      mov r5.y, l(0.835938)  // r5.y <- ST2084_c1
                
                #line 173
                                      mov r5.z, l(18.851562)  // r5.z <- ST2084_c2
                
                #line 174
                                      mov r5.w, l(18.687500)  // r5.w <- ST2084_c3
                
                #line 175
                                      itof r7.xyz, l(1000, 1000, 1000, 0)
                                      div r7.xyz, r4.xyzx, r7.xyzx
                                      log r7.xyz, r7.xyzx
                                      mul r7.xyz, r4.wwww, r7.xyzx
                                      exp r7.xyz, r7.xyzx  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z
                
                #line 176
                                      mul r8.xyz, r5.zzzz, r7.xyzx
                                      add r8.xyz, r5.yyyy, r8.xyzx
                                      itof r9.xyz, l(1, 1, 1, 0)
                                      mul r5.yzw, r5.wwww, r7.xxyz
                                      add r5.yzw, r5.yyzw, r9.xxyz
                                      div r5.yzw, r8.xxyz, r5.yyzw  // r5.y <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 177
                                      log r5.yzw, r5.yyzw
                                      mul r5.xyz, r5.yzwy, r5.xxxx
                                      exp r6.xyz, r5.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 178
                                      mov r6.xyz, r6.xyzx  // r6.x <- <LineTOST2084 return value>.x; r6.y <- <LineTOST2084 return value>.y; r6.z <- <LineTOST2084 return value>.z
                
                #line 268
                                      mov r6.xyz, r6.xyzx  // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 269
                                    else 
                
                #line 270
                                      ieq r4.w, cb0[13].x, l(18)
                                      if_nz r4.w
                
                #line 272
                                        mov r6.xyz, r4.xyzx
                
                #line 273
                                      else 
                
                #line 274
                                        ieq r4.w, cb0[13].x, l(1)
                                        if_nz r4.w
                
                #line 276
                                          log r5.xyz, r4.xyzx
                                          mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                          exp r6.xyz, r5.xyzx
                
                #line 277
                                        else 
                
                #line 278
                                          ieq r4.w, cb0[13].x, l(4)
                                          if_nz r4.w
                
                #line 280
                                            log r5.xyz, r4.xyzx
                                            mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                            exp r6.xyz, r5.xyzx
                
                #line 281
                                          else 
                
                #line 284
                                            mov r6.xyz, r4.xyzx
                
                #line 285
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                
                #line 312
                                  mov r6.xyz, r6.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 313
                                  nop 
                                  mov r6.xyz, r6.xyzx
                
                #line 257
                                  mov r6.xyz, r6.xyzx  // r6.x <- <adjustRange return value>.x; r6.y <- <adjustRange return value>.y; r6.z <- <adjustRange return value>.z
                
                #line 313
                                  mov r6.xyz, r6.xyzx
                
                #line 314
                                  nop 
                                  mov r6.xyz, r6.xyzx
                
                #line 290
                                  mov r6.xyz, r6.xyzx  // r6.x <- <reorderPlanes return value>.x; r6.y <- <reorderPlanes return value>.y; r6.z <- <reorderPlanes return value>.z
                
                #line 314
                                  mov r6.xyz, r6.xyzx
                
                #line 315
                                endif 
                              endif 
                
                #line 319
                              itof r6.w, l(1)  // r6.w <- <RenderFloat return value>.w
                              mov r6.xyz, r6.xyzx  // r6.x <- <RenderFloat return value>.x; r6.y <- <RenderFloat return value>.y; r6.z <- <RenderFloat return value>.z
                
                #line 381
                              mov r6.xyzw, r6.xyzw  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z; r6.w <- rgba.w
                
                #line 382
                              mov r6.xyzw, r6.xyzw  // r6.x <- <GetRGBA return value>.x; r6.y <- <GetRGBA return value>.y; r6.z <- <GetRGBA return value>.z; r6.w <- <GetRGBA return value>.w
                
                #line 383
                            else 
                
                #line 384
                              ieq r4.x, cb0[12].x, l(8)
                              if_nz r4.x
                
                #line 386
                                nop 
                
                #line 76
                                sample_indexable(texture2d)(float,float,float,float) r4.x, v1.xyxx, t0.xyzw, s0
                                itof r4.y, l(64)
                                mul r4.x, r4.y, r4.x  // r4.x <- y
                
                #line 78
                                sample_indexable(texture2d)(float,float,float,float) r5.x, v1.xyxx, t1.xyzw, s0
                                itof r5.y, l(64)
                                mul r4.y, r5.y, r5.x  // r4.y <- u
                
                #line 79
                                sample_indexable(texture2d)(float,float,float,float) r5.x, v1.xyxx, t2.xyzw, s0
                                itof r5.y, l(64)
                                mul r4.z, r5.y, r5.x  // r4.z <- v
                
                #line 81
                                mov r4.w, l(1.000000)
                                mov r4.xyzw, r4.xyzw  // r4.x <- <PSPlanar42010_Reverse return value>.x; r4.y <- <PSPlanar42010_Reverse return value>.y; r4.z <- <PSPlanar42010_Reverse return value>.z; r4.w <- <PSPlanar42010_Reverse return value>.w
                
                #line 386
                                mov r4.xyzw, r4.xyzw  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 388
                                dp4 r5.x, r4.xyzw, cb1[0].xyzw  // r5.x <- rr.x
                                dp4 r5.y, r4.xyzw, cb1[1].xyzw  // r5.y <- rr.y
                                dp4 r5.z, r4.xyzw, cb1[2].xyzw  // r5.z <- rr.z
                                dp4 r5.w, r4.xyzw, cb1[3].xyzw  // r5.w <- rr.w
                
                #line 389
                                dp4 r0.x, r5.xyzw, r0.xyzw
                                dp4 r0.y, r5.xyzw, r1.xyzw
                                dp4 r0.z, r5.xyzw, r2.xyzw
                                dp4 r0.w, r5.xyzw, r3.xyzw
                                itof r1.xyzw, l(0, 0, 0, 0)
                                max r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- rgbarsp.x; r0.y <- rgbarsp.y; r0.z <- rgbarsp.z; r0.w <- rgbarsp.w
                
                #line 390
                                nop 
                                mov r0.xyzw, r0.xyzw
                
                #line 295
                                if_z cb0[14].z
                
                #line 297
                                  nop 
                                  mov r0.xyz, r0.xyzx
                
                #line 262
                                  ieq r1.x, cb0[12].w, cb0[13].x
                                  if_nz r1.x
                
                #line 264
                                    mov r6.xyz, r0.xyzx
                
                #line 265
                                  endif   // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 266
                                  if_z r1.x
                                    ieq r1.x, cb0[13].x, l(16)
                                    if_nz r1.x
                
                #line 268
                                      nop 
                                      mov r0.xyz, r0.xyzx
                
                #line 170
                                      mov r1.x, l(0.159302)  // r1.x <- ST2084_m1
                
                #line 171
                                      mov r1.y, l(78.843750)  // r1.y <- ST2084_m2
                
                #line 172
                                      mov r1.z, l(0.835938)  // r1.z <- ST2084_c1
                
                #line 173
                                      mov r1.w, l(18.851562)  // r1.w <- ST2084_c2
                
                #line 174
                                      mov r2.x, l(18.687500)  // r2.x <- ST2084_c3
                
                #line 175
                                      itof r2.yzw, l(0, 1000, 1000, 1000)
                                      div r2.yzw, r0.xxyz, r2.yyzw
                                      log r2.yzw, r2.yyzw
                                      mul r2.yzw, r1.xxxx, r2.yyzw
                                      exp r2.yzw, r2.yyzw  // r2.y <- rgb.x; r2.z <- rgb.y; r2.w <- rgb.z
                
                #line 176
                                      mul r3.xyz, r1.wwww, r2.yzwy
                                      add r1.xzw, r1.zzzz, r3.xxyz
                                      itof r3.xyz, l(1, 1, 1, 0)
                                      mul r2.xyz, r2.yzwy, r2.xxxx
                                      add r2.xyz, r2.xyzx, r3.xyzx
                                      div r1.xzw, r1.xxzw, r2.xxyz  // r1.x <- rgb.x; r1.z <- rgb.y; r1.w <- rgb.z
                
                #line 177
                                      log r1.xzw, r1.xxzw
                                      mul r1.xyz, r1.xzwx, r1.yyyy
                                      exp r6.xyz, r1.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 178
                                      mov r6.xyz, r6.xyzx  // r6.x <- <LineTOST2084 return value>.x; r6.y <- <LineTOST2084 return value>.y; r6.z <- <LineTOST2084 return value>.z
                
                #line 268
                                      mov r6.xyz, r6.xyzx  // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 269
                                    else   // Prior locations: r2.x <- yuv2rgbmatrix._m02; r2.y <- yuv2rgbmatrix._m12; r2.z <- yuv2rgbmatrix._m22; r2.w <- yuv2rgbmatrix._m32; r3.x <- yuv2rgbmatrix._m03; r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23
                
                #line 270
                                      ieq r1.x, cb0[13].x, l(18)
                                      if_nz r1.x
                
                #line 272
                                        mov r6.xyz, r0.xyzx
                
                #line 273
                                      else 
                
                #line 274
                                        ieq r1.x, cb0[13].x, l(1)
                                        if_nz r1.x
                
                #line 276
                                          log r1.xyz, r0.xyzx
                                          mul r1.xyz, r1.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                          exp r6.xyz, r1.xyzx
                
                #line 277
                                        else 
                
                #line 278
                                          ieq r1.x, cb0[13].x, l(4)
                                          if_nz r1.x
                
                #line 280
                                            log r1.xyz, r0.xyzx
                                            mul r1.xyz, r1.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                            exp r6.xyz, r1.xyzx
                
                #line 281
                                          else 
                
                #line 284
                                            mov r6.xyz, r0.xyzx
                
                #line 285
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                
                #line 297
                                  mov r6.xyz, r6.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 298
                                  nop 
                                  mov r6.xyz, r6.xyzx
                
                #line 257
                                  mov r6.xyz, r6.xyzx  // r6.x <- <adjustRange return value>.x; r6.y <- <adjustRange return value>.y; r6.z <- <adjustRange return value>.z
                
                #line 298
                                  mov r6.xyz, r6.xyzx
                
                #line 299
                                  nop 
                                  mov r6.xyz, r6.xyzx
                
                #line 290
                                  mov r6.xyz, r6.xyzx  // r6.x <- <reorderPlanes return value>.x; r6.y <- <reorderPlanes return value>.y; r6.z <- <reorderPlanes return value>.z
                
                #line 299
                                  mov r6.xyz, r6.xyzx
                
                #line 300
                                else   // Prior locations: r2.x <- yuv2rgbmatrix._m02; r2.y <- yuv2rgbmatrix._m12; r2.z <- yuv2rgbmatrix._m22; r2.w <- yuv2rgbmatrix._m32; r3.x <- yuv2rgbmatrix._m03; r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r0.x <- rgbarsp.x; r0.y <- rgbarsp.y; r0.z <- rgbarsp.z; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z
                
                #line 295
                                  mov r1.x, cb0[14].z  // r1.x <- DrawLine; r1.x <- DrawLine; r1.x <- DrawLine
                
                #line 301
                                  ieq r1.x, r1.x, l(1)
                                  if_nz r1.x
                
                #line 303
                                    nop 
                                    mov r6.xyzw, r0.xyzw
                
                #line 196
                                    ieq r1.x, cb0[12].w, cb0[13].x
                                    if_nz r1.x
                
                #line 198
                                      mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 199
                                    else 
                
                #line 200
                                      ieq r1.x, cb0[12].w, l(16)
                                      if_nz r1.x
                
                #line 202
                                        nop 
                                        mov r6.xyzw, r6.xyzw
                
                #line 131
                                        mov r1.x, l(0.835938)  // r1.x <- ST2084_c1
                
                #line 132
                                        mov r1.y, l(18.851562)  // r1.y <- ST2084_c2
                
                #line 133
                                        mov r1.z, l(18.687500)  // r1.z <- ST2084_c3
                
                #line 134
                                        itof r2.xyzw, l(0, 0, 0, 0)
                                        max r2.xyzw, r2.xyzw, r6.xyzw
                                        log r2.xyzw, r2.xyzw
                                        mul r2.xyzw, r2.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                        exp r2.xyzw, r2.xyzw  // r2.x <- rgb.x; r2.y <- rgb.y; r2.z <- rgb.z; r2.w <- rgb.w
                
                #line 135
                                        mov r3.xyzw, -r1.xxxx
                                        add r3.xyzw, r2.xyzw, r3.xyzw
                                        max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                        mul r2.xyzw, r1.zzzz, r2.xyzw
                                        mov r2.xyzw, -r2.xyzw
                                        add r1.xyzw, r1.yyyy, r2.xyzw
                                        div r1.xyzw, r3.xyzw, r1.xyzw  // r1.x <- rgb.x; r1.y <- rgb.y; r1.z <- rgb.z; r1.w <- rgb.w
                
                #line 136
                                        log r1.xyzw, r1.xyzw
                                        mul r1.xyzw, r1.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                        exp r1.xyzw, r1.xyzw  // r1.x <- rgb.x; r1.y <- rgb.y; r1.z <- rgb.z; r1.w <- rgb.w
                
                #line 137
                                        itof r2.xyzw, l(10000, 10000, 10000, 10000)
                                        mul r6.xyzw, r1.xyzw, r2.xyzw  // r6.x <- <ST2084TOLinear return value>.x; r6.y <- <ST2084TOLinear return value>.y; r6.z <- <ST2084TOLinear return value>.z; r6.w <- <ST2084TOLinear return value>.w
                
                #line 202
                                        mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 203
                                      else   // Prior locations: r2.x <- yuv2rgbmatrix._m02; r2.y <- yuv2rgbmatrix._m12; r2.z <- yuv2rgbmatrix._m22; r2.w <- yuv2rgbmatrix._m32; r3.x <- yuv2rgbmatrix._m03; r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 204
                                        ieq r1.x, cb0[12].w, l(1)
                                        if_nz r1.x
                
                #line 206
                                          nop 
                                          mov r6.xyzw, r6.xyzw
                
                #line 152
                                          log r1.xyzw, r6.xyzw
                                          mul r1.xyzw, r1.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                          exp r6.xyzw, r1.xyzw  // r6.x <- <BT709TOLinear return value>.x; r6.y <- <BT709TOLinear return value>.y; r6.z <- <BT709TOLinear return value>.z; r6.w <- <BT709TOLinear return value>.w
                
                #line 206
                                          mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 207
                                        else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 210
                                          mov r6.xyzw, r6.xyzw  // r6.x <- <sourceToLinear return value>.x; r6.y <- <sourceToLinear return value>.y; r6.z <- <sourceToLinear return value>.z; r6.w <- <sourceToLinear return value>.w
                
                #line 211
                                        endif 
                                      endif 
                                    endif 
                
                #line 303
                                    mov r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 304
                                    nop 
                                    mov r6.xyzw, r6.xyzw
                
                #line 222
                                    ine r1.x, cb0[13].z, cb0[13].y
                                    if_nz r1.x
                
                #line 224
                                      nop 
                                      mov r6.xyzw, r6.xyzw
                
                #line 217
                                      dp4 r1.x, r6.xyzw, cb1[8].xyzw
                                      dp4 r1.y, r6.xyzw, cb1[9].xyzw
                                      dp4 r1.z, r6.xyzw, cb1[10].xyzw
                                      itof r2.xyz, l(0, 0, 0, 0)
                                      max r6.xyz, r1.xyzx, r2.xyzx  // r6.x <- <PrimariesTransform return value>.x; r6.y <- <PrimariesTransform return value>.y; r6.z <- <PrimariesTransform return value>.z
                
                #line 224
                                      mov r6.xyz, r6.xyzx  // r6.x <- <transformPrimaries return value>.x; r6.y <- <transformPrimaries return value>.y; r6.z <- <transformPrimaries return value>.z
                
                #line 225
                                    else   // Prior locations: r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 228
                                      mov r6.xyz, r6.xyzx  // r6.x <- <transformPrimaries return value>.x; r6.y <- <transformPrimaries return value>.y; r6.z <- <transformPrimaries return value>.z
                
                #line 229
                                    endif 
                
                #line 304
                                    mov r6.xyz, r6.xyzx
                
                #line 305
                                    nop 
                                    mov r6.xyz, r6.xyzx
                
                #line 234
                                    ieq r1.x, cb0[13].x, l(1)
                                    ieq r1.y, cb0[13].x, l(4)
                                    or r1.x, r1.y, r1.x
                                    if_nz r1.x
                
                #line 236
                                      ieq r1.x, cb0[12].w, l(16)
                                      if_nz r1.x
                
                #line 238
                                        nop 
                                        mov r6.xyz, r6.xyzx
                
                #line 189
                                        nop 
                                        mov r1.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                        mov r1.w, l(0.150000)  // r1.w <- A
                                        mov r2.x, l(0.500000)  // r2.x <- B
                
                #line 184
                                        mul r2.yzw, r1.xxyz, r1.wwww
                                        add r2.yzw, r2.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
                                        mul r2.yzw, r1.xxyz, r2.yyzw
                                        add r2.yzw, r2.yyzw, l(0.000000, 0.004000, 0.004000, 0.004000)
                                        mul r3.xyz, r1.xyzx, r1.wwww
                                        add r3.xyz, r2.xxxx, r3.xyzx
                                        mul r1.xyz, r1.xyzx, r3.xyzx
                                        add r1.xyz, r1.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                        div r1.xyz, r2.yzwy, r1.xyzx
                                        mov r2.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                        add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- <hable return value>.x; r1.y <- <hable return value>.y; r1.z <- <hable return value>.z
                
                #line 189
                                        mov r1.xyz, r1.xyzx  // r1.x <- HABLE_DIV.x; r1.y <- HABLE_DIV.y; r1.z <- HABLE_DIV.z
                
                #line 190
                                        nop 
                                        mul r2.xyz, r6.xyzx, cb0[14].yyyy
                
                #line 183
                                        mov r1.w, l(0.150000)
                                        mov r2.w, l(0.500000)  // r2.w <- B
                
                #line 184
                                        mul r3.xyz, r2.xyzx, r1.wwww
                                        add r3.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                        mul r3.xyz, r2.xyzx, r3.xyzx
                                        add r3.xyz, r3.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                        mul r4.xyz, r2.xyzx, r1.wwww
                                        add r4.xyz, r2.wwww, r4.xyzx
                                        mul r2.xyz, r2.xyzx, r4.xyzx
                                        add r2.xyz, r2.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                        div r2.xyz, r3.xyzx, r2.xyzx
                                        mov r3.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                        add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- <hable return value>.x; r2.y <- <hable return value>.y; r2.z <- <hable return value>.z
                
                #line 190
                                        div r6.xyz, r2.xyzx, r1.xyzx  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z
                
                #line 191
                                        mov r6.xyz, r6.xyzx  // r6.x <- <HDRToneMapping return value>.x; r6.y <- <HDRToneMapping return value>.y; r6.z <- <HDRToneMapping return value>.z
                
                #line 238
                                        mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 239
                                      else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 240
                                        ieq r1.x, cb0[12].w, l(18)
                                        if_nz r1.x
                
                #line 242
                                          nop 
                                          mov r6.xyz, r6.xyzx
                
                #line 189
                                          nop 
                                          mov r1.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                          mov r1.w, l(0.150000)  // r1.w <- A
                                          mov r2.x, l(0.500000)  // r2.x <- B
                
                #line 184
                                          mul r2.yzw, r1.xxyz, r1.wwww
                                          add r2.yzw, r2.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
                                          mul r2.yzw, r1.xxyz, r2.yyzw
                                          add r2.yzw, r2.yyzw, l(0.000000, 0.004000, 0.004000, 0.004000)
                                          mul r3.xyz, r1.xyzx, r1.wwww
                                          add r3.xyz, r2.xxxx, r3.xyzx
                                          mul r1.xyz, r1.xyzx, r3.xyzx
                                          add r1.xyz, r1.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                          div r1.xyz, r2.yzwy, r1.xyzx  // v0.x <- input.Pos.x; v0.y <- input.Pos.y; v0.z <- input.Pos.z; v0.w <- input.Pos.w; v1.x <- input.TexCoord.x; v1.y <- input.TexCoord.y; o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                                          mov r2.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                          add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- <hable return value>.x; r1.y <- <hable return value>.y; r1.z <- <hable return value>.z
                
                #line 189
                                          mov r1.xyz, r1.xyzx  // r1.x <- HABLE_DIV.x; r1.y <- HABLE_DIV.y; r1.z <- HABLE_DIV.z
                
                #line 190
                                          nop 
                                          mul r2.xyz, r6.xyzx, cb0[14].yyyy
                
                #line 183
                                          mov r1.w, l(0.150000)
                                          mov r2.w, l(0.500000)  // r2.w <- B
                
                #line 184
                                          mul r3.xyz, r2.xyzx, r1.wwww
                                          add r3.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                          mul r3.xyz, r2.xyzx, r3.xyzx
                                          add r3.xyz, r3.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                          mul r4.xyz, r2.xyzx, r1.wwww
                                          add r4.xyz, r2.wwww, r4.xyzx
                                          mul r2.xyz, r2.xyzx, r4.xyzx
                                          add r2.xyz, r2.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                          div r2.xyz, r3.xyzx, r2.xyzx
                                          mov r3.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                          add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- <hable return value>.x; r2.y <- <hable return value>.y; r2.z <- <hable return value>.z
                
                #line 190
                                          div r6.xyz, r2.xyzx, r1.xyzx  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z
                
                #line 191
                                          mov r6.xyz, r6.xyzx  // r6.x <- <HDRToneMapping return value>.x; r6.y <- <HDRToneMapping return value>.y; r6.z <- <HDRToneMapping return value>.z
                
                #line 242
                                          mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 243
                                        else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 246
                                          mul r6.xyz, r6.xyzx, cb0[14].yyyy  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 247
                                        endif 
                                      endif 
                
                #line 248
                                    else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 251
                                      mov r6.xyz, r6.xyzx  // r6.x <- <toneMapping return value>.x; r6.y <- <toneMapping return value>.y; r6.z <- <toneMapping return value>.z
                
                #line 252
                                    endif 
                
                #line 305
                                    mov r6.xyz, r6.xyzx
                
                #line 306
                                  else   // Prior locations: r2.x <- yuv2rgbmatrix._m02; r3.x <- yuv2rgbmatrix._m03; r2.y <- yuv2rgbmatrix._m12; r3.y <- yuv2rgbmatrix._m13; r2.z <- yuv2rgbmatrix._m22; r3.z <- yuv2rgbmatrix._m23; r2.w <- yuv2rgbmatrix._m32; r3.w <- yuv2rgbmatrix._m33; r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r0.x <- rgbarsp.x; r0.y <- rgbarsp.y; r0.z <- rgbarsp.z; r0.w <- rgbarsp.w; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.w <- rgb.w
                
                #line 309
                                    nop 
                                    mov r0.xyzw, r0.xyzw
                
                #line 196
                                    ieq r1.x, cb0[12].w, cb0[13].x
                                    if_nz r1.x
                
                #line 198
                                      mov r0.xyzw, r0.xyzw  // r0.x <- <sourceToLinear return value>.x; r0.y <- <sourceToLinear return value>.y; r0.z <- <sourceToLinear return value>.z; r0.w <- <sourceToLinear return value>.w
                
                #line 199
                                    else 
                
                #line 200
                                      ieq r1.x, cb0[12].w, l(16)
                                      if_nz r1.x
                
                #line 202
                                        nop 
                                        mov r0.xyzw, r0.xyzw
                
                #line 131
                                        mov r1.x, l(0.835938)  // r1.x <- ST2084_c1
                
                #line 132
                                        mov r1.y, l(18.851562)  // r1.y <- ST2084_c2
                
                #line 133
                                        mov r1.z, l(18.687500)  // r1.z <- ST2084_c3
                
                #line 134
                                        itof r2.xyzw, l(0, 0, 0, 0)
                                        max r2.xyzw, r0.xyzw, r2.xyzw
                                        log r2.xyzw, r2.xyzw
                                        mul r2.xyzw, r2.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                        exp r2.xyzw, r2.xyzw  // r2.x <- rgb.x; r2.y <- rgb.y; r2.z <- rgb.z; r2.w <- rgb.w
                
                #line 135
                                        mov r3.xyzw, -r1.xxxx
                                        add r3.xyzw, r2.xyzw, r3.xyzw
                                        max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                        mul r2.xyzw, r1.zzzz, r2.xyzw
                                        mov r2.xyzw, -r2.xyzw
                                        add r1.xyzw, r1.yyyy, r2.xyzw
                                        div r1.xyzw, r3.xyzw, r1.xyzw  // r1.x <- rgb.x; r1.y <- rgb.y; r1.z <- rgb.z; r1.w <- rgb.w
                
                #line 136
                                        log r1.xyzw, r1.xyzw
                                        mul r1.xyzw, r1.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                        exp r1.xyzw, r1.xyzw  // r1.x <- rgb.x; r1.y <- rgb.y; r1.z <- rgb.z; r1.w <- rgb.w
                
                #line 137
                                        itof r2.xyzw, l(10000, 10000, 10000, 10000)
                                        mul r0.xyzw, r1.xyzw, r2.xyzw  // r0.x <- <ST2084TOLinear return value>.x; r0.y <- <ST2084TOLinear return value>.y; r0.z <- <ST2084TOLinear return value>.z; r0.w <- <ST2084TOLinear return value>.w
                
                #line 202
                                        mov r0.xyzw, r0.xyzw  // r0.x <- <sourceToLinear return value>.x; r0.y <- <sourceToLinear return value>.y; r0.z <- <sourceToLinear return value>.z; r0.w <- <sourceToLinear return value>.w
                
                #line 203
                                      else   // Prior locations: r2.x <- yuv2rgbmatrix._m02; r3.x <- yuv2rgbmatrix._m03; r2.y <- yuv2rgbmatrix._m12; r3.y <- yuv2rgbmatrix._m13; r2.z <- yuv2rgbmatrix._m22; r3.z <- yuv2rgbmatrix._m23; r2.w <- yuv2rgbmatrix._m32; r3.w <- yuv2rgbmatrix._m33; r0.x <- rgbarsp.x; r0.y <- rgbarsp.y; r0.z <- rgbarsp.z; r0.w <- rgbarsp.w; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.w <- rgb.w; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.w <- rgb.w
                
                #line 204
                                        ieq r1.x, cb0[12].w, l(1)
                                        if_nz r1.x
                
                #line 206
                                          nop 
                                          mov r0.xyzw, r0.xyzw
                
                #line 152
                                          log r1.xyzw, r0.xyzw
                                          mul r1.xyzw, r1.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                          exp r0.xyzw, r1.xyzw  // r0.x <- <BT709TOLinear return value>.x; r0.y <- <BT709TOLinear return value>.y; r0.z <- <BT709TOLinear return value>.z; r0.w <- <BT709TOLinear return value>.w
                
                #line 206
                                          mov r0.xyzw, r0.xyzw  // r0.x <- <sourceToLinear return value>.x; r0.y <- <sourceToLinear return value>.y; r0.z <- <sourceToLinear return value>.z; r0.w <- <sourceToLinear return value>.w
                
                #line 207
                                        else   // Prior locations: r0.x <- rgbarsp.x; r0.y <- rgbarsp.y; r0.z <- rgbarsp.z; r0.w <- rgbarsp.w; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.w <- rgb.w; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.w <- rgb.w
                
                #line 210
                                          mov r0.xyzw, r0.xyzw  // r0.x <- <sourceToLinear return value>.x; r0.y <- <sourceToLinear return value>.y; r0.z <- <sourceToLinear return value>.z; r0.w <- <sourceToLinear return value>.w
                
                #line 211
                                        endif 
                                      endif 
                                    endif 
                
                #line 309
                                    mov r0.xyzw, r0.xyzw  // r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.w <- rgb.w
                
                #line 310
                                    nop 
                                    mov r0.xyzw, r0.xyzw
                
                #line 222
                                    ine r1.x, cb0[13].z, cb0[13].y
                                    if_nz r1.x
                
                #line 224
                                      nop 
                                      mov r0.xyzw, r0.xyzw
                
                #line 217
                                      dp4 r1.x, r0.xyzw, cb1[8].xyzw
                                      dp4 r1.y, r0.xyzw, cb1[9].xyzw
                                      dp4 r1.z, r0.xyzw, cb1[10].xyzw
                                      itof r2.xyz, l(0, 0, 0, 0)
                                      max r0.xyz, r1.xyzx, r2.xyzx  // r0.x <- <PrimariesTransform return value>.x; r0.y <- <PrimariesTransform return value>.y; r0.z <- <PrimariesTransform return value>.z
                
                #line 224
                                      mov r0.xyz, r0.xyzx  // r0.x <- <transformPrimaries return value>.x; r0.y <- <transformPrimaries return value>.y; r0.z <- <transformPrimaries return value>.z
                
                #line 225
                                    else   // Prior locations: r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z
                
                #line 228
                                      mov r0.xyz, r0.xyzx  // r0.x <- <transformPrimaries return value>.x; r0.y <- <transformPrimaries return value>.y; r0.z <- <transformPrimaries return value>.z
                
                #line 229
                                    endif 
                
                #line 310
                                    mov r0.xyz, r0.xyzx
                
                #line 311
                                    nop 
                                    mov r0.xyz, r0.xyzx
                
                #line 234
                                    ieq r0.w, cb0[13].x, l(1)
                                    ieq r1.x, cb0[13].x, l(4)
                                    or r0.w, r0.w, r1.x
                                    if_nz r0.w
                
                #line 236
                                      ieq r0.w, cb0[12].w, l(16)
                                      if_nz r0.w
                
                #line 238
                                        nop 
                                        mov r0.xyz, r0.xyzx
                
                #line 189
                                        nop 
                                        mov r1.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                        mov r0.w, l(0.150000)  // r0.w <- A
                                        mov r1.w, l(0.500000)  // r1.w <- B
                
                #line 184
                                        mul r2.xyz, r1.xyzx, r0.wwww
                                        add r2.xyz, r2.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                        mul r2.xyz, r1.xyzx, r2.xyzx
                                        add r2.xyz, r2.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                        mul r3.xyz, r1.xyzx, r0.wwww
                                        add r3.xyz, r1.wwww, r3.xyzx
                                        mul r1.xyz, r1.xyzx, r3.xyzx
                                        add r1.xyz, r1.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                        div r1.xyz, r2.xyzx, r1.xyzx
                                        mov r2.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                        add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- <hable return value>.x; r1.y <- <hable return value>.y; r1.z <- <hable return value>.z
                
                #line 189
                                        mov r1.xyz, r1.xyzx  // r1.x <- HABLE_DIV.x; r1.y <- HABLE_DIV.y; r1.z <- HABLE_DIV.z
                
                #line 190
                                        nop 
                                        mul r2.xyz, r0.xyzx, cb0[14].yyyy
                
                #line 183
                                        mov r0.w, l(0.150000)
                                        mov r1.w, l(0.500000)
                
                #line 184
                                        mul r3.xyz, r2.xyzx, r0.wwww
                                        add r3.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                        mul r3.xyz, r2.xyzx, r3.xyzx
                                        add r3.xyz, r3.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                        mul r4.xyz, r2.xyzx, r0.wwww
                                        add r4.xyz, r1.wwww, r4.xyzx
                                        mul r2.xyz, r2.xyzx, r4.xyzx
                                        add r2.xyz, r2.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                        div r2.xyz, r3.xyzx, r2.xyzx
                                        mov r3.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                        add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- <hable return value>.x; r2.y <- <hable return value>.y; r2.z <- <hable return value>.z
                
                #line 190
                                        div r0.xyz, r2.xyzx, r1.xyzx  // r0.x <- rgba.x; r0.y <- rgba.y; r0.z <- rgba.z
                
                #line 191
                                        mov r0.xyz, r0.xyzx  // r0.x <- <HDRToneMapping return value>.x; r0.y <- <HDRToneMapping return value>.y; r0.z <- <HDRToneMapping return value>.z
                
                #line 238
                                        mov r0.xyz, r0.xyzx  // r0.x <- <toneMapping return value>.x; r0.y <- <toneMapping return value>.y; r0.z <- <toneMapping return value>.z
                
                #line 239
                                      else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z
                
                #line 240
                                        ieq r0.w, cb0[12].w, l(18)
                                        if_nz r0.w
                
                #line 242
                                          nop 
                                          mov r0.xyz, r0.xyzx
                
                #line 189
                                          nop 
                                          mov r1.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 183
                                          mov r0.w, l(0.150000)  // r0.w <- A
                                          mov r1.w, l(0.500000)  // r1.w <- B
                
                #line 184
                                          mul r2.xyz, r1.xyzx, r0.wwww
                                          add r2.xyz, r2.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                          mul r2.xyz, r1.xyzx, r2.xyzx
                                          add r2.xyz, r2.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                          mul r3.xyz, r1.xyzx, r0.wwww
                                          add r3.xyz, r1.wwww, r3.xyzx
                                          mul r1.xyz, r1.xyzx, r3.xyzx
                                          add r1.xyz, r1.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                          div r1.xyz, r2.xyzx, r1.xyzx
                                          mov r2.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                          add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- <hable return value>.x; r1.y <- <hable return value>.y; r1.z <- <hable return value>.z
                
                #line 189
                                          mov r1.xyz, r1.xyzx  // r1.x <- HABLE_DIV.x; r1.y <- HABLE_DIV.y; r1.z <- HABLE_DIV.z
                
                #line 190
                                          nop 
                                          mul r2.xyz, r0.xyzx, cb0[14].yyyy
                
                #line 183
                                          mov r0.w, l(0.150000)
                                          mov r1.w, l(0.500000)
                
                #line 184
                                          mul r3.xyz, r2.xyzx, r0.wwww
                                          add r3.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                          mul r3.xyz, r2.xyzx, r3.xyzx
                                          add r3.xyz, r3.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                          mul r4.xyz, r2.xyzx, r0.wwww
                                          add r4.xyz, r1.wwww, r4.xyzx
                                          mul r2.xyz, r2.xyzx, r4.xyzx
                                          add r2.xyz, r2.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                          div r2.xyz, r3.xyzx, r2.xyzx
                                          mov r3.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                          add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- <hable return value>.x; r2.y <- <hable return value>.y; r2.z <- <hable return value>.z
                
                #line 190
                                          div r0.xyz, r2.xyzx, r1.xyzx  // r0.x <- rgba.x; r0.y <- rgba.y; r0.z <- rgba.z
                
                #line 191
                                          mov r0.xyz, r0.xyzx  // r0.x <- <HDRToneMapping return value>.x; r0.y <- <HDRToneMapping return value>.y; r0.z <- <HDRToneMapping return value>.z
                
                #line 242
                                          mov r0.xyz, r0.xyzx  // r0.x <- <toneMapping return value>.x; r0.y <- <toneMapping return value>.y; r0.z <- <toneMapping return value>.z
                
                #line 243
                                        else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z
                
                #line 246
                                          mul r0.xyz, r0.xyzx, cb0[14].yyyy  // r0.x <- <toneMapping return value>.x; r0.y <- <toneMapping return value>.y; r0.z <- <toneMapping return value>.z
                
                #line 247
                                        endif 
                                      endif 
                
                #line 248
                                    else   // Prior locations: r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z
                
                #line 251
                                      mov r0.xyz, r0.xyzx  // r0.x <- <toneMapping return value>.x; r0.y <- <toneMapping return value>.y; r0.z <- <toneMapping return value>.z
                
                #line 252
                                    endif 
                
                #line 311
                                    mov r0.xyz, r0.xyzx
                
                #line 312
                                    nop 
                                    mov r0.xyz, r0.xyzx
                
                #line 262
                                    ieq r0.w, cb0[12].w, cb0[13].x
                                    if_nz r0.w
                
                #line 264
                                      mov r6.xyz, r0.xyzx
                
                #line 265
                                    endif   // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 266
                                    if_z r0.w
                                      ieq r0.w, cb0[13].x, l(16)
                                      if_nz r0.w
                
                #line 268
                                        nop 
                                        mov r0.xyz, r0.xyzx
                
                #line 170
                                        mov r0.w, l(0.159302)  // r0.w <- ST2084_m1
                
                #line 171
                                        mov r1.x, l(78.843750)  // r1.x <- ST2084_m2
                
                #line 172
                                        mov r1.y, l(0.835938)  // r1.y <- ST2084_c1
                
                #line 173
                                        mov r1.z, l(18.851562)  // r1.z <- ST2084_c2
                
                #line 174
                                        mov r1.w, l(18.687500)  // r1.w <- ST2084_c3
                
                #line 175
                                        itof r2.xyz, l(1000, 1000, 1000, 0)
                                        div r2.xyz, r0.xyzx, r2.xyzx
                                        log r2.xyz, r2.xyzx
                                        mul r2.xyz, r0.wwww, r2.xyzx
                                        exp r2.xyz, r2.xyzx  // r2.x <- rgb.x; r2.y <- rgb.y; r2.z <- rgb.z
                
                #line 176
                                        mul r3.xyz, r1.zzzz, r2.xyzx
                                        add r3.xyz, r1.yyyy, r3.xyzx
                                        itof r4.xyz, l(1, 1, 1, 0)
                                        mul r1.yzw, r1.wwww, r2.xxyz
                                        add r1.yzw, r1.yyzw, r4.xxyz
                                        div r1.yzw, r3.xxyz, r1.yyzw  // r1.y <- rgb.x; r1.z <- rgb.y; r1.w <- rgb.z
                
                #line 177
                                        log r1.yzw, r1.yyzw
                                        mul r1.xyz, r1.yzwy, r1.xxxx
                                        exp r6.xyz, r1.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 178
                                        mov r6.xyz, r6.xyzx  // r6.x <- <LineTOST2084 return value>.x; r6.y <- <LineTOST2084 return value>.y; r6.z <- <LineTOST2084 return value>.z
                
                #line 268
                                        mov r6.xyz, r6.xyzx  // r6.x <- <linearToDisplay return value>.x; r6.y <- <linearToDisplay return value>.y; r6.z <- <linearToDisplay return value>.z
                
                #line 269
                                      else 
                
                #line 270
                                        ieq r0.w, cb0[13].x, l(18)
                                        if_nz r0.w
                
                #line 272
                                          mov r6.xyz, r0.xyzx
                
                #line 273
                                        else 
                
                #line 274
                                          ieq r0.w, cb0[13].x, l(1)
                                          if_nz r0.w
                
                #line 276
                                            log r1.xyz, r0.xyzx
                                            mul r1.xyz, r1.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                            exp r6.xyz, r1.xyzx
                
                #line 277
                                          else 
                
                #line 278
                                            ieq r0.w, cb0[13].x, l(4)
                                            if_nz r0.w
                
                #line 280
                                              log r1.xyz, r0.xyzx
                                              mul r1.xyz, r1.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                              exp r6.xyz, r1.xyzx
                
                #line 281
                                            else 
                
                #line 284
                                              mov r6.xyz, r0.xyzx
                
                #line 285
                                            endif 
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                
                #line 312
                                    mov r6.xyz, r6.xyzx  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z
                
                #line 313
                                    nop 
                                    mov r6.xyz, r6.xyzx
                
                #line 257
                                    mov r6.xyz, r6.xyzx  // r6.x <- <adjustRange return value>.x; r6.y <- <adjustRange return value>.y; r6.z <- <adjustRange return value>.z
                
                #line 313
                                    mov r6.xyz, r6.xyzx
                
                #line 314
                                    nop 
                                    mov r6.xyz, r6.xyzx
                
                #line 290
                                    mov r6.xyz, r6.xyzx  // r6.x <- <reorderPlanes return value>.x; r6.y <- <reorderPlanes return value>.y; r6.z <- <reorderPlanes return value>.z
                
                #line 314
                                    mov r6.xyz, r6.xyzx
                
                #line 315
                                  endif 
                                endif 
                
                #line 319
                                mov r6.xyz, r6.xyzx  // r6.x <- <RenderFloat return value>.x; r6.y <- <RenderFloat return value>.y; r6.z <- <RenderFloat return value>.z
                
                #line 390
                                mov r6.xyz, r6.xyzx  // r6.x <- rgbarsp.x; r6.y <- rgbarsp.y; r6.z <- rgbarsp.z
                
                #line 391
                                itof r6.w, l(1)  // r6.w <- rgbarsp.w
                
                #line 392
                                mov r6.xyz, r6.xyzx  // r6.x <- <GetRGBA return value>.x; r6.y <- <GetRGBA return value>.y; r6.z <- <GetRGBA return value>.z
                                mov r6.w, r6.w  // r6.w <- <GetRGBA return value>.w
                
                #line 393
                              else   // Prior locations: r2.x <- yuv2rgbmatrix._m02; r3.x <- yuv2rgbmatrix._m03; r2.y <- yuv2rgbmatrix._m12; r3.y <- yuv2rgbmatrix._m13; r2.z <- yuv2rgbmatrix._m22; r3.z <- yuv2rgbmatrix._m23; r2.w <- yuv2rgbmatrix._m32; r3.w <- yuv2rgbmatrix._m33; r0.x <- yuv2rgbmatrix._m00; r1.x <- yuv2rgbmatrix._m01; r0.y <- yuv2rgbmatrix._m10; r1.y <- yuv2rgbmatrix._m11; r0.z <- yuv2rgbmatrix._m20; r1.z <- yuv2rgbmatrix._m21; r0.w <- yuv2rgbmatrix._m30; r1.w <- yuv2rgbmatrix._m31
                
                #line 396
                                itof r6.xyzw, l(0, 1, 0, 1)  // r6.x <- <GetRGBA return value>.x; r6.y <- <GetRGBA return value>.y; r6.z <- <GetRGBA return value>.z; r6.w <- <GetRGBA return value>.w
                
                #line 397
                              endif 
                            endif 
                          endif 
                        endif 
                      endif 
                    endif 
                  endif 
                endif 
                
                #line 401
                mov r6.xyzw, r6.xyzw  // r6.x <- rgba.x; r6.y <- rgba.y; r6.z <- rgba.z; r6.w <- rgba.w
                
                #line 404
                mov o0.xyzw, r6.xyzw
                ret 
                // Approximately 3358 instruction slots used
                            
            };
        }

    }

}

