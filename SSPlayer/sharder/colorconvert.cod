//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer $Globals
{
    float4x4 worldMatrix;               // Offset:    0, size:   64
    float4x4 viewMatrix;                // Offset:   64, size:   64
    float4x4 projectionMatrix;          // Offset:  128, size:   64
    int     PixType;                    // Offset:  192, size:    4
    int     transfer;                   // Offset:  196, size:    4
    int     distransfer;                // Offset:  200, size:    4
    int     primaries;                  // Offset:  204, size:    4
    int     disprimaries;               // Offset:  208, size:    4
    int     fullrange;                  // Offset:  212, size:    4
    int     srcrange;                   // Offset:  216, size:    4
    float   LuminanceScale;             // Offset:  220, size:    4
    int     DrawLine;                   // Offset:  224, size:    4
}

cbuffer PS_COLOR_TRANSFORM
{
    float4x4 WhitePoint;                // Offset:    0, size:   64
    float4x4 Colorspace;                // Offset:   64, size:   64
    float4x4 TransPrimaries;            // Offset:  128, size:   64
}

//
// 5 local object(s)
//
Texture2D TextureSourceY;
Texture2D TextureSourceU;
Texture2D TextureSourceV;
Texture2D TextureSourceA;
SamplerState SamplerDiffuse
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
    ComparisonFunc = uint(ALWAYS /* 8 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 BasicTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float4x4 worldMatrix;              // Offset:    0 Size:    64 [unused]
                //   float4x4 viewMatrix;               // Offset:   64 Size:    64
                //   float4x4 projectionMatrix;         // Offset:  128 Size:    64 [unused]
                //   int PixType;                       // Offset:  192 Size:     4 [unused]
                //   int transfer;                      // Offset:  196 Size:     4 [unused]
                //   int distransfer;                   // Offset:  200 Size:     4 [unused]
                //   int primaries;                     // Offset:  204 Size:     4 [unused]
                //   int disprimaries;                  // Offset:  208 Size:     4 [unused]
                //   int fullrange;                     // Offset:  212 Size:     4 [unused]
                //   int srcrange;                      // Offset:  216 Size:     4 [unused]
                //   float LuminanceScale;              // Offset:  220 Size:     4 [unused]
                //   int DrawLine;                      // Offset:  224 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // $Globals                          cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyzw        0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- inPos.x; v0.y <- inPos.y; v0.z <- inPos.z; v0.w <- inPos.w; 
                //   v1.x <- inTexCoord.x; v1.y <- inTexCoord.y; 
                //   o1.x <- <VS return value>.TexCoord.x; o1.y <- <VS return value>.TexCoord.y; 
                //   o0.x <- <VS return value>.Pos.x; o0.y <- <VS return value>.Pos.y; o0.z <- <VS return value>.Pos.z; o0.w <- <VS return value>.Pos.w
                //
                #line 44 "C:\github\sinx\SSPlayer.git\trunk\SSPlayer\sharder\colorconvert.fx"
                mov r0.w, l(1.000000)  // r0.w <- inPos.w
                
                #line 45
                mov r0.xyz, v0.xyzx
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- output.Pos.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- output.Pos.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- output.Pos.z
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // r1.w <- output.Pos.w
                
                #line 46
                mov r0.xy, v1.xyxx  // r0.x <- output.TexCoord.x; r0.y <- output.TexCoord.y
                
                #line 47
                mov o0.xyzw, r1.xyzw
                mov o1.xy, r0.xyxx
                ret 
                // Approximately 10 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float4x4 worldMatrix;              // Offset:    0 Size:    64 [unused]
                //   float4x4 viewMatrix;               // Offset:   64 Size:    64 [unused]
                //   float4x4 projectionMatrix;         // Offset:  128 Size:    64 [unused]
                //   int PixType;                       // Offset:  192 Size:     4
                //   int transfer;                      // Offset:  196 Size:     4
                //   int distransfer;                   // Offset:  200 Size:     4
                //   int primaries;                     // Offset:  204 Size:     4
                //   int disprimaries;                  // Offset:  208 Size:     4
                //   int fullrange;                     // Offset:  212 Size:     4 [unused]
                //   int srcrange;                      // Offset:  216 Size:     4 [unused]
                //   float LuminanceScale;              // Offset:  220 Size:     4
                //   int DrawLine;                      // Offset:  224 Size:     4
                //
                // }
                //
                // cbuffer PS_COLOR_TRANSFORM
                // {
                //
                //   float4x4 WhitePoint;               // Offset:    0 Size:    64
                //   float4x4 Colorspace;               // Offset:   64 Size:    64
                //   float4x4 TransPrimaries;           // Offset:  128 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // SamplerDiffuse                    sampler      NA          NA             s0      1 
                // TextureSourceY                    texture  float4          2d             t0      1 
                // TextureSourceU                    texture  float4          2d             t1      1 
                // TextureSourceV                    texture  float4          2d             t2      1 
                // $Globals                          cbuffer      NA          NA            cb0      1 
                // PS_COLOR_TRANSFORM                cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[15], immediateIndexed
                dcl_constantbuffer CB1[11], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 10
                //
                // Initial variable locations:
                //   v0.x <- input.Pos.x; v0.y <- input.Pos.y; v0.z <- input.Pos.z; v0.w <- input.Pos.w; 
                //   v1.x <- input.TexCoord.x; v1.y <- input.TexCoord.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 444 "C:\github\sinx\SSPlayer.git\trunk\SSPlayer\sharder\colorconvert.fx"
                nop 
                
                #line 332
                mov r0.xyzw, cb1[4].xyzw  // r0.x <- yuv2rgbmatrix._m00; r0.y <- yuv2rgbmatrix._m10; r0.z <- yuv2rgbmatrix._m20; r0.w <- yuv2rgbmatrix._m30
                mov r1.xyzw, cb1[5].xyzw  // r1.x <- yuv2rgbmatrix._m01; r1.y <- yuv2rgbmatrix._m11; r1.z <- yuv2rgbmatrix._m21; r1.w <- yuv2rgbmatrix._m31
                mov r2.xyzw, cb1[6].xyzw  // r2.x <- yuv2rgbmatrix._m02; r2.y <- yuv2rgbmatrix._m12; r2.z <- yuv2rgbmatrix._m22; r2.w <- yuv2rgbmatrix._m32
                mov r3.xyzw, cb1[7].xyzw  // r3.x <- yuv2rgbmatrix._m03; r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33
                
                #line 333
                ieq r4.x, cb0[12].x, l(6)
                if_nz r4.x
                
                #line 335
                  nop 
                
                #line 306
                  sample_indexable(texture2d)(float,float,float,float) r4.x, v1.xyxx, t0.xyzw, s0  // r4.x <- y0
                
                #line 307
                  sample_indexable(texture2d)(float,float,float,float) r4.y, v1.xyxx, t0.xyzw, s0  // r4.y <- u0
                
                #line 308
                  sample_indexable(texture2d)(float,float,float,float) r4.z, v1.xyxx, t0.xywz, s0  // r4.z <- v0
                
                #line 310
                  itof r4.w, l(1)  // r4.w <- <PSPacked422_Reverse return value>.w
                  mov r4.x, r4.x  // r4.x <- <PSPacked422_Reverse return value>.x
                  mov r4.y, r4.y  // r4.y <- <PSPacked422_Reverse return value>.y
                  mov r4.z, r4.z  // r4.z <- <PSPacked422_Reverse return value>.z
                
                #line 335
                  mov r4.xyzw, r4.xyzw  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 336
                  dp4 r5.x, r4.xyzw, cb1[0].xyzw  // r5.x <- rr.x
                  dp4 r5.y, r4.xyzw, cb1[1].xyzw  // r5.y <- rr.y
                  dp4 r5.z, r4.xyzw, cb1[2].xyzw  // r5.z <- rr.z
                  dp4 r5.w, r4.xyzw, cb1[3].xyzw  // r5.w <- rr.w
                
                #line 337
                  dp4 r4.x, r5.xyzw, r0.xyzw
                  dp4 r4.y, r5.xyzw, r1.xyzw
                  dp4 r4.z, r5.xyzw, r2.xyzw
                  dp4 r4.w, r5.xyzw, r3.xyzw
                  itof r5.xyzw, l(0, 0, 0, 0)
                  max r4.xyzw, r4.xyzw, r5.xyzw  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z; r4.w <- rgbarsp.w
                
                #line 338
                  nop 
                  mov r4.xyzw, r4.xyzw
                
                #line 288
                  ieq r5.x, cb0[14].x, l(1)
                  if_z r5.x
                
                #line 294
                    nop 
                    mov r5.xyzw, r4.xyzw
                
                #line 174
                    ieq r6.x, cb0[12].z, cb0[12].y
                    if_nz r6.x
                
                #line 176
                      mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 177
                    else 
                
                #line 178
                      ieq r6.x, cb0[12].y, l(8)
                      if_nz r6.x
                
                #line 180
                        mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 181
                      else 
                
                #line 182
                        ieq r6.x, cb0[12].y, l(16)
                        if_nz r6.x
                
                #line 184
                          nop 
                          mov r5.xyzw, r5.xyzw
                
                #line 102
                          mov r6.x, l(0.835938)  // r6.x <- ST2084_c1
                
                #line 103
                          mov r6.y, l(18.851562)  // r6.y <- ST2084_c2
                
                #line 104
                          mov r6.z, l(18.687500)  // r6.z <- ST2084_c3
                
                #line 105
                          itof r7.xyzw, l(0, 0, 0, 0)
                          max r7.xyzw, r5.xyzw, r7.xyzw
                          log r7.xyzw, r7.xyzw
                          mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                          exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 106
                          mov r8.xyzw, -r6.xxxx
                          add r8.xyzw, r7.xyzw, r8.xyzw
                          max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                          mul r7.xyzw, r6.zzzz, r7.xyzw
                          mov r7.xyzw, -r7.xyzw
                          add r6.xyzw, r6.yyyy, r7.xyzw
                          div r6.xyzw, r8.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 107
                          log r6.xyzw, r6.xyzw
                          mul r6.xyzw, r6.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                          exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 108
                          itof r7.xyzw, l(10000, 10000, 10000, 10000)
                          mul r5.xyzw, r6.xyzw, r7.xyzw  // r5.x <- <ST2084TOLinear return value>.x; r5.y <- <ST2084TOLinear return value>.y; r5.z <- <ST2084TOLinear return value>.z; r5.w <- <ST2084TOLinear return value>.w
                
                #line 184
                          mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 185
                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 186
                          ieq r6.x, cb0[12].y, l(18)
                          if_nz r6.x
                
                #line 188
                            nop 
                            mov r5.xyzw, r5.xyzw
                
                #line 114
                            itof r6.x, l(1000)  // r6.x <- alpha_gain
                
                #line 115
                            nop 
                            mov r5.x, r5.x
                
                #line 76
                            mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                            mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                            mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                            mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                            ge r7.y, l(0.500000), r5.x
                            if_nz r7.y
                
                #line 81
                              mul r7.y, r5.x, r5.x
                              mul r5.x, r7.x, r7.y
                            else   // Prior locations: r5.x <- rgb.x; r5.x <- rgb.x
                
                #line 83
                              mov r6.w, -r6.w
                              add r6.w, r5.x, r6.w
                              div r6.y, r6.w, r6.y
                              mul r6.y, r6.y, l(1.442695)
                              exp r6.y, r6.y
                              add r5.x, r6.z, r6.y
                            endif 
                
                #line 84
                            mov r5.x, r5.x  // r5.x <- <inverse_HLG return value>
                
                #line 115
                            mov r5.x, r5.x  // r5.x <- rgb.x
                
                #line 116
                            nop 
                            mov r5.y, r5.y
                
                #line 76
                            mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                            mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                            mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                            mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                            ge r7.y, l(0.500000), r5.y
                            if_nz r7.y
                
                #line 81
                              mul r7.y, r5.y, r5.y
                              mul r5.y, r7.x, r7.y
                            else   // Prior locations: r5.y <- rgb.y; r5.y <- rgb.y
                
                #line 83
                              mov r6.w, -r6.w
                              add r6.w, r5.y, r6.w
                              div r6.y, r6.w, r6.y
                              mul r6.y, r6.y, l(1.442695)
                              exp r6.y, r6.y
                              add r5.y, r6.z, r6.y
                            endif 
                
                #line 84
                            mov r5.y, r5.y  // r5.y <- <inverse_HLG return value>
                
                #line 116
                            mov r5.y, r5.y  // r5.y <- rgb.y
                
                #line 117
                            nop 
                            mov r5.z, r5.z
                
                #line 76
                            mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                            mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                            mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                            mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                            ge r7.y, l(0.500000), r5.z
                            if_nz r7.y
                
                #line 81
                              mul r7.y, r5.z, r5.z
                              mul r5.z, r7.x, r7.y
                            else   // Prior locations: r5.z <- rgb.z; r5.z <- rgb.z
                
                #line 83
                              mov r6.w, -r6.w
                              add r6.w, r5.z, r6.w
                              div r6.y, r6.w, r6.y
                              mul r6.y, r6.y, l(1.442695)
                              exp r6.y, r6.y
                              add r5.z, r6.z, r6.y
                            endif 
                
                #line 84
                            mov r5.z, r5.z  // r5.z <- <inverse_HLG return value>
                
                #line 117
                            mov r5.z, r5.z  // r5.z <- rgb.z
                
                #line 118
                            mov r6.yzw, l(0,0.262700,0.678000,0.059300)  // r6.y <- ootf_2020.x; r6.z <- ootf_2020.y; r6.w <- ootf_2020.z
                
                #line 119
                            dp3 r6.y, r6.yzwy, r5.xyzx
                            mul r6.x, r6.y, r6.x  // r6.x <- ootf_ys
                
                #line 120
                            log r6.x, r6.x
                            mul r6.x, r6.x, l(0.200000)
                            exp r6.x, r6.x
                            mul r5.xyzw, r5.xyzw, r6.xxxx  // r5.x <- <HLGTOLinear return value>.x; r5.y <- <HLGTOLinear return value>.y; r5.z <- <HLGTOLinear return value>.z; r5.w <- <HLGTOLinear return value>.w
                
                #line 188
                            mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 189
                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 190
                            ieq r6.x, cb0[12].y, l(1)
                            if_nz r6.x
                
                #line 192
                              nop 
                              mov r5.xyzw, r5.xyzw
                
                #line 127
                              log r6.xyzw, r5.xyzw
                              mul r6.xyzw, r6.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                              exp r5.xyzw, r6.xyzw  // r5.x <- <BT709TOLinear return value>.x; r5.y <- <BT709TOLinear return value>.y; r5.z <- <BT709TOLinear return value>.z; r5.w <- <BT709TOLinear return value>.w
                
                #line 192
                              mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 193
                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 194
                              ieq r6.x, cb0[12].y, l(4)
                              if_nz r6.x
                
                #line 196
                                nop 
                                mov r5.xyzw, r5.xyzw
                
                #line 132
                                log r6.xyzw, r5.xyzw
                                mul r6.xyzw, r6.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                exp r5.xyzw, r6.xyzw  // r5.x <- <BT470M_SRGB_TOLinear return value>.x; r5.y <- <BT470M_SRGB_TOLinear return value>.y; r5.z <- <BT470M_SRGB_TOLinear return value>.z; r5.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 196
                                mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 197
                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 198
                                ieq r6.x, cb0[12].y, l(5)
                                if_nz r6.x
                
                #line 200
                                  nop 
                                  mov r5.xyzw, r5.xyzw
                
                #line 136
                                  log r6.xyzw, r5.xyzw
                                  mul r6.xyzw, r6.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                  exp r5.xyzw, r6.xyzw  // r5.x <- <BT470BGTOLinear return value>.x; r5.y <- <BT470BGTOLinear return value>.y; r5.z <- <BT470BGTOLinear return value>.z; r5.w <- <BT470BGTOLinear return value>.w
                
                #line 200
                                  mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 201
                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 204
                                  mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 205
                                endif 
                              endif 
                            endif 
                          endif 
                        endif 
                      endif 
                    endif 
                
                #line 294
                    mov r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 295
                    nop 
                    mov r5.xyzw, r5.xyzw
                
                #line 212
                    ine r6.x, cb0[12].w, cb0[13].x
                    if_nz r6.x
                
                #line 214
                      dp4 r6.x, r5.xyzw, cb1[8].xyzw
                      dp4 r6.y, r5.xyzw, cb1[9].xyzw
                      dp4 r6.z, r5.xyzw, cb1[10].xyzw
                      itof r7.xyz, l(0, 0, 0, 0)
                      max r5.xyz, r6.xyzx, r7.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 215
                    else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 218
                      mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 219
                    endif 
                
                #line 295
                    mov r5.xyz, r5.xyzx
                
                #line 296
                    nop 
                    mov r5.xyz, r5.xyzx
                
                #line 224
                    ieq r5.w, cb0[12].y, cb0[12].z
                    if_nz r5.w
                
                #line 226
                      mov r4.xyz, r5.xyzx
                
                #line 227
                    endif   // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 228
                    if_z r5.w
                      ieq r5.w, cb0[12].z, l(1)
                      ieq r6.x, cb0[12].z, l(4)
                      or r5.w, r5.w, r6.x
                      if_nz r5.w
                
                #line 230
                        ieq r5.w, cb0[12].y, l(16)
                        ieq r6.x, cb0[12].y, l(18)
                        or r5.w, r5.w, r6.x
                        if_nz r5.w
                
                #line 232
                          nop 
                          mov r5.xyz, r5.xyzx
                
                #line 166
                          mov r6.xyz, l(11.200000,11.200000,11.200000,0)  // r6.x <- tmp.x; r6.y <- tmp.y; r6.z <- tmp.z
                
                #line 167
                          nop 
                          mov r6.xyz, r6.xyzx
                
                #line 160
                          mov r5.w, l(0.150000)  // r5.w <- A
                          mov r6.w, l(0.500000)  // r6.w <- B
                
                #line 161
                          mul r7.xyz, r6.xyzx, r5.wwww
                          add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                          mul r7.xyz, r6.xyzx, r7.xyzx
                          add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                          mul r8.xyz, r6.xyzx, r5.wwww
                          add r8.xyz, r6.wwww, r8.xyzx
                          mul r6.xyz, r6.xyzx, r8.xyzx
                          add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                          div r6.xyz, r7.xyzx, r6.xyzx
                          mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                          add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 167
                          mov r6.xyz, r6.xyzx  // r6.x <- HABLE_DIV.x; r6.y <- HABLE_DIV.y; r6.z <- HABLE_DIV.z
                
                #line 168
                          nop 
                          mul r7.xyz, r5.xyzx, cb0[13].wwww
                
                #line 160
                          mov r5.w, l(0.150000)
                          mov r6.w, l(0.500000)
                
                #line 161
                          mul r8.xyz, r7.xyzx, r5.wwww
                          add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                          mul r8.xyz, r7.xyzx, r8.xyzx
                          add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                          mul r9.xyz, r7.xyzx, r5.wwww
                          add r9.xyz, r6.wwww, r9.xyzx
                          mul r7.xyz, r7.xyzx, r9.xyzx
                          add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                          div r7.xyz, r8.xyzx, r7.xyzx
                          mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                          add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 168
                          div r4.xyz, r7.xyzx, r6.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 169
                          mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 232
                          mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 233
                        else 
                
                #line 236
                          mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 237
                        endif 
                
                #line 238
                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 241
                        mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 242
                      endif 
                    endif 
                
                #line 296
                    mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 297
                    nop 
                    mov r4.xyz, r4.xyzx
                
                #line 253
                    ieq r5.x, cb0[12].y, cb0[12].z
                    if_nz r5.x
                
                #line 255
                      mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 256
                    else 
                
                #line 257
                      ieq r5.x, cb0[12].z, l(16)
                      if_nz r5.x
                
                #line 259
                        nop 
                        mov r4.xyz, r4.xyzx
                
                #line 147
                        mov r5.x, l(0.159302)  // r5.x <- ST2084_m1
                
                #line 148
                        mov r5.y, l(78.843750)  // r5.y <- ST2084_m2
                
                #line 149
                        mov r5.z, l(0.835938)  // r5.z <- ST2084_c1
                
                #line 150
                        mov r5.w, l(18.851562)  // r5.w <- ST2084_c2
                
                #line 151
                        mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 152
                        itof r6.yzw, l(0, 10000, 10000, 10000)
                        div r6.yzw, r4.xxyz, r6.yyzw
                        log r6.yzw, r6.yyzw
                        mul r6.yzw, r5.xxxx, r6.yyzw
                        exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 153
                        mul r7.xyz, r5.wwww, r6.yzwy
                        add r5.xzw, r5.zzzz, r7.xxyz
                        itof r7.xyz, l(1, 1, 1, 0)
                        mul r6.xyz, r6.yzwy, r6.xxxx
                        add r6.xyz, r6.xyzx, r7.xyzx
                        div r5.xzw, r5.xxzw, r6.xxyz  // r5.x <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 154
                        log r5.xzw, r5.xxzw
                        mul r5.xyz, r5.xzwx, r5.yyyy
                        exp r4.xyz, r5.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 155
                        mov r4.xyz, r4.xyzx  // r4.x <- <LineTOST2084 return value>.x; r4.y <- <LineTOST2084 return value>.y; r4.z <- <LineTOST2084 return value>.z
                
                #line 259
                        mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 260
                      else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 261
                        ieq r5.x, cb0[12].z, l(18)
                        if_nz r5.x
                
                #line 263
                          mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 264
                        else 
                
                #line 265
                          ieq r5.x, cb0[12].z, l(1)
                          if_nz r5.x
                
                #line 267
                            log r5.xyz, r4.xyzx
                            mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                            exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 268
                          else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 269
                            ieq r5.x, cb0[12].z, l(4)
                            if_nz r5.x
                
                #line 271
                              log r5.xyz, r4.xyzx
                              mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                              exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 272
                            else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 275
                              mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 276
                            endif 
                          endif 
                        endif 
                      endif 
                    endif 
                
                #line 297
                    mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 298
                    nop 
                    mov r4.xyz, r4.xyzx
                
                #line 248
                    mov r4.xyz, r4.xyzx  // r4.x <- <adjustRange return value>.x; r4.y <- <adjustRange return value>.y; r4.z <- <adjustRange return value>.z
                
                #line 298
                    mov r4.xyz, r4.xyzx
                
                #line 299
                    nop 
                    mov r4.xyz, r4.xyzx
                
                #line 282
                    mov r4.xyz, r4.xyzx  // r4.x <- <reorderPlanes return value>.x; r4.y <- <reorderPlanes return value>.y; r4.z <- <reorderPlanes return value>.z
                
                #line 299
                    mov r4.xyz, r4.xyzx
                
                #line 300
                  endif 
                
                #line 301
                  mov r4.xyz, r4.xyzx  // r4.x <- <RenderFloat return value>.x; r4.y <- <RenderFloat return value>.y; r4.z <- <RenderFloat return value>.z
                
                #line 338
                  mov r4.xyz, r4.xyzx  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z
                
                #line 339
                  itof r4.w, l(1)  // r4.w <- rgbarsp.w
                
                #line 340
                  mov r4.xyz, r4.xyzx  // r4.x <- <GetRGBA return value>.x; r4.y <- <GetRGBA return value>.y; r4.z <- <GetRGBA return value>.z
                  mov r4.w, r4.w  // r4.w <- <GetRGBA return value>.w
                
                #line 341
                else 
                
                #line 342
                  ieq r5.x, cb0[12].x, l(5)
                  if_nz r5.x
                
                #line 344
                    nop 
                
                #line 306
                    sample_indexable(texture2d)(float,float,float,float) r5.x, v1.xyxx, t0.xyzw, s0  // r5.x <- y0
                
                #line 307
                    sample_indexable(texture2d)(float,float,float,float) r5.y, v1.xyxx, t0.xyzw, s0  // r5.y <- u0
                
                #line 308
                    sample_indexable(texture2d)(float,float,float,float) r5.z, v1.xyxx, t0.xywz, s0  // r5.z <- v0
                
                #line 310
                    itof r5.w, l(1)  // r5.w <- <PSPacked422_Reverse return value>.w
                    mov r5.x, r5.x  // r5.x <- <PSPacked422_Reverse return value>.x
                    mov r5.y, r5.y  // r5.y <- <PSPacked422_Reverse return value>.y
                    mov r5.z, r5.z  // r5.z <- <PSPacked422_Reverse return value>.z
                
                #line 344
                    mov r5.xyzw, r5.xyzw  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w
                
                #line 345
                    dp4 r6.x, r5.xyzw, cb1[0].xyzw  // r6.x <- rr.x
                    dp4 r6.y, r5.xyzw, cb1[1].xyzw  // r6.y <- rr.y
                    dp4 r6.z, r5.xyzw, cb1[2].xyzw  // r6.z <- rr.z
                    dp4 r6.w, r5.xyzw, cb1[3].xyzw  // r6.w <- rr.w
                
                #line 346
                    dp4 r5.x, r6.xyzw, r0.xyzw
                    dp4 r5.y, r6.xyzw, r1.xyzw
                    dp4 r5.z, r6.xyzw, r2.xyzw
                    dp4 r5.w, r6.xyzw, r3.xyzw
                    itof r6.xyzw, l(0, 0, 0, 0)
                    max r4.xyzw, r5.xyzw, r6.xyzw  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z; r4.w <- rgbarsp.w
                
                #line 347
                    nop 
                    mov r4.xyzw, r4.xyzw
                
                #line 288
                    ieq r5.x, cb0[14].x, l(1)
                    if_z r5.x
                
                #line 294
                      nop 
                      mov r5.xyzw, r4.xyzw
                
                #line 174
                      ieq r6.x, cb0[12].z, cb0[12].y
                      if_nz r6.x
                
                #line 176
                        mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 177
                      else 
                
                #line 178
                        ieq r6.x, cb0[12].y, l(8)
                        if_nz r6.x
                
                #line 180
                          mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 181
                        else 
                
                #line 182
                          ieq r6.x, cb0[12].y, l(16)
                          if_nz r6.x
                
                #line 184
                            nop 
                            mov r5.xyzw, r5.xyzw
                
                #line 102
                            mov r6.x, l(0.835938)  // r6.x <- ST2084_c1
                
                #line 103
                            mov r6.y, l(18.851562)  // r6.y <- ST2084_c2
                
                #line 104
                            mov r6.z, l(18.687500)  // r6.z <- ST2084_c3
                
                #line 105
                            itof r7.xyzw, l(0, 0, 0, 0)
                            max r7.xyzw, r5.xyzw, r7.xyzw
                            log r7.xyzw, r7.xyzw
                            mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                            exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 106
                            mov r8.xyzw, -r6.xxxx
                            add r8.xyzw, r7.xyzw, r8.xyzw
                            max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                            mul r7.xyzw, r6.zzzz, r7.xyzw
                            mov r7.xyzw, -r7.xyzw
                            add r6.xyzw, r6.yyyy, r7.xyzw
                            div r6.xyzw, r8.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 107
                            log r6.xyzw, r6.xyzw
                            mul r6.xyzw, r6.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                            exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 108
                            itof r7.xyzw, l(10000, 10000, 10000, 10000)
                            mul r5.xyzw, r6.xyzw, r7.xyzw  // r5.x <- <ST2084TOLinear return value>.x; r5.y <- <ST2084TOLinear return value>.y; r5.z <- <ST2084TOLinear return value>.z; r5.w <- <ST2084TOLinear return value>.w
                
                #line 184
                            mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 185
                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 186
                            ieq r6.x, cb0[12].y, l(18)
                            if_nz r6.x
                
                #line 188
                              nop 
                              mov r5.xyzw, r5.xyzw
                
                #line 114
                              itof r6.x, l(1000)  // r6.x <- alpha_gain
                
                #line 115
                              nop 
                              mov r5.x, r5.x
                
                #line 76
                              mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                              mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                              mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                              mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                              ge r7.y, l(0.500000), r5.x
                              if_nz r7.y
                
                #line 81
                                mul r7.y, r5.x, r5.x
                                mul r5.x, r7.x, r7.y
                              else   // Prior locations: r5.x <- rgb.x; r5.x <- rgb.x
                
                #line 83
                                mov r6.w, -r6.w
                                add r6.w, r5.x, r6.w
                                div r6.y, r6.w, r6.y
                                mul r6.y, r6.y, l(1.442695)
                                exp r6.y, r6.y
                                add r5.x, r6.z, r6.y
                              endif 
                
                #line 84
                              mov r5.x, r5.x  // r5.x <- <inverse_HLG return value>
                
                #line 115
                              mov r5.x, r5.x  // r5.x <- rgb.x
                
                #line 116
                              nop 
                              mov r5.y, r5.y
                
                #line 76
                              mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                              mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                              mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                              mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                              ge r7.y, l(0.500000), r5.y
                              if_nz r7.y
                
                #line 81
                                mul r7.y, r5.y, r5.y
                                mul r5.y, r7.x, r7.y
                              else   // Prior locations: r5.y <- rgb.y; r5.y <- rgb.y
                
                #line 83
                                mov r6.w, -r6.w
                                add r6.w, r5.y, r6.w
                                div r6.y, r6.w, r6.y
                                mul r6.y, r6.y, l(1.442695)
                                exp r6.y, r6.y
                                add r5.y, r6.z, r6.y
                              endif 
                
                #line 84
                              mov r5.y, r5.y  // r5.y <- <inverse_HLG return value>
                
                #line 116
                              mov r5.y, r5.y  // r5.y <- rgb.y
                
                #line 117
                              nop 
                              mov r5.z, r5.z
                
                #line 76
                              mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                              mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                              mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                              mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                              ge r7.y, l(0.500000), r5.z
                              if_nz r7.y
                
                #line 81
                                mul r7.y, r5.z, r5.z
                                mul r5.z, r7.x, r7.y
                              else   // Prior locations: r5.z <- rgb.z; r5.z <- rgb.z
                
                #line 83
                                mov r6.w, -r6.w
                                add r6.w, r5.z, r6.w
                                div r6.y, r6.w, r6.y
                                mul r6.y, r6.y, l(1.442695)
                                exp r6.y, r6.y
                                add r5.z, r6.z, r6.y
                              endif 
                
                #line 84
                              mov r5.z, r5.z  // r5.z <- <inverse_HLG return value>
                
                #line 117
                              mov r5.z, r5.z  // r5.z <- rgb.z
                
                #line 118
                              mov r6.yzw, l(0,0.262700,0.678000,0.059300)  // r6.y <- ootf_2020.x; r6.z <- ootf_2020.y; r6.w <- ootf_2020.z
                
                #line 119
                              dp3 r6.y, r6.yzwy, r5.xyzx
                              mul r6.x, r6.y, r6.x  // r6.x <- ootf_ys
                
                #line 120
                              log r6.x, r6.x
                              mul r6.x, r6.x, l(0.200000)
                              exp r6.x, r6.x
                              mul r5.xyzw, r5.xyzw, r6.xxxx  // r5.x <- <HLGTOLinear return value>.x; r5.y <- <HLGTOLinear return value>.y; r5.z <- <HLGTOLinear return value>.z; r5.w <- <HLGTOLinear return value>.w
                
                #line 188
                              mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 189
                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 190
                              ieq r6.x, cb0[12].y, l(1)
                              if_nz r6.x
                
                #line 192
                                nop 
                                mov r5.xyzw, r5.xyzw
                
                #line 127
                                log r6.xyzw, r5.xyzw
                                mul r6.xyzw, r6.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                exp r5.xyzw, r6.xyzw  // r5.x <- <BT709TOLinear return value>.x; r5.y <- <BT709TOLinear return value>.y; r5.z <- <BT709TOLinear return value>.z; r5.w <- <BT709TOLinear return value>.w
                
                #line 192
                                mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 193
                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 194
                                ieq r6.x, cb0[12].y, l(4)
                                if_nz r6.x
                
                #line 196
                                  nop 
                                  mov r5.xyzw, r5.xyzw
                
                #line 132
                                  log r6.xyzw, r5.xyzw
                                  mul r6.xyzw, r6.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                  exp r5.xyzw, r6.xyzw  // r5.x <- <BT470M_SRGB_TOLinear return value>.x; r5.y <- <BT470M_SRGB_TOLinear return value>.y; r5.z <- <BT470M_SRGB_TOLinear return value>.z; r5.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 196
                                  mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 197
                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 198
                                  ieq r6.x, cb0[12].y, l(5)
                                  if_nz r6.x
                
                #line 200
                                    nop 
                                    mov r5.xyzw, r5.xyzw
                
                #line 136
                                    log r6.xyzw, r5.xyzw
                                    mul r6.xyzw, r6.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                    exp r5.xyzw, r6.xyzw  // r5.x <- <BT470BGTOLinear return value>.x; r5.y <- <BT470BGTOLinear return value>.y; r5.z <- <BT470BGTOLinear return value>.z; r5.w <- <BT470BGTOLinear return value>.w
                
                #line 200
                                    mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 201
                                  else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 204
                                    mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 205
                                  endif 
                                endif 
                              endif 
                            endif 
                          endif 
                        endif 
                      endif 
                
                #line 294
                      mov r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 295
                      nop 
                      mov r5.xyzw, r5.xyzw
                
                #line 212
                      ine r6.x, cb0[12].w, cb0[13].x
                      if_nz r6.x
                
                #line 214
                        dp4 r6.x, r5.xyzw, cb1[8].xyzw
                        dp4 r6.y, r5.xyzw, cb1[9].xyzw
                        dp4 r6.z, r5.xyzw, cb1[10].xyzw
                        itof r7.xyz, l(0, 0, 0, 0)
                        max r5.xyz, r6.xyzx, r7.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 215
                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 218
                        mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 219
                      endif 
                
                #line 295
                      mov r5.xyz, r5.xyzx
                
                #line 296
                      nop 
                      mov r5.xyz, r5.xyzx
                
                #line 224
                      ieq r5.w, cb0[12].y, cb0[12].z
                      if_nz r5.w
                
                #line 226
                        mov r4.xyz, r5.xyzx
                
                #line 227
                      endif   // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 228
                      if_z r5.w
                        ieq r5.w, cb0[12].z, l(1)
                        ieq r6.x, cb0[12].z, l(4)
                        or r5.w, r5.w, r6.x
                        if_nz r5.w
                
                #line 230
                          ieq r5.w, cb0[12].y, l(16)
                          ieq r6.x, cb0[12].y, l(18)
                          or r5.w, r5.w, r6.x
                          if_nz r5.w
                
                #line 232
                            nop 
                            mov r5.xyz, r5.xyzx
                
                #line 166
                            mov r6.xyz, l(11.200000,11.200000,11.200000,0)  // r6.x <- tmp.x; r6.y <- tmp.y; r6.z <- tmp.z
                
                #line 167
                            nop 
                            mov r6.xyz, r6.xyzx
                
                #line 160
                            mov r5.w, l(0.150000)  // r5.w <- A
                            mov r6.w, l(0.500000)  // r6.w <- B
                
                #line 161
                            mul r7.xyz, r6.xyzx, r5.wwww
                            add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                            mul r7.xyz, r6.xyzx, r7.xyzx
                            add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                            mul r8.xyz, r6.xyzx, r5.wwww
                            add r8.xyz, r6.wwww, r8.xyzx
                            mul r6.xyz, r6.xyzx, r8.xyzx
                            add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                            div r6.xyz, r7.xyzx, r6.xyzx
                            mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                            add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 167
                            mov r6.xyz, r6.xyzx  // r6.x <- HABLE_DIV.x; r6.y <- HABLE_DIV.y; r6.z <- HABLE_DIV.z
                
                #line 168
                            nop 
                            mul r7.xyz, r5.xyzx, cb0[13].wwww
                
                #line 160
                            mov r5.w, l(0.150000)
                            mov r6.w, l(0.500000)
                
                #line 161
                            mul r8.xyz, r7.xyzx, r5.wwww
                            add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                            mul r8.xyz, r7.xyzx, r8.xyzx
                            add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                            mul r9.xyz, r7.xyzx, r5.wwww
                            add r9.xyz, r6.wwww, r9.xyzx
                            mul r7.xyz, r7.xyzx, r9.xyzx
                            add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                            div r7.xyz, r8.xyzx, r7.xyzx
                            mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                            add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 168
                            div r4.xyz, r7.xyzx, r6.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 169
                            mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 232
                            mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 233
                          else 
                
                #line 236
                            mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 237
                          endif 
                
                #line 238
                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 241
                          mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 242
                        endif 
                      endif 
                
                #line 296
                      mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 297
                      nop 
                      mov r4.xyz, r4.xyzx
                
                #line 253
                      ieq r5.x, cb0[12].y, cb0[12].z
                      if_nz r5.x
                
                #line 255
                        mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 256
                      else 
                
                #line 257
                        ieq r5.x, cb0[12].z, l(16)
                        if_nz r5.x
                
                #line 259
                          nop 
                          mov r4.xyz, r4.xyzx
                
                #line 147
                          mov r5.x, l(0.159302)  // r5.x <- ST2084_m1
                
                #line 148
                          mov r5.y, l(78.843750)  // r5.y <- ST2084_m2
                
                #line 149
                          mov r5.z, l(0.835938)  // r5.z <- ST2084_c1
                
                #line 150
                          mov r5.w, l(18.851562)  // r5.w <- ST2084_c2
                
                #line 151
                          mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 152
                          itof r6.yzw, l(0, 10000, 10000, 10000)
                          div r6.yzw, r4.xxyz, r6.yyzw
                          log r6.yzw, r6.yyzw
                          mul r6.yzw, r5.xxxx, r6.yyzw
                          exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 153
                          mul r7.xyz, r5.wwww, r6.yzwy
                          add r5.xzw, r5.zzzz, r7.xxyz
                          itof r7.xyz, l(1, 1, 1, 0)
                          mul r6.xyz, r6.yzwy, r6.xxxx
                          add r6.xyz, r6.xyzx, r7.xyzx
                          div r5.xzw, r5.xxzw, r6.xxyz  // r5.x <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 154
                          log r5.xzw, r5.xxzw
                          mul r5.xyz, r5.xzwx, r5.yyyy
                          exp r4.xyz, r5.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 155
                          mov r4.xyz, r4.xyzx  // r4.x <- <LineTOST2084 return value>.x; r4.y <- <LineTOST2084 return value>.y; r4.z <- <LineTOST2084 return value>.z
                
                #line 259
                          mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 260
                        else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 261
                          ieq r5.x, cb0[12].z, l(18)
                          if_nz r5.x
                
                #line 263
                            mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 264
                          else 
                
                #line 265
                            ieq r5.x, cb0[12].z, l(1)
                            if_nz r5.x
                
                #line 267
                              log r5.xyz, r4.xyzx
                              mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                              exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 268
                            else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 269
                              ieq r5.x, cb0[12].z, l(4)
                              if_nz r5.x
                
                #line 271
                                log r5.xyz, r4.xyzx
                                mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 272
                              else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 275
                                mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 276
                              endif 
                            endif 
                          endif 
                        endif 
                      endif 
                
                #line 297
                      mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 298
                      nop 
                      mov r4.xyz, r4.xyzx
                
                #line 248
                      mov r4.xyz, r4.xyzx  // r4.x <- <adjustRange return value>.x; r4.y <- <adjustRange return value>.y; r4.z <- <adjustRange return value>.z
                
                #line 298
                      mov r4.xyz, r4.xyzx
                
                #line 299
                      nop 
                      mov r4.xyz, r4.xyzx
                
                #line 282
                      mov r4.xyz, r4.xyzx  // r4.x <- <reorderPlanes return value>.x; r4.y <- <reorderPlanes return value>.y; r4.z <- <reorderPlanes return value>.z
                
                #line 299
                      mov r4.xyz, r4.xyzx
                
                #line 300
                    endif 
                
                #line 301
                    mov r4.xyz, r4.xyzx  // r4.x <- <RenderFloat return value>.x; r4.y <- <RenderFloat return value>.y; r4.z <- <RenderFloat return value>.z
                
                #line 347
                    mov r4.xyz, r4.xyzx  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z
                
                #line 348
                    itof r4.w, l(1)  // r4.w <- rgbarsp.w
                
                #line 349
                    mov r4.xyz, r4.xyzx  // r4.x <- <GetRGBA return value>.x; r4.y <- <GetRGBA return value>.y; r4.z <- <GetRGBA return value>.z
                    mov r4.w, r4.w  // r4.w <- <GetRGBA return value>.w
                
                #line 350
                  else 
                
                #line 351
                    ieq r5.x, cb0[12].x, l(3)
                    if_nz r5.x
                
                #line 353
                      nop 
                
                #line 306
                      sample_indexable(texture2d)(float,float,float,float) r5.x, v1.xyxx, t0.xyzw, s0  // r5.x <- y0
                
                #line 307
                      sample_indexable(texture2d)(float,float,float,float) r5.y, v1.xyxx, t0.xyzw, s0  // r5.y <- u0
                
                #line 308
                      sample_indexable(texture2d)(float,float,float,float) r5.z, v1.xyxx, t0.xywz, s0  // r5.z <- v0
                
                #line 310
                      itof r5.w, l(1)  // r5.w <- <PSPacked422_Reverse return value>.w
                      mov r5.x, r5.x  // r5.x <- <PSPacked422_Reverse return value>.x
                      mov r5.y, r5.y  // r5.y <- <PSPacked422_Reverse return value>.y
                      mov r5.z, r5.z  // r5.z <- <PSPacked422_Reverse return value>.z
                
                #line 353
                      mov r5.xyzw, r5.xyzw  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w
                
                #line 354
                      dp4 r6.x, r5.xyzw, cb1[0].xyzw  // r6.x <- rr.x
                      dp4 r6.y, r5.xyzw, cb1[1].xyzw  // r6.y <- rr.y
                      dp4 r6.z, r5.xyzw, cb1[2].xyzw  // r6.z <- rr.z
                      dp4 r6.w, r5.xyzw, cb1[3].xyzw  // r6.w <- rr.w
                
                #line 355
                      dp4 r5.x, r6.xyzw, r0.xyzw
                      dp4 r5.y, r6.xyzw, r1.xyzw
                      dp4 r5.z, r6.xyzw, r2.xyzw
                      dp4 r5.w, r6.xyzw, r3.xyzw
                      itof r6.xyzw, l(0, 0, 0, 0)
                      max r4.xyzw, r5.xyzw, r6.xyzw  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z; r4.w <- rgbarsp.w
                
                #line 356
                      nop 
                      mov r4.xyzw, r4.xyzw
                
                #line 288
                      ieq r5.x, cb0[14].x, l(1)
                      if_z r5.x
                
                #line 294
                        nop 
                        mov r5.xyzw, r4.xyzw
                
                #line 174
                        ieq r6.x, cb0[12].z, cb0[12].y
                        if_nz r6.x
                
                #line 176
                          mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 177
                        else 
                
                #line 178
                          ieq r6.x, cb0[12].y, l(8)
                          if_nz r6.x
                
                #line 180
                            mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 181
                          else 
                
                #line 182
                            ieq r6.x, cb0[12].y, l(16)
                            if_nz r6.x
                
                #line 184
                              nop 
                              mov r5.xyzw, r5.xyzw
                
                #line 102
                              mov r6.x, l(0.835938)  // r6.x <- ST2084_c1
                
                #line 103
                              mov r6.y, l(18.851562)  // r6.y <- ST2084_c2
                
                #line 104
                              mov r6.z, l(18.687500)  // r6.z <- ST2084_c3
                
                #line 105
                              itof r7.xyzw, l(0, 0, 0, 0)
                              max r7.xyzw, r5.xyzw, r7.xyzw
                              log r7.xyzw, r7.xyzw
                              mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                              exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 106
                              mov r8.xyzw, -r6.xxxx
                              add r8.xyzw, r7.xyzw, r8.xyzw
                              max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                              mul r7.xyzw, r6.zzzz, r7.xyzw
                              mov r7.xyzw, -r7.xyzw
                              add r6.xyzw, r6.yyyy, r7.xyzw
                              div r6.xyzw, r8.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 107
                              log r6.xyzw, r6.xyzw
                              mul r6.xyzw, r6.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                              exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 108
                              itof r7.xyzw, l(10000, 10000, 10000, 10000)
                              mul r5.xyzw, r6.xyzw, r7.xyzw  // r5.x <- <ST2084TOLinear return value>.x; r5.y <- <ST2084TOLinear return value>.y; r5.z <- <ST2084TOLinear return value>.z; r5.w <- <ST2084TOLinear return value>.w
                
                #line 184
                              mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 185
                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 186
                              ieq r6.x, cb0[12].y, l(18)
                              if_nz r6.x
                
                #line 188
                                nop 
                                mov r5.xyzw, r5.xyzw
                
                #line 114
                                itof r6.x, l(1000)  // r6.x <- alpha_gain
                
                #line 115
                                nop 
                                mov r5.x, r5.x
                
                #line 76
                                mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                ge r7.y, l(0.500000), r5.x
                                if_nz r7.y
                
                #line 81
                                  mul r7.y, r5.x, r5.x
                                  mul r5.x, r7.x, r7.y
                                else   // Prior locations: r5.x <- rgb.x; r5.x <- rgb.x
                
                #line 83
                                  mov r6.w, -r6.w
                                  add r6.w, r5.x, r6.w
                                  div r6.y, r6.w, r6.y
                                  mul r6.y, r6.y, l(1.442695)
                                  exp r6.y, r6.y
                                  add r5.x, r6.z, r6.y
                                endif 
                
                #line 84
                                mov r5.x, r5.x  // r5.x <- <inverse_HLG return value>
                
                #line 115
                                mov r5.x, r5.x  // r5.x <- rgb.x
                
                #line 116
                                nop 
                                mov r5.y, r5.y
                
                #line 76
                                mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                ge r7.y, l(0.500000), r5.y
                                if_nz r7.y
                
                #line 81
                                  mul r7.y, r5.y, r5.y
                                  mul r5.y, r7.x, r7.y
                                else   // Prior locations: r5.y <- rgb.y; r5.y <- rgb.y
                
                #line 83
                                  mov r6.w, -r6.w
                                  add r6.w, r5.y, r6.w
                                  div r6.y, r6.w, r6.y
                                  mul r6.y, r6.y, l(1.442695)
                                  exp r6.y, r6.y
                                  add r5.y, r6.z, r6.y
                                endif 
                
                #line 84
                                mov r5.y, r5.y  // r5.y <- <inverse_HLG return value>
                
                #line 116
                                mov r5.y, r5.y  // r5.y <- rgb.y
                
                #line 117
                                nop 
                                mov r5.z, r5.z
                
                #line 76
                                mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                ge r7.y, l(0.500000), r5.z
                                if_nz r7.y
                
                #line 81
                                  mul r7.y, r5.z, r5.z
                                  mul r5.z, r7.x, r7.y
                                else   // Prior locations: r5.z <- rgb.z; r5.z <- rgb.z
                
                #line 83
                                  mov r6.w, -r6.w
                                  add r6.w, r5.z, r6.w
                                  div r6.y, r6.w, r6.y
                                  mul r6.y, r6.y, l(1.442695)
                                  exp r6.y, r6.y
                                  add r5.z, r6.z, r6.y
                                endif 
                
                #line 84
                                mov r5.z, r5.z  // r5.z <- <inverse_HLG return value>
                
                #line 117
                                mov r5.z, r5.z  // r5.z <- rgb.z
                
                #line 118
                                mov r6.yzw, l(0,0.262700,0.678000,0.059300)  // r6.y <- ootf_2020.x; r6.z <- ootf_2020.y; r6.w <- ootf_2020.z
                
                #line 119
                                dp3 r6.y, r6.yzwy, r5.xyzx
                                mul r6.x, r6.y, r6.x  // r6.x <- ootf_ys
                
                #line 120
                                log r6.x, r6.x
                                mul r6.x, r6.x, l(0.200000)
                                exp r6.x, r6.x
                                mul r5.xyzw, r5.xyzw, r6.xxxx  // r5.x <- <HLGTOLinear return value>.x; r5.y <- <HLGTOLinear return value>.y; r5.z <- <HLGTOLinear return value>.z; r5.w <- <HLGTOLinear return value>.w
                
                #line 188
                                mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 189
                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 190
                                ieq r6.x, cb0[12].y, l(1)
                                if_nz r6.x
                
                #line 192
                                  nop 
                                  mov r5.xyzw, r5.xyzw
                
                #line 127
                                  log r6.xyzw, r5.xyzw
                                  mul r6.xyzw, r6.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                  exp r5.xyzw, r6.xyzw  // r5.x <- <BT709TOLinear return value>.x; r5.y <- <BT709TOLinear return value>.y; r5.z <- <BT709TOLinear return value>.z; r5.w <- <BT709TOLinear return value>.w
                
                #line 192
                                  mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 193
                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 194
                                  ieq r6.x, cb0[12].y, l(4)
                                  if_nz r6.x
                
                #line 196
                                    nop 
                                    mov r5.xyzw, r5.xyzw
                
                #line 132
                                    log r6.xyzw, r5.xyzw
                                    mul r6.xyzw, r6.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                    exp r5.xyzw, r6.xyzw  // r5.x <- <BT470M_SRGB_TOLinear return value>.x; r5.y <- <BT470M_SRGB_TOLinear return value>.y; r5.z <- <BT470M_SRGB_TOLinear return value>.z; r5.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 196
                                    mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 197
                                  else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 198
                                    ieq r6.x, cb0[12].y, l(5)
                                    if_nz r6.x
                
                #line 200
                                      nop 
                                      mov r5.xyzw, r5.xyzw
                
                #line 136
                                      log r6.xyzw, r5.xyzw
                                      mul r6.xyzw, r6.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                      exp r5.xyzw, r6.xyzw  // r5.x <- <BT470BGTOLinear return value>.x; r5.y <- <BT470BGTOLinear return value>.y; r5.z <- <BT470BGTOLinear return value>.z; r5.w <- <BT470BGTOLinear return value>.w
                
                #line 200
                                      mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 201
                                    else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 204
                                      mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 205
                                    endif 
                                  endif 
                                endif 
                              endif 
                            endif 
                          endif 
                        endif 
                
                #line 294
                        mov r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 295
                        nop 
                        mov r5.xyzw, r5.xyzw
                
                #line 212
                        ine r6.x, cb0[12].w, cb0[13].x
                        if_nz r6.x
                
                #line 214
                          dp4 r6.x, r5.xyzw, cb1[8].xyzw
                          dp4 r6.y, r5.xyzw, cb1[9].xyzw
                          dp4 r6.z, r5.xyzw, cb1[10].xyzw
                          itof r7.xyz, l(0, 0, 0, 0)
                          max r5.xyz, r6.xyzx, r7.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 215
                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 218
                          mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 219
                        endif 
                
                #line 295
                        mov r5.xyz, r5.xyzx
                
                #line 296
                        nop 
                        mov r5.xyz, r5.xyzx
                
                #line 224
                        ieq r5.w, cb0[12].y, cb0[12].z
                        if_nz r5.w
                
                #line 226
                          mov r4.xyz, r5.xyzx
                
                #line 227
                        endif   // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 228
                        if_z r5.w
                          ieq r5.w, cb0[12].z, l(1)
                          ieq r6.x, cb0[12].z, l(4)
                          or r5.w, r5.w, r6.x
                          if_nz r5.w
                
                #line 230
                            ieq r5.w, cb0[12].y, l(16)
                            ieq r6.x, cb0[12].y, l(18)
                            or r5.w, r5.w, r6.x
                            if_nz r5.w
                
                #line 232
                              nop 
                              mov r5.xyz, r5.xyzx
                
                #line 166
                              mov r6.xyz, l(11.200000,11.200000,11.200000,0)  // r6.x <- tmp.x; r6.y <- tmp.y; r6.z <- tmp.z
                
                #line 167
                              nop 
                              mov r6.xyz, r6.xyzx
                
                #line 160
                              mov r5.w, l(0.150000)  // r5.w <- A
                              mov r6.w, l(0.500000)  // r6.w <- B
                
                #line 161
                              mul r7.xyz, r6.xyzx, r5.wwww
                              add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                              mul r7.xyz, r6.xyzx, r7.xyzx
                              add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                              mul r8.xyz, r6.xyzx, r5.wwww
                              add r8.xyz, r6.wwww, r8.xyzx
                              mul r6.xyz, r6.xyzx, r8.xyzx
                              add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                              div r6.xyz, r7.xyzx, r6.xyzx
                              mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                              add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 167
                              mov r6.xyz, r6.xyzx  // r6.x <- HABLE_DIV.x; r6.y <- HABLE_DIV.y; r6.z <- HABLE_DIV.z
                
                #line 168
                              nop 
                              mul r7.xyz, r5.xyzx, cb0[13].wwww
                
                #line 160
                              mov r5.w, l(0.150000)
                              mov r6.w, l(0.500000)
                
                #line 161
                              mul r8.xyz, r7.xyzx, r5.wwww
                              add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                              mul r8.xyz, r7.xyzx, r8.xyzx
                              add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                              mul r9.xyz, r7.xyzx, r5.wwww
                              add r9.xyz, r6.wwww, r9.xyzx
                              mul r7.xyz, r7.xyzx, r9.xyzx
                              add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                              div r7.xyz, r8.xyzx, r7.xyzx
                              mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                              add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 168
                              div r4.xyz, r7.xyzx, r6.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 169
                              mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 232
                              mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 233
                            else 
                
                #line 236
                              mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 237
                            endif 
                
                #line 238
                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 241
                            mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 242
                          endif 
                        endif 
                
                #line 296
                        mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 297
                        nop 
                        mov r4.xyz, r4.xyzx
                
                #line 253
                        ieq r5.x, cb0[12].y, cb0[12].z
                        if_nz r5.x
                
                #line 255
                          mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 256
                        else 
                
                #line 257
                          ieq r5.x, cb0[12].z, l(16)
                          if_nz r5.x
                
                #line 259
                            nop 
                            mov r4.xyz, r4.xyzx
                
                #line 147
                            mov r5.x, l(0.159302)  // r5.x <- ST2084_m1
                
                #line 148
                            mov r5.y, l(78.843750)  // r5.y <- ST2084_m2
                
                #line 149
                            mov r5.z, l(0.835938)  // r5.z <- ST2084_c1
                
                #line 150
                            mov r5.w, l(18.851562)  // r5.w <- ST2084_c2
                
                #line 151
                            mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 152
                            itof r6.yzw, l(0, 10000, 10000, 10000)
                            div r6.yzw, r4.xxyz, r6.yyzw
                            log r6.yzw, r6.yyzw
                            mul r6.yzw, r5.xxxx, r6.yyzw
                            exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 153
                            mul r7.xyz, r5.wwww, r6.yzwy
                            add r5.xzw, r5.zzzz, r7.xxyz
                            itof r7.xyz, l(1, 1, 1, 0)
                            mul r6.xyz, r6.yzwy, r6.xxxx
                            add r6.xyz, r6.xyzx, r7.xyzx
                            div r5.xzw, r5.xxzw, r6.xxyz  // r5.x <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 154
                            log r5.xzw, r5.xxzw
                            mul r5.xyz, r5.xzwx, r5.yyyy
                            exp r4.xyz, r5.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 155
                            mov r4.xyz, r4.xyzx  // r4.x <- <LineTOST2084 return value>.x; r4.y <- <LineTOST2084 return value>.y; r4.z <- <LineTOST2084 return value>.z
                
                #line 259
                            mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 260
                          else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 261
                            ieq r5.x, cb0[12].z, l(18)
                            if_nz r5.x
                
                #line 263
                              mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 264
                            else 
                
                #line 265
                              ieq r5.x, cb0[12].z, l(1)
                              if_nz r5.x
                
                #line 267
                                log r5.xyz, r4.xyzx
                                mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 268
                              else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 269
                                ieq r5.x, cb0[12].z, l(4)
                                if_nz r5.x
                
                #line 271
                                  log r5.xyz, r4.xyzx
                                  mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                  exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 272
                                else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 275
                                  mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 276
                                endif 
                              endif 
                            endif 
                          endif 
                        endif 
                
                #line 297
                        mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 298
                        nop 
                        mov r4.xyz, r4.xyzx
                
                #line 248
                        mov r4.xyz, r4.xyzx  // r4.x <- <adjustRange return value>.x; r4.y <- <adjustRange return value>.y; r4.z <- <adjustRange return value>.z
                
                #line 298
                        mov r4.xyz, r4.xyzx
                
                #line 299
                        nop 
                        mov r4.xyz, r4.xyzx
                
                #line 282
                        mov r4.xyz, r4.xyzx  // r4.x <- <reorderPlanes return value>.x; r4.y <- <reorderPlanes return value>.y; r4.z <- <reorderPlanes return value>.z
                
                #line 299
                        mov r4.xyz, r4.xyzx
                
                #line 300
                      endif 
                
                #line 301
                      mov r4.xyz, r4.xyzx  // r4.x <- <RenderFloat return value>.x; r4.y <- <RenderFloat return value>.y; r4.z <- <RenderFloat return value>.z
                
                #line 356
                      mov r4.xyz, r4.xyzx  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z
                
                #line 357
                      itof r4.w, l(1)  // r4.w <- rgbarsp.w
                
                #line 358
                      mov r4.xyz, r4.xyzx  // r4.x <- <GetRGBA return value>.x; r4.y <- <GetRGBA return value>.y; r4.z <- <GetRGBA return value>.z
                      mov r4.w, r4.w  // r4.w <- <GetRGBA return value>.w
                
                #line 359
                    else 
                
                #line 360
                      ieq r5.x, cb0[12].x, l(2)
                      if_nz r5.x
                
                #line 362
                        nop 
                
                #line 60
                        sample_indexable(texture2d)(float,float,float,float) r5.x, v1.xyxx, t0.xyzw, s0  // r5.x <- y
                
                #line 61
                        sample_indexable(texture2d)(float,float,float,float) r5.yz, v1.xyxx, t1.zxyw, s0  // r5.y <- uv.x; r5.z <- uv.y
                
                #line 62
                        mov r5.w, l(1.000000)
                        mov r5.xyzw, r5.xyzw  // r5.x <- <PSPlanar420_ReverseDX11 return value>.x; r5.y <- <PSPlanar420_ReverseDX11 return value>.y; r5.z <- <PSPlanar420_ReverseDX11 return value>.z; r5.w <- <PSPlanar420_ReverseDX11 return value>.w
                
                #line 362
                        mov r5.xyzw, r5.xyzw  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w
                
                #line 363
                        dp4 r6.x, r5.xyzw, cb1[0].xyzw  // r6.x <- rr.x
                        dp4 r6.y, r5.xyzw, cb1[1].xyzw  // r6.y <- rr.y
                        dp4 r6.z, r5.xyzw, cb1[2].xyzw  // r6.z <- rr.z
                        dp4 r6.w, r5.xyzw, cb1[3].xyzw  // r6.w <- rr.w
                
                #line 364
                        dp4 r5.x, r6.xyzw, r0.xyzw
                        dp4 r5.y, r6.xyzw, r1.xyzw
                        dp4 r5.z, r6.xyzw, r2.xyzw
                        itof r6.xyz, l(0, 0, 0, 0)
                        max r4.xyz, r5.xyzx, r6.xyzx  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z
                
                #line 365
                        nop 
                
                #line 288
                        ieq r5.x, cb0[14].x, l(1)
                        if_z r5.x
                
                #line 294
                          nop 
                
                #line 174
                          ieq r5.x, cb0[12].z, cb0[12].y
                          if_z r5.x
                
                #line 178
                            ieq r5.x, cb0[12].y, l(8)
                            if_z r5.x
                
                #line 182
                              ieq r5.x, cb0[12].y, l(16)
                              if_nz r5.x
                
                #line 184
                                nop 
                
                #line 185
                              else 
                
                #line 186
                                ieq r5.x, cb0[12].y, l(18)
                                if_nz r5.x
                
                #line 188
                                  nop 
                
                #line 115
                                  nop 
                
                #line 116
                                  nop 
                
                #line 117
                                  nop 
                
                #line 189
                                else 
                
                #line 190
                                  ieq r5.x, cb0[12].y, l(1)
                                  if_nz r5.x
                
                #line 192
                                    nop 
                
                #line 193
                                  else 
                
                #line 194
                                    ieq r5.x, cb0[12].y, l(4)
                                    if_nz r5.x
                
                #line 196
                                      nop 
                
                #line 197
                                    else 
                
                #line 198
                                      ieq r5.x, cb0[12].y, l(5)
                                      if_nz r5.x
                
                #line 200
                                        nop 
                
                #line 205
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                            endif 
                          endif 
                
                #line 295
                          nop 
                
                #line 296
                          nop 
                
                #line 224
                          ieq r5.x, cb0[12].y, cb0[12].z
                
                #line 228
                          if_z r5.x
                            ieq r5.x, cb0[12].z, l(1)
                            ieq r5.y, cb0[12].z, l(4)
                            or r5.x, r5.y, r5.x
                            if_nz r5.x
                
                #line 230
                              ieq r5.x, cb0[12].y, l(16)
                              ieq r5.y, cb0[12].y, l(18)
                              or r5.x, r5.y, r5.x
                              if_nz r5.x
                
                #line 232
                                nop 
                
                #line 167
                                nop 
                
                #line 168
                                nop 
                
                #line 237
                              endif 
                
                #line 242
                            endif 
                          endif 
                
                #line 297
                          nop 
                
                #line 253
                          ieq r5.x, cb0[12].y, cb0[12].z
                          if_z r5.x
                
                #line 257
                            ieq r5.x, cb0[12].z, l(16)
                            if_nz r5.x
                
                #line 259
                              nop 
                
                #line 276
                            endif 
                          endif 
                
                #line 298
                          nop 
                
                #line 299
                          nop 
                
                #line 300
                        endif 
                
                #line 366
                        itof r4.w, l(1)  // r4.w <- rgbarsp.w
                
                #line 367
                        mov r4.xyz, r4.xyzx  // r4.x <- <GetRGBA return value>.x; r4.y <- <GetRGBA return value>.y; r4.z <- <GetRGBA return value>.z
                        mov r4.w, r4.w  // r4.w <- <GetRGBA return value>.w
                
                #line 368
                      else 
                
                #line 369
                        ieq r5.x, cb0[12].x, l(1)
                        if_nz r5.x
                
                #line 371
                          sample_indexable(texture2d)(float,float,float,float) r4.xyz, v1.xyxx, t0.xyzw, s0  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 372
                          itof r4.w, l(0)  // r4.w <- rgba.w
                
                #line 373
                          nop 
                          mov r4.xyz, r4.xyzx
                          mov r4.w, r4.w
                
                #line 288
                          ieq r5.x, cb0[14].x, l(1)
                          if_z r5.x
                
                #line 294
                            nop 
                            mov r5.xyzw, r4.xyzw
                
                #line 174
                            ieq r6.x, cb0[12].z, cb0[12].y
                            if_nz r6.x
                
                #line 176
                              mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 177
                            else 
                
                #line 178
                              ieq r6.x, cb0[12].y, l(8)
                              if_nz r6.x
                
                #line 180
                                mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 181
                              else 
                
                #line 182
                                ieq r6.x, cb0[12].y, l(16)
                                if_nz r6.x
                
                #line 184
                                  nop 
                                  mov r5.xyzw, r5.xyzw
                
                #line 102
                                  mov r6.x, l(0.835938)  // r6.x <- ST2084_c1
                
                #line 103
                                  mov r6.y, l(18.851562)  // r6.y <- ST2084_c2
                
                #line 104
                                  mov r6.z, l(18.687500)  // r6.z <- ST2084_c3
                
                #line 105
                                  itof r7.xyzw, l(0, 0, 0, 0)
                                  max r7.xyzw, r5.xyzw, r7.xyzw
                                  log r7.xyzw, r7.xyzw
                                  mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                  exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 106
                                  mov r8.xyzw, -r6.xxxx
                                  add r8.xyzw, r7.xyzw, r8.xyzw
                                  max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                  mul r7.xyzw, r6.zzzz, r7.xyzw
                                  mov r7.xyzw, -r7.xyzw
                                  add r6.xyzw, r6.yyyy, r7.xyzw
                                  div r6.xyzw, r8.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 107
                                  log r6.xyzw, r6.xyzw
                                  mul r6.xyzw, r6.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                  exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 108
                                  itof r7.xyzw, l(10000, 10000, 10000, 10000)
                                  mul r5.xyzw, r6.xyzw, r7.xyzw  // r5.x <- <ST2084TOLinear return value>.x; r5.y <- <ST2084TOLinear return value>.y; r5.z <- <ST2084TOLinear return value>.z; r5.w <- <ST2084TOLinear return value>.w
                
                #line 184
                                  mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 185
                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 186
                                  ieq r6.x, cb0[12].y, l(18)
                                  if_nz r6.x
                
                #line 188
                                    nop 
                                    mov r5.xyzw, r5.xyzw
                
                #line 114
                                    itof r6.x, l(1000)  // r6.x <- alpha_gain
                
                #line 115
                                    nop 
                                    mov r5.x, r5.x
                
                #line 76
                                    mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                    mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                    mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                    mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                    ge r7.y, l(0.500000), r5.x
                                    if_nz r7.y
                
                #line 81
                                      mul r7.y, r5.x, r5.x
                                      mul r7.x, r7.x, r7.y  // r7.x <- x
                                    else   // Prior locations: r5.x <- x; r7.x <- B67_inv_r2
                
                #line 83
                                      mov r6.w, -r6.w
                                      add r6.w, r5.x, r6.w
                                      div r6.y, r6.w, r6.y
                                      mul r6.y, r6.y, l(1.442695)
                                      exp r6.y, r6.y
                                      add r7.x, r6.z, r6.y  // r7.x <- x
                                    endif 
                
                #line 84
                                    mov r7.x, r7.x  // r7.x <- <inverse_HLG return value>
                
                #line 115
                                    mov r7.x, r7.x  // r7.x <- rgb.x
                
                #line 116
                                    nop 
                                    mov r5.y, r5.y
                
                #line 76
                                    mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                    mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                    mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                    mov r7.w, l(4.000000)  // r7.w <- B67_inv_r2
                
                #line 80
                                    ge r8.x, l(0.500000), r5.y
                                    if_nz r8.x
                
                #line 81
                                      mul r8.x, r5.y, r5.y
                                      mul r7.y, r7.w, r8.x  // r7.y <- x
                                    else   // Prior locations: r5.y <- x
                
                #line 83
                                      mov r6.w, -r6.w
                                      add r6.w, r5.y, r6.w
                                      div r6.y, r6.w, r6.y
                                      mul r6.y, r6.y, l(1.442695)
                                      exp r6.y, r6.y
                                      add r7.y, r6.z, r6.y  // r7.y <- x
                                    endif 
                
                #line 84
                                    mov r7.y, r7.y  // r7.y <- <inverse_HLG return value>
                
                #line 116
                                    mov r7.y, r7.y  // r7.y <- rgb.y
                
                #line 117
                                    nop 
                                    mov r5.z, r5.z
                
                #line 76
                                    mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                    mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                    mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                    mov r7.w, l(4.000000)  // r7.w <- B67_inv_r2
                
                #line 80
                                    ge r8.x, l(0.500000), r5.z
                                    if_nz r8.x
                
                #line 81
                                      mul r8.x, r5.z, r5.z
                                      mul r7.z, r7.w, r8.x  // r7.z <- x
                                    else   // Prior locations: r5.z <- x
                
                #line 83
                                      mov r6.w, -r6.w
                                      add r6.w, r5.z, r6.w
                                      div r6.y, r6.w, r6.y
                                      mul r6.y, r6.y, l(1.442695)
                                      exp r6.y, r6.y
                                      add r7.z, r6.z, r6.y  // r7.z <- x
                                    endif 
                
                #line 84
                                    mov r7.z, r7.z  // r7.z <- <inverse_HLG return value>
                
                #line 117
                                    mov r7.z, r7.z  // r7.z <- rgb.z
                
                #line 118
                                    mov r6.yzw, l(0,0.262700,0.678000,0.059300)  // r6.y <- ootf_2020.x; r6.z <- ootf_2020.y; r6.w <- ootf_2020.z
                
                #line 119
                                    dp3 r6.y, r6.yzwy, r7.xyzx
                                    mul r6.x, r6.y, r6.x  // r6.x <- ootf_ys
                
                #line 120
                                    log r6.x, r6.x
                                    mul r6.x, r6.x, l(0.200000)
                                    exp r6.x, r6.x
                                    mul r5.xyz, r6.xxxx, r7.xyzx  // r5.x <- <HLGTOLinear return value>.x; r5.y <- <HLGTOLinear return value>.y; r5.z <- <HLGTOLinear return value>.z
                                    mul r5.w, r5.w, r6.x  // r5.w <- <HLGTOLinear return value>.w
                
                #line 188
                                    mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 189
                                  else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 190
                                    ieq r6.x, cb0[12].y, l(1)
                                    if_nz r6.x
                
                #line 192
                                      nop 
                                      mov r5.xyzw, r5.xyzw
                
                #line 127
                                      log r6.xyzw, r5.xyzw
                                      mul r6.xyzw, r6.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                      exp r5.xyzw, r6.xyzw  // r5.x <- <BT709TOLinear return value>.x; r5.y <- <BT709TOLinear return value>.y; r5.z <- <BT709TOLinear return value>.z; r5.w <- <BT709TOLinear return value>.w
                
                #line 192
                                      mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 193
                                    else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 194
                                      ieq r6.x, cb0[12].y, l(4)
                                      if_nz r6.x
                
                #line 196
                                        nop 
                                        mov r5.xyzw, r5.xyzw
                
                #line 132
                                        log r6.xyzw, r5.xyzw
                                        mul r6.xyzw, r6.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                        exp r5.xyzw, r6.xyzw  // r5.x <- <BT470M_SRGB_TOLinear return value>.x; r5.y <- <BT470M_SRGB_TOLinear return value>.y; r5.z <- <BT470M_SRGB_TOLinear return value>.z; r5.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 196
                                        mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 197
                                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 198
                                        ieq r6.x, cb0[12].y, l(5)
                                        if_nz r6.x
                
                #line 200
                                          nop 
                                          mov r5.xyzw, r5.xyzw
                
                #line 136
                                          log r6.xyzw, r5.xyzw
                                          mul r6.xyzw, r6.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                          exp r5.xyzw, r6.xyzw  // r5.x <- <BT470BGTOLinear return value>.x; r5.y <- <BT470BGTOLinear return value>.y; r5.z <- <BT470BGTOLinear return value>.z; r5.w <- <BT470BGTOLinear return value>.w
                
                #line 200
                                          mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 201
                                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 204
                                          mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 205
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                            endif 
                
                #line 294
                            mov r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 295
                            nop 
                            mov r5.xyzw, r5.xyzw
                
                #line 212
                            ine r6.x, cb0[12].w, cb0[13].x
                            if_nz r6.x
                
                #line 214
                              dp4 r6.x, r5.xyzw, cb1[8].xyzw
                              dp4 r6.y, r5.xyzw, cb1[9].xyzw
                              dp4 r6.z, r5.xyzw, cb1[10].xyzw
                              itof r7.xyz, l(0, 0, 0, 0)
                              max r5.xyz, r6.xyzx, r7.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 215
                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 218
                              mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 219
                            endif 
                
                #line 295
                            mov r5.xyz, r5.xyzx
                
                #line 296
                            nop 
                            mov r5.xyz, r5.xyzx
                
                #line 224
                            ieq r5.w, cb0[12].y, cb0[12].z
                            if_nz r5.w
                
                #line 226
                              mov r4.xyz, r5.xyzx
                
                #line 227
                            endif   // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 228
                            if_z r5.w
                              ieq r5.w, cb0[12].z, l(1)
                              ieq r6.x, cb0[12].z, l(4)
                              or r5.w, r5.w, r6.x
                              if_nz r5.w
                
                #line 230
                                ieq r5.w, cb0[12].y, l(16)
                                ieq r6.x, cb0[12].y, l(18)
                                or r5.w, r5.w, r6.x
                                if_nz r5.w
                
                #line 232
                                  nop 
                                  mov r5.xyz, r5.xyzx
                
                #line 166
                                  mov r6.xyz, l(11.200000,11.200000,11.200000,0)  // r6.x <- tmp.x; r6.y <- tmp.y; r6.z <- tmp.z
                
                #line 167
                                  nop 
                                  mov r6.xyz, r6.xyzx
                
                #line 160
                                  mov r5.w, l(0.150000)  // r5.w <- A
                                  mov r6.w, l(0.500000)  // r6.w <- B
                
                #line 161
                                  mul r7.xyz, r6.xyzx, r5.wwww
                                  add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                  mul r7.xyz, r6.xyzx, r7.xyzx
                                  add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                  mul r8.xyz, r6.xyzx, r5.wwww
                                  add r8.xyz, r6.wwww, r8.xyzx
                                  mul r6.xyz, r6.xyzx, r8.xyzx
                                  add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                  div r6.xyz, r7.xyzx, r6.xyzx
                                  mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                  add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 167
                                  mov r6.xyz, r6.xyzx  // r6.x <- HABLE_DIV.x; r6.y <- HABLE_DIV.y; r6.z <- HABLE_DIV.z
                
                #line 168
                                  nop 
                                  mul r7.xyz, r5.xyzx, cb0[13].wwww
                
                #line 160
                                  mov r5.w, l(0.150000)
                                  mov r6.w, l(0.500000)
                
                #line 161
                                  mul r8.xyz, r7.xyzx, r5.wwww
                                  add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                  mul r8.xyz, r7.xyzx, r8.xyzx
                                  add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                  mul r9.xyz, r7.xyzx, r5.wwww
                                  add r9.xyz, r6.wwww, r9.xyzx
                                  mul r7.xyz, r7.xyzx, r9.xyzx
                                  add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                  div r7.xyz, r8.xyzx, r7.xyzx
                                  mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                  add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 168
                                  div r4.xyz, r7.xyzx, r6.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 169
                                  mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 232
                                  mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 233
                                else 
                
                #line 236
                                  mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 237
                                endif 
                
                #line 238
                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 241
                                mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 242
                              endif 
                            endif 
                
                #line 296
                            mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 297
                            nop 
                            mov r4.xyz, r4.xyzx
                
                #line 253
                            ieq r5.x, cb0[12].y, cb0[12].z
                            if_nz r5.x
                
                #line 255
                              mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 256
                            else 
                
                #line 257
                              ieq r5.x, cb0[12].z, l(16)
                              if_nz r5.x
                
                #line 259
                                nop 
                                mov r4.xyz, r4.xyzx
                
                #line 147
                                mov r5.x, l(0.159302)  // r5.x <- ST2084_m1
                
                #line 148
                                mov r5.y, l(78.843750)  // r5.y <- ST2084_m2
                
                #line 149
                                mov r5.z, l(0.835938)  // r5.z <- ST2084_c1
                
                #line 150
                                mov r5.w, l(18.851562)  // r5.w <- ST2084_c2
                
                #line 151
                                mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 152
                                itof r6.yzw, l(0, 10000, 10000, 10000)
                                div r6.yzw, r4.xxyz, r6.yyzw
                                log r6.yzw, r6.yyzw
                                mul r6.yzw, r5.xxxx, r6.yyzw
                                exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 153
                                mul r7.xyz, r5.wwww, r6.yzwy
                                add r5.xzw, r5.zzzz, r7.xxyz
                                itof r7.xyz, l(1, 1, 1, 0)
                                mul r6.xyz, r6.yzwy, r6.xxxx
                                add r6.xyz, r6.xyzx, r7.xyzx
                                div r5.xzw, r5.xxzw, r6.xxyz  // r5.x <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 154
                                log r5.xzw, r5.xxzw
                                mul r5.xyz, r5.xzwx, r5.yyyy
                                exp r4.xyz, r5.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 155
                                mov r4.xyz, r4.xyzx  // r4.x <- <LineTOST2084 return value>.x; r4.y <- <LineTOST2084 return value>.y; r4.z <- <LineTOST2084 return value>.z
                
                #line 259
                                mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 260
                              else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 261
                                ieq r5.x, cb0[12].z, l(18)
                                if_nz r5.x
                
                #line 263
                                  mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 264
                                else 
                
                #line 265
                                  ieq r5.x, cb0[12].z, l(1)
                                  if_nz r5.x
                
                #line 267
                                    log r5.xyz, r4.xyzx
                                    mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                    exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 268
                                  else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 269
                                    ieq r5.x, cb0[12].z, l(4)
                                    if_nz r5.x
                
                #line 271
                                      log r5.xyz, r4.xyzx
                                      mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                      exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 272
                                    else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 275
                                      mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 276
                                    endif 
                                  endif 
                                endif 
                              endif 
                            endif 
                
                #line 297
                            mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 298
                            nop 
                            mov r4.xyz, r4.xyzx
                
                #line 248
                            mov r4.xyz, r4.xyzx  // r4.x <- <adjustRange return value>.x; r4.y <- <adjustRange return value>.y; r4.z <- <adjustRange return value>.z
                
                #line 298
                            mov r4.xyz, r4.xyzx
                
                #line 299
                            nop 
                            mov r4.xyz, r4.xyzx
                
                #line 282
                            mov r4.xyz, r4.xyzx  // r4.x <- <reorderPlanes return value>.x; r4.y <- <reorderPlanes return value>.y; r4.z <- <reorderPlanes return value>.z
                
                #line 299
                            mov r4.xyz, r4.xyzx
                
                #line 300
                          endif 
                
                #line 301
                          mov r4.xyz, r4.xyzx  // r4.x <- <RenderFloat return value>.x; r4.y <- <RenderFloat return value>.y; r4.z <- <RenderFloat return value>.z
                
                #line 373
                          mov r4.xyz, r4.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 374
                          itof r4.w, l(1)  // r4.w <- rgba.w
                
                #line 375
                          mov r4.xyz, r4.xyzx  // r4.x <- <GetRGBA return value>.x; r4.y <- <GetRGBA return value>.y; r4.z <- <GetRGBA return value>.z
                          mov r4.w, r4.w  // r4.w <- <GetRGBA return value>.w
                
                #line 376
                        else 
                
                #line 377
                          ieq r5.x, cb0[12].x, l(4)
                          if_nz r5.x
                
                #line 379
                            sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v1.xyxx, t0.xyzw, s0  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 380
                            nop 
                            mov r4.xyzw, r4.xyzw
                
                #line 287
                            mov r4.w, r4.w  // r4.w <- a
                
                #line 288
                            ieq r5.x, cb0[14].x, l(1)
                            if_z r5.x
                
                #line 294
                              nop 
                              mov r5.xyzw, r4.xyzw
                
                #line 174
                              ieq r6.x, cb0[12].z, cb0[12].y
                              if_nz r6.x
                
                #line 176
                                mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 177
                              else 
                
                #line 178
                                ieq r6.x, cb0[12].y, l(8)
                                if_nz r6.x
                
                #line 180
                                  mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 181
                                else 
                
                #line 182
                                  ieq r6.x, cb0[12].y, l(16)
                                  if_nz r6.x
                
                #line 184
                                    nop 
                                    mov r5.xyzw, r5.xyzw
                
                #line 102
                                    mov r6.x, l(0.835938)  // r6.x <- ST2084_c1
                
                #line 103
                                    mov r6.y, l(18.851562)  // r6.y <- ST2084_c2
                
                #line 104
                                    mov r6.z, l(18.687500)  // r6.z <- ST2084_c3
                
                #line 105
                                    itof r7.xyzw, l(0, 0, 0, 0)
                                    max r7.xyzw, r5.xyzw, r7.xyzw
                                    log r7.xyzw, r7.xyzw
                                    mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                    exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 106
                                    mov r8.xyzw, -r6.xxxx
                                    add r8.xyzw, r7.xyzw, r8.xyzw
                                    max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                    mul r7.xyzw, r6.zzzz, r7.xyzw
                                    mov r7.xyzw, -r7.xyzw
                                    add r6.xyzw, r6.yyyy, r7.xyzw
                                    div r6.xyzw, r8.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 107
                                    log r6.xyzw, r6.xyzw
                                    mul r6.xyzw, r6.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                    exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 108
                                    itof r7.xyzw, l(10000, 10000, 10000, 10000)
                                    mul r5.xyzw, r6.xyzw, r7.xyzw  // r5.x <- <ST2084TOLinear return value>.x; r5.y <- <ST2084TOLinear return value>.y; r5.z <- <ST2084TOLinear return value>.z; r5.w <- <ST2084TOLinear return value>.w
                
                #line 184
                                    mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 185
                                  else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 186
                                    ieq r6.x, cb0[12].y, l(18)
                                    if_nz r6.x
                
                #line 188
                                      nop 
                                      mov r5.xyzw, r5.xyzw
                
                #line 114
                                      itof r6.x, l(1000)  // r6.x <- alpha_gain
                
                #line 115
                                      nop 
                                      mov r5.x, r5.x
                
                #line 76
                                      mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                      mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                      mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                      mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                      ge r7.y, l(0.500000), r5.x
                                      if_nz r7.y
                
                #line 81
                                        mul r7.y, r5.x, r5.x
                                        mul r5.x, r7.x, r7.y
                                      else   // Prior locations: r5.x <- rgb.x; r5.x <- rgb.x
                
                #line 83
                                        mov r6.w, -r6.w
                                        add r6.w, r5.x, r6.w
                                        div r6.y, r6.w, r6.y
                                        mul r6.y, r6.y, l(1.442695)
                                        exp r6.y, r6.y
                                        add r5.x, r6.z, r6.y
                                      endif 
                
                #line 84
                                      mov r5.x, r5.x  // r5.x <- <inverse_HLG return value>
                
                #line 115
                                      mov r5.x, r5.x  // r5.x <- rgb.x
                
                #line 116
                                      nop 
                                      mov r5.y, r5.y
                
                #line 76
                                      mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                      mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                      mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                      mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                      ge r7.y, l(0.500000), r5.y
                                      if_nz r7.y
                
                #line 81
                                        mul r7.y, r5.y, r5.y
                                        mul r5.y, r7.x, r7.y
                                      else   // Prior locations: r5.y <- rgb.y; r5.y <- rgb.y
                
                #line 83
                                        mov r6.w, -r6.w
                                        add r6.w, r5.y, r6.w
                                        div r6.y, r6.w, r6.y
                                        mul r6.y, r6.y, l(1.442695)
                                        exp r6.y, r6.y
                                        add r5.y, r6.z, r6.y
                                      endif 
                
                #line 84
                                      mov r5.y, r5.y  // r5.y <- <inverse_HLG return value>
                
                #line 116
                                      mov r5.y, r5.y  // r5.y <- rgb.y
                
                #line 117
                                      nop 
                                      mov r5.z, r5.z
                
                #line 76
                                      mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                      mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                      mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                      mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                      ge r7.y, l(0.500000), r5.z
                                      if_nz r7.y
                
                #line 81
                                        mul r7.y, r5.z, r5.z
                                        mul r5.z, r7.x, r7.y
                                      else   // Prior locations: r5.z <- rgb.z; r5.z <- rgb.z
                
                #line 83
                                        mov r6.w, -r6.w
                                        add r6.w, r5.z, r6.w
                                        div r6.y, r6.w, r6.y
                                        mul r6.y, r6.y, l(1.442695)
                                        exp r6.y, r6.y
                                        add r5.z, r6.z, r6.y
                                      endif 
                
                #line 84
                                      mov r5.z, r5.z  // r5.z <- <inverse_HLG return value>
                
                #line 117
                                      mov r5.z, r5.z  // r5.z <- rgb.z
                
                #line 118
                                      mov r6.yzw, l(0,0.262700,0.678000,0.059300)  // r6.y <- ootf_2020.x; r6.z <- ootf_2020.y; r6.w <- ootf_2020.z
                
                #line 119
                                      dp3 r6.y, r6.yzwy, r5.xyzx
                                      mul r6.x, r6.y, r6.x  // r6.x <- ootf_ys
                
                #line 120
                                      log r6.x, r6.x
                                      mul r6.x, r6.x, l(0.200000)
                                      exp r6.x, r6.x
                                      mul r5.xyzw, r5.xyzw, r6.xxxx  // r5.x <- <HLGTOLinear return value>.x; r5.y <- <HLGTOLinear return value>.y; r5.z <- <HLGTOLinear return value>.z; r5.w <- <HLGTOLinear return value>.w
                
                #line 188
                                      mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 189
                                    else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 190
                                      ieq r6.x, cb0[12].y, l(1)
                                      if_nz r6.x
                
                #line 192
                                        nop 
                                        mov r5.xyzw, r5.xyzw
                
                #line 127
                                        log r6.xyzw, r5.xyzw
                                        mul r6.xyzw, r6.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                        exp r5.xyzw, r6.xyzw  // r5.x <- <BT709TOLinear return value>.x; r5.y <- <BT709TOLinear return value>.y; r5.z <- <BT709TOLinear return value>.z; r5.w <- <BT709TOLinear return value>.w
                
                #line 192
                                        mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 193
                                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 194
                                        ieq r6.x, cb0[12].y, l(4)
                                        if_nz r6.x
                
                #line 196
                                          nop 
                                          mov r5.xyzw, r5.xyzw
                
                #line 132
                                          log r6.xyzw, r5.xyzw
                                          mul r6.xyzw, r6.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                          exp r5.xyzw, r6.xyzw  // r5.x <- <BT470M_SRGB_TOLinear return value>.x; r5.y <- <BT470M_SRGB_TOLinear return value>.y; r5.z <- <BT470M_SRGB_TOLinear return value>.z; r5.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 196
                                          mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 197
                                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 198
                                          ieq r6.x, cb0[12].y, l(5)
                                          if_nz r6.x
                
                #line 200
                                            nop 
                                            mov r5.xyzw, r5.xyzw
                
                #line 136
                                            log r6.xyzw, r5.xyzw
                                            mul r6.xyzw, r6.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                            exp r5.xyzw, r6.xyzw  // r5.x <- <BT470BGTOLinear return value>.x; r5.y <- <BT470BGTOLinear return value>.y; r5.z <- <BT470BGTOLinear return value>.z; r5.w <- <BT470BGTOLinear return value>.w
                
                #line 200
                                            mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 201
                                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 204
                                            mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 205
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                
                #line 294
                              mov r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 295
                              nop 
                              mov r5.xyzw, r5.xyzw
                
                #line 212
                              ine r6.x, cb0[12].w, cb0[13].x
                              if_nz r6.x
                
                #line 214
                                dp4 r6.x, r5.xyzw, cb1[8].xyzw
                                dp4 r6.y, r5.xyzw, cb1[9].xyzw
                                dp4 r6.z, r5.xyzw, cb1[10].xyzw
                                itof r7.xyz, l(0, 0, 0, 0)
                                max r5.xyz, r6.xyzx, r7.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 215
                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 218
                                mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 219
                              endif 
                
                #line 295
                              mov r5.xyz, r5.xyzx
                
                #line 296
                              nop 
                              mov r5.xyz, r5.xyzx
                
                #line 224
                              ieq r5.w, cb0[12].y, cb0[12].z
                              if_nz r5.w  // r4.w <- rgb.w
                
                #line 226
                                mov r4.xyz, r5.xyzx
                
                #line 227
                              endif   // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 228
                              if_z r5.w
                                ieq r5.w, cb0[12].z, l(1)
                                ieq r6.x, cb0[12].z, l(4)
                                or r5.w, r5.w, r6.x
                                if_nz r5.w
                
                #line 230
                                  ieq r5.w, cb0[12].y, l(16)
                                  ieq r6.x, cb0[12].y, l(18)
                                  or r5.w, r5.w, r6.x
                                  if_nz r5.w
                
                #line 232
                                    nop 
                                    mov r5.xyz, r5.xyzx
                
                #line 166
                                    mov r6.xyz, l(11.200000,11.200000,11.200000,0)  // r6.x <- tmp.x; r6.y <- tmp.y; r6.z <- tmp.z
                
                #line 167
                                    nop 
                                    mov r6.xyz, r6.xyzx
                
                #line 160
                                    mov r5.w, l(0.150000)  // r5.w <- A
                                    mov r6.w, l(0.500000)  // r6.w <- B
                
                #line 161
                                    mul r7.xyz, r6.xyzx, r5.wwww
                                    add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                    mul r7.xyz, r6.xyzx, r7.xyzx
                                    add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                    mul r8.xyz, r6.xyzx, r5.wwww
                                    add r8.xyz, r6.wwww, r8.xyzx
                                    mul r6.xyz, r6.xyzx, r8.xyzx
                                    add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                    div r6.xyz, r7.xyzx, r6.xyzx
                                    mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                    add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 167
                                    mov r6.xyz, r6.xyzx  // r6.x <- HABLE_DIV.x; r6.y <- HABLE_DIV.y; r6.z <- HABLE_DIV.z
                
                #line 168
                                    nop 
                                    mul r7.xyz, r5.xyzx, cb0[13].wwww
                
                #line 160
                                    mov r5.w, l(0.150000)
                                    mov r6.w, l(0.500000)
                
                #line 161
                                    mul r8.xyz, r7.xyzx, r5.wwww
                                    add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                    mul r8.xyz, r7.xyzx, r8.xyzx
                                    add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                    mul r9.xyz, r7.xyzx, r5.wwww
                                    add r9.xyz, r6.wwww, r9.xyzx
                                    mul r7.xyz, r7.xyzx, r9.xyzx
                                    add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                    div r7.xyz, r8.xyzx, r7.xyzx
                                    mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                    add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 168
                                    div r4.xyz, r7.xyzx, r6.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 169
                                    mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 232
                                    mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 233
                                  else 
                
                #line 236
                                    mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 237
                                  endif 
                
                #line 238
                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 241
                                  mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 242
                                endif 
                              endif 
                
                #line 296
                              mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 297
                              nop 
                              mov r4.xyz, r4.xyzx
                
                #line 253
                              ieq r5.x, cb0[12].y, cb0[12].z
                              if_nz r5.x
                
                #line 255
                                mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 256
                              else 
                
                #line 257
                                ieq r5.x, cb0[12].z, l(16)
                                if_nz r5.x
                
                #line 259
                                  nop 
                                  mov r4.xyz, r4.xyzx
                
                #line 147
                                  mov r5.x, l(0.159302)  // r5.x <- ST2084_m1
                
                #line 148
                                  mov r5.y, l(78.843750)  // r5.y <- ST2084_m2
                
                #line 149
                                  mov r5.z, l(0.835938)  // r5.z <- ST2084_c1
                
                #line 150
                                  mov r5.w, l(18.851562)  // r5.w <- ST2084_c2
                
                #line 151
                                  mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 152
                                  itof r6.yzw, l(0, 10000, 10000, 10000)
                                  div r6.yzw, r4.xxyz, r6.yyzw
                                  log r6.yzw, r6.yyzw
                                  mul r6.yzw, r5.xxxx, r6.yyzw
                                  exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 153
                                  mul r7.xyz, r5.wwww, r6.yzwy
                                  add r5.xzw, r5.zzzz, r7.xxyz
                                  itof r7.xyz, l(1, 1, 1, 0)
                                  mul r6.xyz, r6.yzwy, r6.xxxx
                                  add r6.xyz, r6.xyzx, r7.xyzx
                                  div r5.xzw, r5.xxzw, r6.xxyz  // r5.x <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 154
                                  log r5.xzw, r5.xxzw
                                  mul r5.xyz, r5.xzwx, r5.yyyy
                                  exp r4.xyz, r5.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 155
                                  mov r4.xyz, r4.xyzx  // r4.x <- <LineTOST2084 return value>.x; r4.y <- <LineTOST2084 return value>.y; r4.z <- <LineTOST2084 return value>.z
                
                #line 259
                                  mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 260
                                else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 261
                                  ieq r5.x, cb0[12].z, l(18)
                                  if_nz r5.x
                
                #line 263
                                    mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 264
                                  else 
                
                #line 265
                                    ieq r5.x, cb0[12].z, l(1)
                                    if_nz r5.x
                
                #line 267
                                      log r5.xyz, r4.xyzx
                                      mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                      exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 268
                                    else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 269
                                      ieq r5.x, cb0[12].z, l(4)
                                      if_nz r5.x
                
                #line 271
                                        log r5.xyz, r4.xyzx
                                        mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                        exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 272
                                      else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 275
                                        mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 276
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                
                #line 297
                              mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 298
                              nop 
                              mov r4.xyz, r4.xyzx
                
                #line 248
                              mov r4.xyz, r4.xyzx  // r4.x <- <adjustRange return value>.x; r4.y <- <adjustRange return value>.y; r4.z <- <adjustRange return value>.z
                
                #line 298
                              mov r4.xyz, r4.xyzx
                
                #line 299
                              nop 
                              mov r4.xyz, r4.xyzx
                
                #line 282
                              mov r4.xyz, r4.xyzx  // r4.x <- <reorderPlanes return value>.x; r4.y <- <reorderPlanes return value>.y; r4.z <- <reorderPlanes return value>.z
                
                #line 299
                              mov r4.xyz, r4.xyzx
                
                #line 300
                            endif 
                
                #line 301
                            mov r4.xyz, r4.xyzx  // r4.x <- <RenderFloat return value>.x; r4.y <- <RenderFloat return value>.y; r4.z <- <RenderFloat return value>.z
                            mov r4.w, r4.w  // r4.w <- <RenderFloat return value>.w
                
                #line 380
                            mov r4.xyzw, r4.xyzw  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 381
                            mov r4.xyzw, r4.xyzw  // r4.x <- <GetRGBA return value>.x; r4.y <- <GetRGBA return value>.y; r4.z <- <GetRGBA return value>.z; r4.w <- <GetRGBA return value>.w
                
                #line 382
                          else 
                
                #line 383
                            ieq r5.x, cb0[12].x, l(7)
                            if_nz r5.x
                
                #line 385
                              sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v1.xyxx, t0.xyzw, s0  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 386
                              nop 
                              mov r4.xyzw, r4.xyzw
                
                #line 287
                              mov r4.w, r4.w  // r4.w <- a
                
                #line 288
                              ieq r5.x, cb0[14].x, l(1)
                              if_z r5.x
                
                #line 294
                                nop 
                                mov r5.xyzw, r4.xyzw
                
                #line 174
                                ieq r6.x, cb0[12].z, cb0[12].y
                                if_nz r6.x
                
                #line 176
                                  mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 177
                                else 
                
                #line 178
                                  ieq r6.x, cb0[12].y, l(8)
                                  if_nz r6.x
                
                #line 180
                                    mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 181
                                  else 
                
                #line 182
                                    ieq r6.x, cb0[12].y, l(16)
                                    if_nz r6.x
                
                #line 184
                                      nop 
                                      mov r5.xyzw, r5.xyzw
                
                #line 102
                                      mov r6.x, l(0.835938)  // r6.x <- ST2084_c1
                
                #line 103
                                      mov r6.y, l(18.851562)  // r6.y <- ST2084_c2
                
                #line 104
                                      mov r6.z, l(18.687500)  // r6.z <- ST2084_c3
                
                #line 105
                                      itof r7.xyzw, l(0, 0, 0, 0)
                                      max r7.xyzw, r5.xyzw, r7.xyzw
                                      log r7.xyzw, r7.xyzw
                                      mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                      exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 106
                                      mov r8.xyzw, -r6.xxxx
                                      add r8.xyzw, r7.xyzw, r8.xyzw
                                      max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                      mul r7.xyzw, r6.zzzz, r7.xyzw
                                      mov r7.xyzw, -r7.xyzw
                                      add r6.xyzw, r6.yyyy, r7.xyzw
                                      div r6.xyzw, r8.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 107
                                      log r6.xyzw, r6.xyzw
                                      mul r6.xyzw, r6.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                      exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 108
                                      itof r7.xyzw, l(10000, 10000, 10000, 10000)
                                      mul r5.xyzw, r6.xyzw, r7.xyzw  // r5.x <- <ST2084TOLinear return value>.x; r5.y <- <ST2084TOLinear return value>.y; r5.z <- <ST2084TOLinear return value>.z; r5.w <- <ST2084TOLinear return value>.w
                
                #line 184
                                      mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 185
                                    else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 186
                                      ieq r6.x, cb0[12].y, l(18)
                                      if_nz r6.x
                
                #line 188
                                        nop 
                                        mov r5.xyzw, r5.xyzw
                
                #line 114
                                        itof r6.x, l(1000)  // r6.x <- alpha_gain
                
                #line 115
                                        nop 
                                        mov r5.x, r5.x
                
                #line 76
                                        mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                        mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                        mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                        mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                        ge r7.y, l(0.500000), r5.x
                                        if_nz r7.y
                
                #line 81
                                          mul r7.y, r5.x, r5.x
                                          mul r5.x, r7.x, r7.y
                                        else   // Prior locations: r5.x <- rgb.x; r5.x <- rgb.x
                
                #line 83
                                          mov r6.w, -r6.w
                                          add r6.w, r5.x, r6.w
                                          div r6.y, r6.w, r6.y
                                          mul r6.y, r6.y, l(1.442695)
                                          exp r6.y, r6.y
                                          add r5.x, r6.z, r6.y
                                        endif 
                
                #line 84
                                        mov r5.x, r5.x  // r5.x <- <inverse_HLG return value>
                
                #line 115
                                        mov r5.x, r5.x  // r5.x <- rgb.x
                
                #line 116
                                        nop 
                                        mov r5.y, r5.y
                
                #line 76
                                        mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                        mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                        mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                        mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                        ge r7.y, l(0.500000), r5.y
                                        if_nz r7.y
                
                #line 81
                                          mul r7.y, r5.y, r5.y
                                          mul r5.y, r7.x, r7.y
                                        else   // Prior locations: r5.y <- rgb.y; r5.y <- rgb.y
                
                #line 83
                                          mov r6.w, -r6.w
                                          add r6.w, r5.y, r6.w
                                          div r6.y, r6.w, r6.y
                                          mul r6.y, r6.y, l(1.442695)
                                          exp r6.y, r6.y
                                          add r5.y, r6.z, r6.y
                                        endif 
                
                #line 84
                                        mov r5.y, r5.y  // r5.y <- <inverse_HLG return value>
                
                #line 116
                                        mov r5.y, r5.y  // r5.y <- rgb.y
                
                #line 117
                                        nop 
                                        mov r5.z, r5.z
                
                #line 76
                                        mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                        mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                        mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                        mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                        ge r7.y, l(0.500000), r5.z
                                        if_nz r7.y
                
                #line 81
                                          mul r7.y, r5.z, r5.z
                                          mul r5.z, r7.x, r7.y
                                        else   // Prior locations: r5.z <- rgb.z; r5.z <- rgb.z
                
                #line 83
                                          mov r6.w, -r6.w
                                          add r6.w, r5.z, r6.w
                                          div r6.y, r6.w, r6.y
                                          mul r6.y, r6.y, l(1.442695)
                                          exp r6.y, r6.y
                                          add r5.z, r6.z, r6.y
                                        endif 
                
                #line 84
                                        mov r5.z, r5.z  // r5.z <- <inverse_HLG return value>
                
                #line 117
                                        mov r5.z, r5.z  // r5.z <- rgb.z
                
                #line 118
                                        mov r6.yzw, l(0,0.262700,0.678000,0.059300)  // r6.y <- ootf_2020.x; r6.z <- ootf_2020.y; r6.w <- ootf_2020.z
                
                #line 119
                                        dp3 r6.y, r6.yzwy, r5.xyzx
                                        mul r6.x, r6.y, r6.x  // r6.x <- ootf_ys
                
                #line 120
                                        log r6.x, r6.x
                                        mul r6.x, r6.x, l(0.200000)
                                        exp r6.x, r6.x
                                        mul r5.xyzw, r5.xyzw, r6.xxxx  // r5.x <- <HLGTOLinear return value>.x; r5.y <- <HLGTOLinear return value>.y; r5.z <- <HLGTOLinear return value>.z; r5.w <- <HLGTOLinear return value>.w
                
                #line 188
                                        mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 189
                                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 190
                                        ieq r6.x, cb0[12].y, l(1)
                                        if_nz r6.x
                
                #line 192
                                          nop 
                                          mov r5.xyzw, r5.xyzw
                
                #line 127
                                          log r6.xyzw, r5.xyzw
                                          mul r6.xyzw, r6.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                          exp r5.xyzw, r6.xyzw  // r5.x <- <BT709TOLinear return value>.x; r5.y <- <BT709TOLinear return value>.y; r5.z <- <BT709TOLinear return value>.z; r5.w <- <BT709TOLinear return value>.w
                
                #line 192
                                          mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 193
                                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 194
                                          ieq r6.x, cb0[12].y, l(4)
                                          if_nz r6.x
                
                #line 196
                                            nop 
                                            mov r5.xyzw, r5.xyzw
                
                #line 132
                                            log r6.xyzw, r5.xyzw
                                            mul r6.xyzw, r6.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                            exp r5.xyzw, r6.xyzw  // r5.x <- <BT470M_SRGB_TOLinear return value>.x; r5.y <- <BT470M_SRGB_TOLinear return value>.y; r5.z <- <BT470M_SRGB_TOLinear return value>.z; r5.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 196
                                            mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 197
                                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 198
                                            ieq r6.x, cb0[12].y, l(5)
                                            if_nz r6.x
                
                #line 200
                                              nop 
                                              mov r5.xyzw, r5.xyzw
                
                #line 136
                                              log r6.xyzw, r5.xyzw
                                              mul r6.xyzw, r6.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                              exp r5.xyzw, r6.xyzw  // r5.x <- <BT470BGTOLinear return value>.x; r5.y <- <BT470BGTOLinear return value>.y; r5.z <- <BT470BGTOLinear return value>.z; r5.w <- <BT470BGTOLinear return value>.w
                
                #line 200
                                              mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 201
                                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 204
                                              mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 205
                                            endif 
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                                endif 
                
                #line 294
                                mov r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 295
                                nop 
                                mov r5.xyzw, r5.xyzw
                
                #line 212
                                ine r6.x, cb0[12].w, cb0[13].x
                                if_nz r6.x
                
                #line 214
                                  dp4 r6.x, r5.xyzw, cb1[8].xyzw
                                  dp4 r6.y, r5.xyzw, cb1[9].xyzw
                                  dp4 r6.z, r5.xyzw, cb1[10].xyzw
                                  itof r7.xyz, l(0, 0, 0, 0)
                                  max r5.xyz, r6.xyzx, r7.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 215
                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 218
                                  mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 219
                                endif 
                
                #line 295
                                mov r5.xyz, r5.xyzx
                
                #line 296
                                nop 
                                mov r5.xyz, r5.xyzx
                
                #line 224
                                ieq r5.w, cb0[12].y, cb0[12].z
                                if_nz r5.w  // r4.w <- rgb.w
                
                #line 226
                                  mov r4.xyz, r5.xyzx
                
                #line 227
                                endif   // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 228
                                if_z r5.w
                                  ieq r5.w, cb0[12].z, l(1)
                                  ieq r6.x, cb0[12].z, l(4)
                                  or r5.w, r5.w, r6.x
                                  if_nz r5.w
                
                #line 230
                                    ieq r5.w, cb0[12].y, l(16)
                                    ieq r6.x, cb0[12].y, l(18)
                                    or r5.w, r5.w, r6.x
                                    if_nz r5.w
                
                #line 232
                                      nop 
                                      mov r5.xyz, r5.xyzx
                
                #line 166
                                      mov r6.xyz, l(11.200000,11.200000,11.200000,0)  // r6.x <- tmp.x; r6.y <- tmp.y; r6.z <- tmp.z
                
                #line 167
                                      nop 
                                      mov r6.xyz, r6.xyzx
                
                #line 160
                                      mov r5.w, l(0.150000)  // r5.w <- A
                                      mov r6.w, l(0.500000)  // r6.w <- B
                
                #line 161
                                      mul r7.xyz, r6.xyzx, r5.wwww
                                      add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                      mul r7.xyz, r6.xyzx, r7.xyzx
                                      add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                      mul r8.xyz, r6.xyzx, r5.wwww
                                      add r8.xyz, r6.wwww, r8.xyzx
                                      mul r6.xyz, r6.xyzx, r8.xyzx
                                      add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                      div r6.xyz, r7.xyzx, r6.xyzx
                                      mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                      add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 167
                                      mov r6.xyz, r6.xyzx  // r6.x <- HABLE_DIV.x; r6.y <- HABLE_DIV.y; r6.z <- HABLE_DIV.z
                
                #line 168
                                      nop 
                                      mul r7.xyz, r5.xyzx, cb0[13].wwww
                
                #line 160
                                      mov r5.w, l(0.150000)
                                      mov r6.w, l(0.500000)
                
                #line 161
                                      mul r8.xyz, r7.xyzx, r5.wwww
                                      add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                      mul r8.xyz, r7.xyzx, r8.xyzx
                                      add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                      mul r9.xyz, r7.xyzx, r5.wwww
                                      add r9.xyz, r6.wwww, r9.xyzx
                                      mul r7.xyz, r7.xyzx, r9.xyzx
                                      add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                      div r7.xyz, r8.xyzx, r7.xyzx
                                      mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                      add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 168
                                      div r4.xyz, r7.xyzx, r6.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 169
                                      mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 232
                                      mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 233
                                    else 
                
                #line 236
                                      mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 237
                                    endif 
                
                #line 238
                                  else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 241
                                    mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 242
                                  endif 
                                endif 
                
                #line 296
                                mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 297
                                nop 
                                mov r4.xyz, r4.xyzx
                
                #line 253
                                ieq r5.x, cb0[12].y, cb0[12].z
                                if_nz r5.x
                
                #line 255
                                  mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 256
                                else 
                
                #line 257
                                  ieq r5.x, cb0[12].z, l(16)
                                  if_nz r5.x
                
                #line 259
                                    nop 
                                    mov r4.xyz, r4.xyzx
                
                #line 147
                                    mov r5.x, l(0.159302)  // r5.x <- ST2084_m1
                
                #line 148
                                    mov r5.y, l(78.843750)  // r5.y <- ST2084_m2
                
                #line 149
                                    mov r5.z, l(0.835938)  // r5.z <- ST2084_c1
                
                #line 150
                                    mov r5.w, l(18.851562)  // r5.w <- ST2084_c2
                
                #line 151
                                    mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 152
                                    itof r6.yzw, l(0, 10000, 10000, 10000)
                                    div r6.yzw, r4.xxyz, r6.yyzw
                                    log r6.yzw, r6.yyzw
                                    mul r6.yzw, r5.xxxx, r6.yyzw
                                    exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 153
                                    mul r7.xyz, r5.wwww, r6.yzwy
                                    add r5.xzw, r5.zzzz, r7.xxyz
                                    itof r7.xyz, l(1, 1, 1, 0)
                                    mul r6.xyz, r6.yzwy, r6.xxxx
                                    add r6.xyz, r6.xyzx, r7.xyzx
                                    div r5.xzw, r5.xxzw, r6.xxyz  // r5.x <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 154
                                    log r5.xzw, r5.xxzw
                                    mul r5.xyz, r5.xzwx, r5.yyyy
                                    exp r4.xyz, r5.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 155
                                    mov r4.xyz, r4.xyzx  // r4.x <- <LineTOST2084 return value>.x; r4.y <- <LineTOST2084 return value>.y; r4.z <- <LineTOST2084 return value>.z
                
                #line 259
                                    mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 260
                                  else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 261
                                    ieq r5.x, cb0[12].z, l(18)
                                    if_nz r5.x
                
                #line 263
                                      mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 264
                                    else 
                
                #line 265
                                      ieq r5.x, cb0[12].z, l(1)
                                      if_nz r5.x
                
                #line 267
                                        log r5.xyz, r4.xyzx
                                        mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                        exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 268
                                      else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 269
                                        ieq r5.x, cb0[12].z, l(4)
                                        if_nz r5.x
                
                #line 271
                                          log r5.xyz, r4.xyzx
                                          mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                          exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 272
                                        else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 275
                                          mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 276
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                                endif 
                
                #line 297
                                mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 298
                                nop 
                                mov r4.xyz, r4.xyzx
                
                #line 248
                                mov r4.xyz, r4.xyzx  // r4.x <- <adjustRange return value>.x; r4.y <- <adjustRange return value>.y; r4.z <- <adjustRange return value>.z
                
                #line 298
                                mov r4.xyz, r4.xyzx
                
                #line 299
                                nop 
                                mov r4.xyz, r4.xyzx
                
                #line 282
                                mov r4.xyz, r4.xyzx  // r4.x <- <reorderPlanes return value>.x; r4.y <- <reorderPlanes return value>.y; r4.z <- <reorderPlanes return value>.z
                
                #line 299
                                mov r4.xyz, r4.xyzx
                
                #line 300
                              endif 
                
                #line 301
                              mov r4.xyz, r4.xyzx  // r4.x <- <RenderFloat return value>.x; r4.y <- <RenderFloat return value>.y; r4.z <- <RenderFloat return value>.z
                              mov r4.w, r4.w  // r4.w <- <RenderFloat return value>.w
                
                #line 386
                              mov r4.xyzw, r4.xyzw  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 387
                              mov r4.xyzw, r4.xyzw  // r4.x <- <GetRGBA return value>.x; r4.y <- <GetRGBA return value>.y; r4.z <- <GetRGBA return value>.z; r4.w <- <GetRGBA return value>.w
                
                #line 388
                            else 
                
                #line 389
                              ieq r5.x, cb0[12].x, l(8)
                              if_nz r5.x
                
                #line 391
                                nop 
                
                #line 67
                                sample_indexable(texture2d)(float,float,float,float) r5.x, v1.xyxx, t0.xyzw, s0
                                itof r5.y, l(64)
                                mul r5.x, r5.y, r5.x  // r5.x <- y
                
                #line 68
                                sample_indexable(texture2d)(float,float,float,float) r6.x, v1.xyxx, t1.xyzw, s0
                                itof r6.y, l(64)
                                mul r5.y, r6.y, r6.x  // r5.y <- u
                
                #line 69
                                sample_indexable(texture2d)(float,float,float,float) r6.x, v1.xyxx, t2.xyzw, s0
                                itof r6.y, l(64)
                                mul r5.z, r6.y, r6.x  // r5.z <- v
                
                #line 70
                                mov r5.w, l(1.000000)
                                mov r5.xyzw, r5.xyzw  // r5.x <- <PSPlanar42010_Reverse return value>.x; r5.y <- <PSPlanar42010_Reverse return value>.y; r5.z <- <PSPlanar42010_Reverse return value>.z; r5.w <- <PSPlanar42010_Reverse return value>.w
                
                #line 391
                                mov r5.xyzw, r5.xyzw  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w
                
                #line 393
                                dp4 r6.x, r5.xyzw, cb1[0].xyzw  // r6.x <- rr.x
                                dp4 r6.y, r5.xyzw, cb1[1].xyzw  // r6.y <- rr.y
                                dp4 r6.z, r5.xyzw, cb1[2].xyzw  // r6.z <- rr.z
                                dp4 r6.w, r5.xyzw, cb1[3].xyzw  // r6.w <- rr.w
                
                #line 394
                                dp4 r5.x, r6.xyzw, r0.xyzw
                                dp4 r5.y, r6.xyzw, r1.xyzw
                                dp4 r5.z, r6.xyzw, r2.xyzw
                                dp4 r5.w, r6.xyzw, r3.xyzw
                                itof r6.xyzw, l(0, 0, 0, 0)
                                max r4.xyzw, r5.xyzw, r6.xyzw  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z; r4.w <- rgbarsp.w
                
                #line 395
                                nop 
                                mov r4.xyzw, r4.xyzw
                
                #line 288
                                ieq r5.x, cb0[14].x, l(1)
                                if_z r5.x
                
                #line 294
                                  nop 
                                  mov r5.xyzw, r4.xyzw
                
                #line 174
                                  ieq r6.x, cb0[12].z, cb0[12].y
                                  if_nz r6.x
                
                #line 176
                                    mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 177
                                  else 
                
                #line 178
                                    ieq r6.x, cb0[12].y, l(8)
                                    if_nz r6.x
                
                #line 180
                                      mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 181
                                    else 
                
                #line 182
                                      ieq r6.x, cb0[12].y, l(16)
                                      if_nz r6.x
                
                #line 184
                                        nop 
                                        mov r5.xyzw, r5.xyzw
                
                #line 102
                                        mov r6.x, l(0.835938)  // r6.x <- ST2084_c1
                
                #line 103
                                        mov r6.y, l(18.851562)  // r6.y <- ST2084_c2
                
                #line 104
                                        mov r6.z, l(18.687500)  // r6.z <- ST2084_c3
                
                #line 105
                                        itof r7.xyzw, l(0, 0, 0, 0)
                                        max r7.xyzw, r5.xyzw, r7.xyzw
                                        log r7.xyzw, r7.xyzw
                                        mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                        exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 106
                                        mov r8.xyzw, -r6.xxxx
                                        add r8.xyzw, r7.xyzw, r8.xyzw
                                        max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                        mul r7.xyzw, r6.zzzz, r7.xyzw
                                        mov r7.xyzw, -r7.xyzw
                                        add r6.xyzw, r6.yyyy, r7.xyzw
                                        div r6.xyzw, r8.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 107
                                        log r6.xyzw, r6.xyzw
                                        mul r6.xyzw, r6.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                        exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 108
                                        itof r7.xyzw, l(10000, 10000, 10000, 10000)
                                        mul r5.xyzw, r6.xyzw, r7.xyzw  // r5.x <- <ST2084TOLinear return value>.x; r5.y <- <ST2084TOLinear return value>.y; r5.z <- <ST2084TOLinear return value>.z; r5.w <- <ST2084TOLinear return value>.w
                
                #line 184
                                        mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 185
                                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 186
                                        ieq r6.x, cb0[12].y, l(18)
                                        if_nz r6.x
                
                #line 188
                                          nop 
                                          mov r5.xyzw, r5.xyzw
                
                #line 114
                                          itof r6.x, l(1000)  // r6.x <- alpha_gain
                
                #line 115
                                          nop 
                                          mov r5.x, r5.x
                
                #line 76
                                          mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                          mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                          mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                          mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                          ge r7.y, l(0.500000), r5.x
                                          if_nz r7.y
                
                #line 81
                                            mul r7.y, r5.x, r5.x
                                            mul r5.x, r7.x, r7.y
                                          else   // Prior locations: r5.x <- rgb.x; r5.x <- rgb.x
                
                #line 83
                                            mov r6.w, -r6.w
                                            add r6.w, r5.x, r6.w
                                            div r6.y, r6.w, r6.y
                                            mul r6.y, r6.y, l(1.442695)
                                            exp r6.y, r6.y
                                            add r5.x, r6.z, r6.y
                                          endif 
                
                #line 84
                                          mov r5.x, r5.x  // r5.x <- <inverse_HLG return value>
                
                #line 115
                                          mov r5.x, r5.x  // r5.x <- rgb.x
                
                #line 116
                                          nop 
                                          mov r5.y, r5.y
                
                #line 76
                                          mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                          mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                          mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                          mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                          ge r7.y, l(0.500000), r5.y
                                          if_nz r7.y
                
                #line 81
                                            mul r7.y, r5.y, r5.y
                                            mul r5.y, r7.x, r7.y
                                          else   // Prior locations: r5.y <- rgb.y; r5.y <- rgb.y
                
                #line 83
                                            mov r6.w, -r6.w
                                            add r6.w, r5.y, r6.w
                                            div r6.y, r6.w, r6.y
                                            mul r6.y, r6.y, l(1.442695)
                                            exp r6.y, r6.y
                                            add r5.y, r6.z, r6.y
                                          endif 
                
                #line 84
                                          mov r5.y, r5.y  // r5.y <- <inverse_HLG return value>
                
                #line 116
                                          mov r5.y, r5.y  // r5.y <- rgb.y
                
                #line 117
                                          nop 
                                          mov r5.z, r5.z
                
                #line 76
                                          mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                          mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                          mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                          mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                          ge r7.y, l(0.500000), r5.z
                                          if_nz r7.y
                
                #line 81
                                            mul r7.y, r5.z, r5.z
                                            mul r5.z, r7.x, r7.y
                                          else   // Prior locations: r5.z <- rgb.z; r5.z <- rgb.z
                
                #line 83
                                            mov r6.w, -r6.w
                                            add r6.w, r5.z, r6.w
                                            div r6.y, r6.w, r6.y
                                            mul r6.y, r6.y, l(1.442695)
                                            exp r6.y, r6.y
                                            add r5.z, r6.z, r6.y
                                          endif 
                
                #line 84
                                          mov r5.z, r5.z  // r5.z <- <inverse_HLG return value>
                
                #line 117
                                          mov r5.z, r5.z  // r5.z <- rgb.z
                
                #line 118
                                          mov r6.yzw, l(0,0.262700,0.678000,0.059300)  // r6.y <- ootf_2020.x; r6.z <- ootf_2020.y; r6.w <- ootf_2020.z
                
                #line 119
                                          dp3 r6.y, r6.yzwy, r5.xyzx
                                          mul r6.x, r6.y, r6.x  // r6.x <- ootf_ys
                
                #line 120
                                          log r6.x, r6.x
                                          mul r6.x, r6.x, l(0.200000)
                                          exp r6.x, r6.x
                                          mul r5.xyzw, r5.xyzw, r6.xxxx  // r5.x <- <HLGTOLinear return value>.x; r5.y <- <HLGTOLinear return value>.y; r5.z <- <HLGTOLinear return value>.z; r5.w <- <HLGTOLinear return value>.w
                
                #line 188
                                          mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 189
                                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 190
                                          ieq r6.x, cb0[12].y, l(1)
                                          if_nz r6.x
                
                #line 192
                                            nop 
                                            mov r5.xyzw, r5.xyzw
                
                #line 127
                                            log r6.xyzw, r5.xyzw
                                            mul r6.xyzw, r6.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                            exp r5.xyzw, r6.xyzw  // r5.x <- <BT709TOLinear return value>.x; r5.y <- <BT709TOLinear return value>.y; r5.z <- <BT709TOLinear return value>.z; r5.w <- <BT709TOLinear return value>.w
                
                #line 192
                                            mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 193
                                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 194
                                            ieq r6.x, cb0[12].y, l(4)
                                            if_nz r6.x
                
                #line 196
                                              nop 
                                              mov r5.xyzw, r5.xyzw
                
                #line 132
                                              log r6.xyzw, r5.xyzw
                                              mul r6.xyzw, r6.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                              exp r5.xyzw, r6.xyzw  // r5.x <- <BT470M_SRGB_TOLinear return value>.x; r5.y <- <BT470M_SRGB_TOLinear return value>.y; r5.z <- <BT470M_SRGB_TOLinear return value>.z; r5.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 196
                                              mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 197
                                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 198
                                              ieq r6.x, cb0[12].y, l(5)
                                              if_nz r6.x
                
                #line 200
                                                nop 
                                                mov r5.xyzw, r5.xyzw
                
                #line 136
                                                log r6.xyzw, r5.xyzw
                                                mul r6.xyzw, r6.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                                exp r5.xyzw, r6.xyzw  // r5.x <- <BT470BGTOLinear return value>.x; r5.y <- <BT470BGTOLinear return value>.y; r5.z <- <BT470BGTOLinear return value>.z; r5.w <- <BT470BGTOLinear return value>.w
                
                #line 200
                                                mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 201
                                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 204
                                                mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 205
                                              endif 
                                            endif 
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                
                #line 294
                                  mov r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 295
                                  nop 
                                  mov r5.xyzw, r5.xyzw
                
                #line 212
                                  ine r6.x, cb0[12].w, cb0[13].x
                                  if_nz r6.x
                
                #line 214
                                    dp4 r6.x, r5.xyzw, cb1[8].xyzw
                                    dp4 r6.y, r5.xyzw, cb1[9].xyzw
                                    dp4 r6.z, r5.xyzw, cb1[10].xyzw
                                    itof r7.xyz, l(0, 0, 0, 0)
                                    max r5.xyz, r6.xyzx, r7.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 215
                                  else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 218
                                    mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 219
                                  endif 
                
                #line 295
                                  mov r5.xyz, r5.xyzx
                
                #line 296
                                  nop 
                                  mov r5.xyz, r5.xyzx
                
                #line 224
                                  ieq r5.w, cb0[12].y, cb0[12].z
                                  if_nz r5.w
                
                #line 226
                                    mov r4.xyz, r5.xyzx
                
                #line 227
                                  endif   // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 228
                                  if_z r5.w
                                    ieq r5.w, cb0[12].z, l(1)
                                    ieq r6.x, cb0[12].z, l(4)
                                    or r5.w, r5.w, r6.x
                                    if_nz r5.w
                
                #line 230
                                      ieq r5.w, cb0[12].y, l(16)
                                      ieq r6.x, cb0[12].y, l(18)
                                      or r5.w, r5.w, r6.x
                                      if_nz r5.w
                
                #line 232
                                        nop 
                                        mov r5.xyz, r5.xyzx
                
                #line 166
                                        mov r6.xyz, l(11.200000,11.200000,11.200000,0)  // r6.x <- tmp.x; r6.y <- tmp.y; r6.z <- tmp.z
                
                #line 167
                                        nop 
                                        mov r6.xyz, r6.xyzx
                
                #line 160
                                        mov r5.w, l(0.150000)  // r5.w <- A
                                        mov r6.w, l(0.500000)  // r6.w <- B
                
                #line 161
                                        mul r7.xyz, r6.xyzx, r5.wwww
                                        add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                        mul r7.xyz, r6.xyzx, r7.xyzx
                                        add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                        mul r8.xyz, r6.xyzx, r5.wwww
                                        add r8.xyz, r6.wwww, r8.xyzx
                                        mul r6.xyz, r6.xyzx, r8.xyzx
                                        add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                        div r6.xyz, r7.xyzx, r6.xyzx
                                        mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                        add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 167
                                        mov r6.xyz, r6.xyzx  // r6.x <- HABLE_DIV.x; r6.y <- HABLE_DIV.y; r6.z <- HABLE_DIV.z
                
                #line 168
                                        nop 
                                        mul r7.xyz, r5.xyzx, cb0[13].wwww
                
                #line 160
                                        mov r5.w, l(0.150000)
                                        mov r6.w, l(0.500000)
                
                #line 161
                                        mul r8.xyz, r7.xyzx, r5.wwww
                                        add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                        mul r8.xyz, r7.xyzx, r8.xyzx
                                        add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                        mul r9.xyz, r7.xyzx, r5.wwww
                                        add r9.xyz, r6.wwww, r9.xyzx
                                        mul r7.xyz, r7.xyzx, r9.xyzx
                                        add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                        div r7.xyz, r8.xyzx, r7.xyzx
                                        mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                        add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 168
                                        div r4.xyz, r7.xyzx, r6.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 169
                                        mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 232
                                        mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 233
                                      else 
                
                #line 236
                                        mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 237
                                      endif 
                
                #line 238
                                    else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 241
                                      mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 242
                                    endif 
                                  endif 
                
                #line 296
                                  mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 297
                                  nop 
                                  mov r4.xyz, r4.xyzx
                
                #line 253
                                  ieq r5.x, cb0[12].y, cb0[12].z
                                  if_nz r5.x
                
                #line 255
                                    mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 256
                                  else 
                
                #line 257
                                    ieq r5.x, cb0[12].z, l(16)
                                    if_nz r5.x
                
                #line 259
                                      nop 
                                      mov r4.xyz, r4.xyzx
                
                #line 147
                                      mov r5.x, l(0.159302)  // r5.x <- ST2084_m1
                
                #line 148
                                      mov r5.y, l(78.843750)  // r5.y <- ST2084_m2
                
                #line 149
                                      mov r5.z, l(0.835938)  // r5.z <- ST2084_c1
                
                #line 150
                                      mov r5.w, l(18.851562)  // r5.w <- ST2084_c2
                
                #line 151
                                      mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 152
                                      itof r6.yzw, l(0, 10000, 10000, 10000)
                                      div r6.yzw, r4.xxyz, r6.yyzw
                                      log r6.yzw, r6.yyzw
                                      mul r6.yzw, r5.xxxx, r6.yyzw
                                      exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 153
                                      mul r7.xyz, r5.wwww, r6.yzwy
                                      add r5.xzw, r5.zzzz, r7.xxyz
                                      itof r7.xyz, l(1, 1, 1, 0)
                                      mul r6.xyz, r6.yzwy, r6.xxxx
                                      add r6.xyz, r6.xyzx, r7.xyzx
                                      div r5.xzw, r5.xxzw, r6.xxyz  // r5.x <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 154
                                      log r5.xzw, r5.xxzw
                                      mul r5.xyz, r5.xzwx, r5.yyyy
                                      exp r4.xyz, r5.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 155
                                      mov r4.xyz, r4.xyzx  // r4.x <- <LineTOST2084 return value>.x; r4.y <- <LineTOST2084 return value>.y; r4.z <- <LineTOST2084 return value>.z
                
                #line 259
                                      mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 260
                                    else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 261
                                      ieq r5.x, cb0[12].z, l(18)
                                      if_nz r5.x
                
                #line 263
                                        mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 264
                                      else 
                
                #line 265
                                        ieq r5.x, cb0[12].z, l(1)
                                        if_nz r5.x
                
                #line 267
                                          log r5.xyz, r4.xyzx
                                          mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                          exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 268
                                        else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 269
                                          ieq r5.x, cb0[12].z, l(4)
                                          if_nz r5.x
                
                #line 271
                                            log r5.xyz, r4.xyzx
                                            mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                            exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 272
                                          else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 275
                                            mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 276
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                
                #line 297
                                  mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 298
                                  nop 
                                  mov r4.xyz, r4.xyzx
                
                #line 248
                                  mov r4.xyz, r4.xyzx  // r4.x <- <adjustRange return value>.x; r4.y <- <adjustRange return value>.y; r4.z <- <adjustRange return value>.z
                
                #line 298
                                  mov r4.xyz, r4.xyzx
                
                #line 299
                                  nop 
                                  mov r4.xyz, r4.xyzx
                
                #line 282
                                  mov r4.xyz, r4.xyzx  // r4.x <- <reorderPlanes return value>.x; r4.y <- <reorderPlanes return value>.y; r4.z <- <reorderPlanes return value>.z
                
                #line 299
                                  mov r4.xyz, r4.xyzx
                
                #line 300
                                endif 
                
                #line 301
                                mov r4.xyz, r4.xyzx  // r4.x <- <RenderFloat return value>.x; r4.y <- <RenderFloat return value>.y; r4.z <- <RenderFloat return value>.z
                
                #line 395
                                mov r4.xyz, r4.xyzx  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z
                
                #line 396
                                itof r4.w, l(1)  // r4.w <- rgbarsp.w
                
                #line 397
                                mov r4.xyz, r4.xyzx  // r4.x <- <GetRGBA return value>.x; r4.y <- <GetRGBA return value>.y; r4.z <- <GetRGBA return value>.z
                                mov r4.w, r4.w  // r4.w <- <GetRGBA return value>.w
                
                #line 398
                              else 
                
                #line 399
                                ieq r5.x, cb0[12].x, l(9)
                                if_nz r5.x
                
                #line 401
                                  nop 
                
                #line 306
                                  sample_indexable(texture2d)(float,float,float,float) r5.x, v1.xyxx, t0.xyzw, s0  // r5.x <- y0
                
                #line 307
                                  sample_indexable(texture2d)(float,float,float,float) r5.y, v1.xyxx, t0.xyzw, s0  // r5.y <- u0
                
                #line 308
                                  sample_indexable(texture2d)(float,float,float,float) r5.z, v1.xyxx, t0.xywz, s0  // r5.z <- v0
                
                #line 310
                                  itof r5.w, l(1)  // r5.w <- <PSPacked422_Reverse return value>.w
                                  mov r5.x, r5.x  // r5.x <- <PSPacked422_Reverse return value>.x
                                  mov r5.y, r5.y  // r5.y <- <PSPacked422_Reverse return value>.y
                                  mov r5.z, r5.z  // r5.z <- <PSPacked422_Reverse return value>.z
                
                #line 401
                                  mov r5.xyzw, r5.xyzw  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w
                
                #line 403
                                  dp4 r6.x, r5.xyzw, cb1[0].xyzw  // r6.x <- rr.x
                                  dp4 r6.y, r5.xyzw, cb1[1].xyzw  // r6.y <- rr.y
                                  dp4 r6.z, r5.xyzw, cb1[2].xyzw  // r6.z <- rr.z
                                  dp4 r6.w, r5.xyzw, cb1[3].xyzw  // r6.w <- rr.w
                
                #line 404
                                  dp4 r5.x, r6.xyzw, r0.xyzw
                                  dp4 r5.y, r6.xyzw, r1.xyzw
                                  dp4 r5.z, r6.xyzw, r2.xyzw
                                  dp4 r5.w, r6.xyzw, r3.xyzw
                                  itof r6.xyzw, l(0, 0, 0, 0)
                                  max r4.xyzw, r5.xyzw, r6.xyzw  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z; r4.w <- rgbarsp.w
                
                #line 405
                                  nop 
                                  mov r4.xyzw, r4.xyzw
                
                #line 288
                                  ieq r5.x, cb0[14].x, l(1)
                                  if_z r5.x
                
                #line 294
                                    nop 
                                    mov r5.xyzw, r4.xyzw
                
                #line 174
                                    ieq r6.x, cb0[12].z, cb0[12].y
                                    if_nz r6.x
                
                #line 176
                                      mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 177
                                    else 
                
                #line 178
                                      ieq r6.x, cb0[12].y, l(8)
                                      if_nz r6.x
                
                #line 180
                                        mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 181
                                      else 
                
                #line 182
                                        ieq r6.x, cb0[12].y, l(16)
                                        if_nz r6.x
                
                #line 184
                                          nop 
                                          mov r5.xyzw, r5.xyzw
                
                #line 102
                                          mov r6.x, l(0.835938)  // r6.x <- ST2084_c1
                
                #line 103
                                          mov r6.y, l(18.851562)  // r6.y <- ST2084_c2
                
                #line 104
                                          mov r6.z, l(18.687500)  // r6.z <- ST2084_c3
                
                #line 105
                                          itof r7.xyzw, l(0, 0, 0, 0)
                                          max r7.xyzw, r5.xyzw, r7.xyzw
                                          log r7.xyzw, r7.xyzw
                                          mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                          exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 106
                                          mov r8.xyzw, -r6.xxxx
                                          add r8.xyzw, r7.xyzw, r8.xyzw
                                          max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                          mul r7.xyzw, r6.zzzz, r7.xyzw
                                          mov r7.xyzw, -r7.xyzw
                                          add r6.xyzw, r6.yyyy, r7.xyzw
                                          div r6.xyzw, r8.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 107
                                          log r6.xyzw, r6.xyzw
                                          mul r6.xyzw, r6.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                          exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 108
                                          itof r7.xyzw, l(10000, 10000, 10000, 10000)
                                          mul r5.xyzw, r6.xyzw, r7.xyzw  // r5.x <- <ST2084TOLinear return value>.x; r5.y <- <ST2084TOLinear return value>.y; r5.z <- <ST2084TOLinear return value>.z; r5.w <- <ST2084TOLinear return value>.w
                
                #line 184
                                          mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 185
                                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 186
                                          ieq r6.x, cb0[12].y, l(18)
                                          if_nz r6.x
                
                #line 188
                                            nop 
                                            mov r5.xyzw, r5.xyzw
                
                #line 114
                                            itof r6.x, l(1000)  // r6.x <- alpha_gain
                
                #line 115
                                            nop 
                                            mov r5.x, r5.x
                
                #line 76
                                            mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                            mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                            mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                            mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                            ge r7.y, l(0.500000), r5.x
                                            if_nz r7.y
                
                #line 81
                                              mul r7.y, r5.x, r5.x
                                              mul r5.x, r7.x, r7.y
                                            else   // Prior locations: r5.x <- rgb.x; r5.x <- rgb.x
                
                #line 83
                                              mov r6.w, -r6.w
                                              add r6.w, r5.x, r6.w
                                              div r6.y, r6.w, r6.y
                                              mul r6.y, r6.y, l(1.442695)
                                              exp r6.y, r6.y
                                              add r5.x, r6.z, r6.y
                                            endif 
                
                #line 84
                                            mov r5.x, r5.x  // r5.x <- <inverse_HLG return value>
                
                #line 115
                                            mov r5.x, r5.x  // r5.x <- rgb.x
                
                #line 116
                                            nop 
                                            mov r5.y, r5.y
                
                #line 76
                                            mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                            mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                            mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                            mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                            ge r7.y, l(0.500000), r5.y
                                            if_nz r7.y
                
                #line 81
                                              mul r7.y, r5.y, r5.y
                                              mul r5.y, r7.x, r7.y
                                            else   // Prior locations: r5.y <- rgb.y; r5.y <- rgb.y
                
                #line 83
                                              mov r6.w, -r6.w
                                              add r6.w, r5.y, r6.w
                                              div r6.y, r6.w, r6.y
                                              mul r6.y, r6.y, l(1.442695)
                                              exp r6.y, r6.y
                                              add r5.y, r6.z, r6.y
                                            endif 
                
                #line 84
                                            mov r5.y, r5.y  // r5.y <- <inverse_HLG return value>
                
                #line 116
                                            mov r5.y, r5.y  // r5.y <- rgb.y
                
                #line 117
                                            nop 
                                            mov r5.z, r5.z
                
                #line 76
                                            mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                            mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                            mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                            mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                            ge r7.y, l(0.500000), r5.z
                                            if_nz r7.y
                
                #line 81
                                              mul r7.y, r5.z, r5.z
                                              mul r5.z, r7.x, r7.y
                                            else   // Prior locations: r5.z <- rgb.z; r5.z <- rgb.z
                
                #line 83
                                              mov r6.w, -r6.w
                                              add r6.w, r5.z, r6.w
                                              div r6.y, r6.w, r6.y
                                              mul r6.y, r6.y, l(1.442695)
                                              exp r6.y, r6.y
                                              add r5.z, r6.z, r6.y
                                            endif 
                
                #line 84
                                            mov r5.z, r5.z  // r5.z <- <inverse_HLG return value>
                
                #line 117
                                            mov r5.z, r5.z  // r5.z <- rgb.z
                
                #line 118
                                            mov r6.yzw, l(0,0.262700,0.678000,0.059300)  // r6.y <- ootf_2020.x; r6.z <- ootf_2020.y; r6.w <- ootf_2020.z
                
                #line 119
                                            dp3 r6.y, r6.yzwy, r5.xyzx
                                            mul r6.x, r6.y, r6.x  // r6.x <- ootf_ys
                
                #line 120
                                            log r6.x, r6.x
                                            mul r6.x, r6.x, l(0.200000)
                                            exp r6.x, r6.x
                                            mul r5.xyzw, r5.xyzw, r6.xxxx  // r5.x <- <HLGTOLinear return value>.x; r5.y <- <HLGTOLinear return value>.y; r5.z <- <HLGTOLinear return value>.z; r5.w <- <HLGTOLinear return value>.w
                
                #line 188
                                            mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 189
                                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 190
                                            ieq r6.x, cb0[12].y, l(1)
                                            if_nz r6.x
                
                #line 192
                                              nop 
                                              mov r5.xyzw, r5.xyzw
                
                #line 127
                                              log r6.xyzw, r5.xyzw
                                              mul r6.xyzw, r6.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                              exp r5.xyzw, r6.xyzw  // r5.x <- <BT709TOLinear return value>.x; r5.y <- <BT709TOLinear return value>.y; r5.z <- <BT709TOLinear return value>.z; r5.w <- <BT709TOLinear return value>.w
                
                #line 192
                                              mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 193
                                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 194
                                              ieq r6.x, cb0[12].y, l(4)
                                              if_nz r6.x
                
                #line 196
                                                nop 
                                                mov r5.xyzw, r5.xyzw
                
                #line 132
                                                log r6.xyzw, r5.xyzw
                                                mul r6.xyzw, r6.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                                exp r5.xyzw, r6.xyzw  // r5.x <- <BT470M_SRGB_TOLinear return value>.x; r5.y <- <BT470M_SRGB_TOLinear return value>.y; r5.z <- <BT470M_SRGB_TOLinear return value>.z; r5.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 196
                                                mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 197
                                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 198
                                                ieq r6.x, cb0[12].y, l(5)
                                                if_nz r6.x
                
                #line 200
                                                  nop 
                                                  mov r5.xyzw, r5.xyzw
                
                #line 136
                                                  log r6.xyzw, r5.xyzw
                                                  mul r6.xyzw, r6.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                                  exp r5.xyzw, r6.xyzw  // r5.x <- <BT470BGTOLinear return value>.x; r5.y <- <BT470BGTOLinear return value>.y; r5.z <- <BT470BGTOLinear return value>.z; r5.w <- <BT470BGTOLinear return value>.w
                
                #line 200
                                                  mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 201
                                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 204
                                                  mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 205
                                                endif 
                                              endif 
                                            endif 
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                
                #line 294
                                    mov r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 295
                                    nop 
                                    mov r5.xyzw, r5.xyzw
                
                #line 212
                                    ine r6.x, cb0[12].w, cb0[13].x
                                    if_nz r6.x
                
                #line 214
                                      dp4 r6.x, r5.xyzw, cb1[8].xyzw
                                      dp4 r6.y, r5.xyzw, cb1[9].xyzw
                                      dp4 r6.z, r5.xyzw, cb1[10].xyzw
                                      itof r7.xyz, l(0, 0, 0, 0)
                                      max r5.xyz, r6.xyzx, r7.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 215
                                    else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 218
                                      mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 219
                                    endif 
                
                #line 295
                                    mov r5.xyz, r5.xyzx
                
                #line 296
                                    nop 
                                    mov r5.xyz, r5.xyzx
                
                #line 224
                                    ieq r5.w, cb0[12].y, cb0[12].z
                                    if_nz r5.w
                
                #line 226
                                      mov r4.xyz, r5.xyzx
                
                #line 227
                                    endif   // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 228
                                    if_z r5.w
                                      ieq r5.w, cb0[12].z, l(1)
                                      ieq r6.x, cb0[12].z, l(4)
                                      or r5.w, r5.w, r6.x
                                      if_nz r5.w
                
                #line 230
                                        ieq r5.w, cb0[12].y, l(16)
                                        ieq r6.x, cb0[12].y, l(18)
                                        or r5.w, r5.w, r6.x
                                        if_nz r5.w
                
                #line 232
                                          nop 
                                          mov r5.xyz, r5.xyzx
                
                #line 166
                                          mov r6.xyz, l(11.200000,11.200000,11.200000,0)  // r6.x <- tmp.x; r6.y <- tmp.y; r6.z <- tmp.z
                
                #line 167
                                          nop 
                                          mov r6.xyz, r6.xyzx
                
                #line 160
                                          mov r5.w, l(0.150000)  // r5.w <- A
                                          mov r6.w, l(0.500000)  // r6.w <- B
                
                #line 161
                                          mul r7.xyz, r6.xyzx, r5.wwww
                                          add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                          mul r7.xyz, r6.xyzx, r7.xyzx
                                          add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                          mul r8.xyz, r6.xyzx, r5.wwww
                                          add r8.xyz, r6.wwww, r8.xyzx
                                          mul r6.xyz, r6.xyzx, r8.xyzx
                                          add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                          div r6.xyz, r7.xyzx, r6.xyzx
                                          mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                          add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 167
                                          mov r6.xyz, r6.xyzx  // r6.x <- HABLE_DIV.x; r6.y <- HABLE_DIV.y; r6.z <- HABLE_DIV.z
                
                #line 168
                                          nop 
                                          mul r7.xyz, r5.xyzx, cb0[13].wwww
                
                #line 160
                                          mov r5.w, l(0.150000)
                                          mov r6.w, l(0.500000)
                
                #line 161
                                          mul r8.xyz, r7.xyzx, r5.wwww
                                          add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                          mul r8.xyz, r7.xyzx, r8.xyzx
                                          add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                          mul r9.xyz, r7.xyzx, r5.wwww
                                          add r9.xyz, r6.wwww, r9.xyzx
                                          mul r7.xyz, r7.xyzx, r9.xyzx
                                          add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                          div r7.xyz, r8.xyzx, r7.xyzx
                                          mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                          add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 168
                                          div r4.xyz, r7.xyzx, r6.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 169
                                          mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 232
                                          mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 233
                                        else 
                
                #line 236
                                          mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 237
                                        endif 
                
                #line 238
                                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 241
                                        mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 242
                                      endif 
                                    endif 
                
                #line 296
                                    mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 297
                                    nop 
                                    mov r4.xyz, r4.xyzx
                
                #line 253
                                    ieq r5.x, cb0[12].y, cb0[12].z
                                    if_nz r5.x
                
                #line 255
                                      mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 256
                                    else 
                
                #line 257
                                      ieq r5.x, cb0[12].z, l(16)
                                      if_nz r5.x
                
                #line 259
                                        nop 
                                        mov r4.xyz, r4.xyzx
                
                #line 147
                                        mov r5.x, l(0.159302)  // r5.x <- ST2084_m1
                
                #line 148
                                        mov r5.y, l(78.843750)  // r5.y <- ST2084_m2
                
                #line 149
                                        mov r5.z, l(0.835938)  // r5.z <- ST2084_c1
                
                #line 150
                                        mov r5.w, l(18.851562)  // r5.w <- ST2084_c2
                
                #line 151
                                        mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 152
                                        itof r6.yzw, l(0, 10000, 10000, 10000)
                                        div r6.yzw, r4.xxyz, r6.yyzw
                                        log r6.yzw, r6.yyzw
                                        mul r6.yzw, r5.xxxx, r6.yyzw
                                        exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 153
                                        mul r7.xyz, r5.wwww, r6.yzwy
                                        add r5.xzw, r5.zzzz, r7.xxyz
                                        itof r7.xyz, l(1, 1, 1, 0)
                                        mul r6.xyz, r6.yzwy, r6.xxxx
                                        add r6.xyz, r6.xyzx, r7.xyzx
                                        div r5.xzw, r5.xxzw, r6.xxyz  // r5.x <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 154
                                        log r5.xzw, r5.xxzw
                                        mul r5.xyz, r5.xzwx, r5.yyyy
                                        exp r4.xyz, r5.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 155
                                        mov r4.xyz, r4.xyzx  // r4.x <- <LineTOST2084 return value>.x; r4.y <- <LineTOST2084 return value>.y; r4.z <- <LineTOST2084 return value>.z
                
                #line 259
                                        mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 260
                                      else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 261
                                        ieq r5.x, cb0[12].z, l(18)
                                        if_nz r5.x
                
                #line 263
                                          mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 264
                                        else 
                
                #line 265
                                          ieq r5.x, cb0[12].z, l(1)
                                          if_nz r5.x
                
                #line 267
                                            log r5.xyz, r4.xyzx
                                            mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                            exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 268
                                          else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 269
                                            ieq r5.x, cb0[12].z, l(4)
                                            if_nz r5.x
                
                #line 271
                                              log r5.xyz, r4.xyzx
                                              mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                              exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 272
                                            else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 275
                                              mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 276
                                            endif 
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                
                #line 297
                                    mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 298
                                    nop 
                                    mov r4.xyz, r4.xyzx
                
                #line 248
                                    mov r4.xyz, r4.xyzx  // r4.x <- <adjustRange return value>.x; r4.y <- <adjustRange return value>.y; r4.z <- <adjustRange return value>.z
                
                #line 298
                                    mov r4.xyz, r4.xyzx
                
                #line 299
                                    nop 
                                    mov r4.xyz, r4.xyzx
                
                #line 282
                                    mov r4.xyz, r4.xyzx  // r4.x <- <reorderPlanes return value>.x; r4.y <- <reorderPlanes return value>.y; r4.z <- <reorderPlanes return value>.z
                
                #line 299
                                    mov r4.xyz, r4.xyzx
                
                #line 300
                                  endif 
                
                #line 301
                                  mov r4.xyz, r4.xyzx  // r4.x <- <RenderFloat return value>.x; r4.y <- <RenderFloat return value>.y; r4.z <- <RenderFloat return value>.z
                
                #line 405
                                  mov r4.xyz, r4.xyzx  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z
                
                #line 406
                                  itof r4.w, l(1)  // r4.w <- rgbarsp.w
                
                #line 407
                                  mov r4.xyz, r4.xyzx  // r4.x <- <GetRGBA return value>.x; r4.y <- <GetRGBA return value>.y; r4.z <- <GetRGBA return value>.z
                                  mov r4.w, r4.w  // r4.w <- <GetRGBA return value>.w
                
                #line 408
                                else 
                
                #line 409
                                  ieq r5.x, cb0[12].x, l(10)
                                  if_nz r5.x
                
                #line 411
                                    nop 
                
                #line 315
                                    sample_indexable(texture2d)(float,float,float,float) r5.x, v1.xyxx, t0.xyzw, s0
                                    itof r5.y, l(64)
                                    mul r5.x, r5.y, r5.x  // r5.x <- y0
                
                #line 316
                                    sample_indexable(texture2d)(float,float,float,float) r6.x, v1.xyxx, t0.yxzw, s0
                                    itof r6.y, l(64)
                                    mul r5.y, r6.y, r6.x  // r5.y <- u0
                
                #line 317
                                    sample_indexable(texture2d)(float,float,float,float) r6.x, v1.xyxx, t0.wxyz, s0
                                    itof r6.y, l(64)
                                    mul r5.z, r6.y, r6.x  // r5.z <- v0
                
                #line 319
                                    itof r5.w, l(1)  // r5.w <- <PSPacked422_Reverse10 return value>.w
                                    mov r5.x, r5.x  // r5.x <- <PSPacked422_Reverse10 return value>.x
                                    mov r5.y, r5.y  // r5.y <- <PSPacked422_Reverse10 return value>.y
                                    mov r5.z, r5.z  // r5.z <- <PSPacked422_Reverse10 return value>.z
                
                #line 411
                                    mov r5.xyzw, r5.xyzw  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w
                
                #line 413
                                    dp4 r6.x, r5.xyzw, cb1[0].xyzw  // r6.x <- rr.x
                                    dp4 r6.y, r5.xyzw, cb1[1].xyzw  // r6.y <- rr.y
                                    dp4 r6.z, r5.xyzw, cb1[2].xyzw  // r6.z <- rr.z
                                    dp4 r6.w, r5.xyzw, cb1[3].xyzw  // r6.w <- rr.w
                
                #line 414
                                    dp4 r5.x, r6.xyzw, r0.xyzw
                                    dp4 r5.y, r6.xyzw, r1.xyzw
                                    dp4 r5.z, r6.xyzw, r2.xyzw
                                    dp4 r5.w, r6.xyzw, r3.xyzw
                                    itof r6.xyzw, l(0, 0, 0, 0)
                                    max r4.xyzw, r5.xyzw, r6.xyzw  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z; r4.w <- rgbarsp.w
                
                #line 415
                                    nop 
                                    mov r4.xyzw, r4.xyzw
                
                #line 288
                                    ieq r5.x, cb0[14].x, l(1)
                                    if_z r5.x
                
                #line 294
                                      nop 
                                      mov r5.xyzw, r4.xyzw
                
                #line 174
                                      ieq r6.x, cb0[12].z, cb0[12].y
                                      if_nz r6.x
                
                #line 176
                                        mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 177
                                      else 
                
                #line 178
                                        ieq r6.x, cb0[12].y, l(8)
                                        if_nz r6.x
                
                #line 180
                                          mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 181
                                        else 
                
                #line 182
                                          ieq r6.x, cb0[12].y, l(16)
                                          if_nz r6.x
                
                #line 184
                                            nop 
                                            mov r5.xyzw, r5.xyzw
                
                #line 102
                                            mov r6.x, l(0.835938)  // r6.x <- ST2084_c1
                
                #line 103
                                            mov r6.y, l(18.851562)  // r6.y <- ST2084_c2
                
                #line 104
                                            mov r6.z, l(18.687500)  // r6.z <- ST2084_c3
                
                #line 105
                                            itof r7.xyzw, l(0, 0, 0, 0)
                                            max r7.xyzw, r5.xyzw, r7.xyzw
                                            log r7.xyzw, r7.xyzw
                                            mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                            exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 106
                                            mov r8.xyzw, -r6.xxxx
                                            add r8.xyzw, r7.xyzw, r8.xyzw
                                            max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                            mul r7.xyzw, r6.zzzz, r7.xyzw
                                            mov r7.xyzw, -r7.xyzw
                                            add r6.xyzw, r6.yyyy, r7.xyzw
                                            div r6.xyzw, r8.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 107
                                            log r6.xyzw, r6.xyzw
                                            mul r6.xyzw, r6.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                            exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 108
                                            itof r7.xyzw, l(10000, 10000, 10000, 10000)
                                            mul r5.xyzw, r6.xyzw, r7.xyzw  // r5.x <- <ST2084TOLinear return value>.x; r5.y <- <ST2084TOLinear return value>.y; r5.z <- <ST2084TOLinear return value>.z; r5.w <- <ST2084TOLinear return value>.w
                
                #line 184
                                            mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 185
                                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 186
                                            ieq r6.x, cb0[12].y, l(18)
                                            if_nz r6.x
                
                #line 188
                                              nop 
                                              mov r5.xyzw, r5.xyzw
                
                #line 114
                                              itof r6.x, l(1000)  // r6.x <- alpha_gain
                
                #line 115
                                              nop 
                                              mov r5.x, r5.x
                
                #line 76
                                              mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                              mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                              mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                              mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                              ge r7.y, l(0.500000), r5.x
                                              if_nz r7.y
                
                #line 81
                                                mul r7.y, r5.x, r5.x
                                                mul r5.x, r7.x, r7.y
                                              else   // Prior locations: r5.x <- rgb.x; r5.x <- rgb.x
                
                #line 83
                                                mov r6.w, -r6.w
                                                add r6.w, r5.x, r6.w
                                                div r6.y, r6.w, r6.y
                                                mul r6.y, r6.y, l(1.442695)
                                                exp r6.y, r6.y
                                                add r5.x, r6.z, r6.y
                                              endif 
                
                #line 84
                                              mov r5.x, r5.x  // r5.x <- <inverse_HLG return value>
                
                #line 115
                                              mov r5.x, r5.x  // r5.x <- rgb.x
                
                #line 116
                                              nop 
                                              mov r5.y, r5.y
                
                #line 76
                                              mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                              mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                              mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                              mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                              ge r7.y, l(0.500000), r5.y
                                              if_nz r7.y
                
                #line 81
                                                mul r7.y, r5.y, r5.y
                                                mul r5.y, r7.x, r7.y
                                              else   // Prior locations: r5.y <- rgb.y; r5.y <- rgb.y
                
                #line 83
                                                mov r6.w, -r6.w
                                                add r6.w, r5.y, r6.w
                                                div r6.y, r6.w, r6.y
                                                mul r6.y, r6.y, l(1.442695)
                                                exp r6.y, r6.y
                                                add r5.y, r6.z, r6.y
                                              endif 
                
                #line 84
                                              mov r5.y, r5.y  // r5.y <- <inverse_HLG return value>
                
                #line 116
                                              mov r5.y, r5.y  // r5.y <- rgb.y
                
                #line 117
                                              nop 
                                              mov r5.z, r5.z
                
                #line 76
                                              mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                              mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                              mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                              mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                              ge r7.y, l(0.500000), r5.z
                                              if_nz r7.y
                
                #line 81
                                                mul r7.y, r5.z, r5.z
                                                mul r5.z, r7.x, r7.y
                                              else   // Prior locations: r5.z <- rgb.z; r5.z <- rgb.z
                
                #line 83
                                                mov r6.w, -r6.w
                                                add r6.w, r5.z, r6.w
                                                div r6.y, r6.w, r6.y
                                                mul r6.y, r6.y, l(1.442695)
                                                exp r6.y, r6.y
                                                add r5.z, r6.z, r6.y
                                              endif 
                
                #line 84
                                              mov r5.z, r5.z  // r5.z <- <inverse_HLG return value>
                
                #line 117
                                              mov r5.z, r5.z  // r5.z <- rgb.z
                
                #line 118
                                              mov r6.yzw, l(0,0.262700,0.678000,0.059300)  // r6.y <- ootf_2020.x; r6.z <- ootf_2020.y; r6.w <- ootf_2020.z
                
                #line 119
                                              dp3 r6.y, r6.yzwy, r5.xyzx
                                              mul r6.x, r6.y, r6.x  // r6.x <- ootf_ys
                
                #line 120
                                              log r6.x, r6.x
                                              mul r6.x, r6.x, l(0.200000)
                                              exp r6.x, r6.x
                                              mul r5.xyzw, r5.xyzw, r6.xxxx  // r5.x <- <HLGTOLinear return value>.x; r5.y <- <HLGTOLinear return value>.y; r5.z <- <HLGTOLinear return value>.z; r5.w <- <HLGTOLinear return value>.w
                
                #line 188
                                              mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 189
                                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 190
                                              ieq r6.x, cb0[12].y, l(1)
                                              if_nz r6.x
                
                #line 192
                                                nop 
                                                mov r5.xyzw, r5.xyzw
                
                #line 127
                                                log r6.xyzw, r5.xyzw
                                                mul r6.xyzw, r6.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                                exp r5.xyzw, r6.xyzw  // r5.x <- <BT709TOLinear return value>.x; r5.y <- <BT709TOLinear return value>.y; r5.z <- <BT709TOLinear return value>.z; r5.w <- <BT709TOLinear return value>.w
                
                #line 192
                                                mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 193
                                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 194
                                                ieq r6.x, cb0[12].y, l(4)
                                                if_nz r6.x
                
                #line 196
                                                  nop 
                                                  mov r5.xyzw, r5.xyzw
                
                #line 132
                                                  log r6.xyzw, r5.xyzw
                                                  mul r6.xyzw, r6.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                                  exp r5.xyzw, r6.xyzw  // r5.x <- <BT470M_SRGB_TOLinear return value>.x; r5.y <- <BT470M_SRGB_TOLinear return value>.y; r5.z <- <BT470M_SRGB_TOLinear return value>.z; r5.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 196
                                                  mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 197
                                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 198
                                                  ieq r6.x, cb0[12].y, l(5)
                                                  if_nz r6.x
                
                #line 200
                                                    nop 
                                                    mov r5.xyzw, r5.xyzw
                
                #line 136
                                                    log r6.xyzw, r5.xyzw
                                                    mul r6.xyzw, r6.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                                    exp r5.xyzw, r6.xyzw  // r5.x <- <BT470BGTOLinear return value>.x; r5.y <- <BT470BGTOLinear return value>.y; r5.z <- <BT470BGTOLinear return value>.z; r5.w <- <BT470BGTOLinear return value>.w
                
                #line 200
                                                    mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 201
                                                  else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 204
                                                    mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 205
                                                  endif 
                                                endif 
                                              endif 
                                            endif 
                                          endif 
                                        endif 
                                      endif 
                
                #line 294
                                      mov r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 295
                                      nop 
                                      mov r5.xyzw, r5.xyzw
                
                #line 212
                                      ine r6.x, cb0[12].w, cb0[13].x
                                      if_nz r6.x
                
                #line 214
                                        dp4 r6.x, r5.xyzw, cb1[8].xyzw
                                        dp4 r6.y, r5.xyzw, cb1[9].xyzw
                                        dp4 r6.z, r5.xyzw, cb1[10].xyzw
                                        itof r7.xyz, l(0, 0, 0, 0)
                                        max r5.xyz, r6.xyzx, r7.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 215
                                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 218
                                        mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 219
                                      endif 
                
                #line 295
                                      mov r5.xyz, r5.xyzx
                
                #line 296
                                      nop 
                                      mov r5.xyz, r5.xyzx
                
                #line 224
                                      ieq r5.w, cb0[12].y, cb0[12].z
                                      if_nz r5.w
                
                #line 226
                                        mov r4.xyz, r5.xyzx
                
                #line 227
                                      endif   // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 228
                                      if_z r5.w
                                        ieq r5.w, cb0[12].z, l(1)
                                        ieq r6.x, cb0[12].z, l(4)
                                        or r5.w, r5.w, r6.x
                                        if_nz r5.w
                
                #line 230
                                          ieq r5.w, cb0[12].y, l(16)
                                          ieq r6.x, cb0[12].y, l(18)
                                          or r5.w, r5.w, r6.x
                                          if_nz r5.w
                
                #line 232
                                            nop 
                                            mov r5.xyz, r5.xyzx
                
                #line 166
                                            mov r6.xyz, l(11.200000,11.200000,11.200000,0)  // r6.x <- tmp.x; r6.y <- tmp.y; r6.z <- tmp.z
                
                #line 167
                                            nop 
                                            mov r6.xyz, r6.xyzx
                
                #line 160
                                            mov r5.w, l(0.150000)  // r5.w <- A
                                            mov r6.w, l(0.500000)  // r6.w <- B
                
                #line 161
                                            mul r7.xyz, r6.xyzx, r5.wwww
                                            add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                            mul r7.xyz, r6.xyzx, r7.xyzx
                                            add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                            mul r8.xyz, r6.xyzx, r5.wwww
                                            add r8.xyz, r6.wwww, r8.xyzx
                                            mul r6.xyz, r6.xyzx, r8.xyzx
                                            add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                            div r6.xyz, r7.xyzx, r6.xyzx
                                            mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                            add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 167
                                            mov r6.xyz, r6.xyzx  // r6.x <- HABLE_DIV.x; r6.y <- HABLE_DIV.y; r6.z <- HABLE_DIV.z
                
                #line 168
                                            nop 
                                            mul r7.xyz, r5.xyzx, cb0[13].wwww
                
                #line 160
                                            mov r5.w, l(0.150000)
                                            mov r6.w, l(0.500000)
                
                #line 161
                                            mul r8.xyz, r7.xyzx, r5.wwww
                                            add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                            mul r8.xyz, r7.xyzx, r8.xyzx
                                            add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                            mul r9.xyz, r7.xyzx, r5.wwww
                                            add r9.xyz, r6.wwww, r9.xyzx
                                            mul r7.xyz, r7.xyzx, r9.xyzx
                                            add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                            div r7.xyz, r8.xyzx, r7.xyzx
                                            mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                            add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 168
                                            div r4.xyz, r7.xyzx, r6.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 169
                                            mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 232
                                            mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 233
                                          else 
                
                #line 236
                                            mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 237
                                          endif 
                
                #line 238
                                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 241
                                          mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 242
                                        endif 
                                      endif 
                
                #line 296
                                      mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 297
                                      nop 
                                      mov r4.xyz, r4.xyzx
                
                #line 253
                                      ieq r5.x, cb0[12].y, cb0[12].z
                                      if_nz r5.x
                
                #line 255
                                        mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 256
                                      else 
                
                #line 257
                                        ieq r5.x, cb0[12].z, l(16)
                                        if_nz r5.x
                
                #line 259
                                          nop 
                                          mov r4.xyz, r4.xyzx
                
                #line 147
                                          mov r5.x, l(0.159302)  // r5.x <- ST2084_m1
                
                #line 148
                                          mov r5.y, l(78.843750)  // r5.y <- ST2084_m2
                
                #line 149
                                          mov r5.z, l(0.835938)  // r5.z <- ST2084_c1
                
                #line 150
                                          mov r5.w, l(18.851562)  // r5.w <- ST2084_c2
                
                #line 151
                                          mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 152
                                          itof r6.yzw, l(0, 10000, 10000, 10000)
                                          div r6.yzw, r4.xxyz, r6.yyzw
                                          log r6.yzw, r6.yyzw
                                          mul r6.yzw, r5.xxxx, r6.yyzw
                                          exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 153
                                          mul r7.xyz, r5.wwww, r6.yzwy
                                          add r5.xzw, r5.zzzz, r7.xxyz
                                          itof r7.xyz, l(1, 1, 1, 0)
                                          mul r6.xyz, r6.yzwy, r6.xxxx
                                          add r6.xyz, r6.xyzx, r7.xyzx
                                          div r5.xzw, r5.xxzw, r6.xxyz  // r5.x <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 154
                                          log r5.xzw, r5.xxzw
                                          mul r5.xyz, r5.xzwx, r5.yyyy
                                          exp r4.xyz, r5.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 155
                                          mov r4.xyz, r4.xyzx  // r4.x <- <LineTOST2084 return value>.x; r4.y <- <LineTOST2084 return value>.y; r4.z <- <LineTOST2084 return value>.z
                
                #line 259
                                          mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 260
                                        else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 261
                                          ieq r5.x, cb0[12].z, l(18)
                                          if_nz r5.x
                
                #line 263
                                            mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 264
                                          else 
                
                #line 265
                                            ieq r5.x, cb0[12].z, l(1)
                                            if_nz r5.x
                
                #line 267
                                              log r5.xyz, r4.xyzx
                                              mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                              exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 268
                                            else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 269
                                              ieq r5.x, cb0[12].z, l(4)
                                              if_nz r5.x
                
                #line 271
                                                log r5.xyz, r4.xyzx
                                                mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                                exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 272
                                              else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 275
                                                mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 276
                                              endif 
                                            endif 
                                          endif 
                                        endif 
                                      endif 
                
                #line 297
                                      mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 298
                                      nop 
                                      mov r4.xyz, r4.xyzx
                
                #line 248
                                      mov r4.xyz, r4.xyzx  // r4.x <- <adjustRange return value>.x; r4.y <- <adjustRange return value>.y; r4.z <- <adjustRange return value>.z
                
                #line 298
                                      mov r4.xyz, r4.xyzx
                
                #line 299
                                      nop 
                                      mov r4.xyz, r4.xyzx
                
                #line 282
                                      mov r4.xyz, r4.xyzx  // r4.x <- <reorderPlanes return value>.x; r4.y <- <reorderPlanes return value>.y; r4.z <- <reorderPlanes return value>.z
                
                #line 299
                                      mov r4.xyz, r4.xyzx
                
                #line 300
                                    endif 
                
                #line 301
                                    mov r4.xyz, r4.xyzx  // r4.x <- <RenderFloat return value>.x; r4.y <- <RenderFloat return value>.y; r4.z <- <RenderFloat return value>.z
                
                #line 415
                                    mov r4.xyz, r4.xyzx  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z
                
                #line 416
                                    itof r4.w, l(1)  // r4.w <- rgbarsp.w
                
                #line 417
                                    mov r4.xyz, r4.xyzx  // r4.x <- <GetRGBA return value>.x; r4.y <- <GetRGBA return value>.y; r4.z <- <GetRGBA return value>.z
                                    mov r4.w, r4.w  // r4.w <- <GetRGBA return value>.w
                
                #line 418
                                  else 
                
                #line 419
                                    ieq r5.x, cb0[12].x, l(11)
                                    if_nz r5.x
                
                #line 421
                                      sample_indexable(texture2d)(float,float,float,float) r5.xyz, v1.xyxx, t0.xyzw, s0
                                      itof r6.xyz, l(64, 64, 64, 0)
                                      mul r4.xyz, r5.xyzx, r6.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 422
                                      itof r4.w, l(0)  // r4.w <- rgba.w
                
                #line 423
                                      nop 
                                      mov r4.xyz, r4.xyzx
                                      mov r4.w, r4.w
                
                #line 288
                                      ieq r5.x, cb0[14].x, l(1)
                                      if_z r5.x
                
                #line 294
                                        nop 
                                        mov r5.xyzw, r4.xyzw
                
                #line 174
                                        ieq r6.x, cb0[12].z, cb0[12].y
                                        if_nz r6.x
                
                #line 176
                                          mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 177
                                        else 
                
                #line 178
                                          ieq r6.x, cb0[12].y, l(8)
                                          if_nz r6.x
                
                #line 180
                                            mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 181
                                          else 
                
                #line 182
                                            ieq r6.x, cb0[12].y, l(16)
                                            if_nz r6.x
                
                #line 184
                                              nop 
                                              mov r5.xyzw, r5.xyzw
                
                #line 102
                                              mov r6.x, l(0.835938)  // r6.x <- ST2084_c1
                
                #line 103
                                              mov r6.y, l(18.851562)  // r6.y <- ST2084_c2
                
                #line 104
                                              mov r6.z, l(18.687500)  // r6.z <- ST2084_c3
                
                #line 105
                                              itof r7.xyzw, l(0, 0, 0, 0)
                                              max r7.xyzw, r5.xyzw, r7.xyzw
                                              log r7.xyzw, r7.xyzw
                                              mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                              exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 106
                                              mov r8.xyzw, -r6.xxxx
                                              add r8.xyzw, r7.xyzw, r8.xyzw
                                              max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                              mul r7.xyzw, r6.zzzz, r7.xyzw
                                              mov r7.xyzw, -r7.xyzw
                                              add r6.xyzw, r6.yyyy, r7.xyzw
                                              div r6.xyzw, r8.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 107
                                              log r6.xyzw, r6.xyzw
                                              mul r6.xyzw, r6.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                              exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 108
                                              itof r7.xyzw, l(10000, 10000, 10000, 10000)
                                              mul r5.xyzw, r6.xyzw, r7.xyzw  // r5.x <- <ST2084TOLinear return value>.x; r5.y <- <ST2084TOLinear return value>.y; r5.z <- <ST2084TOLinear return value>.z; r5.w <- <ST2084TOLinear return value>.w
                
                #line 184
                                              mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 185
                                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 186
                                              ieq r6.x, cb0[12].y, l(18)
                                              if_nz r6.x
                
                #line 188
                                                nop 
                                                mov r5.xyzw, r5.xyzw
                
                #line 114
                                                itof r6.x, l(1000)  // r6.x <- alpha_gain
                
                #line 115
                                                nop 
                                                mov r5.x, r5.x
                
                #line 76
                                                mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                                mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                                mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                                mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 80
                                                ge r7.y, l(0.500000), r5.x
                                                if_nz r7.y
                
                #line 81
                                                  mul r7.y, r5.x, r5.x
                                                  mul r7.x, r7.x, r7.y  // r7.x <- x
                                                else   // Prior locations: r5.x <- x; r7.x <- B67_inv_r2
                
                #line 83
                                                  mov r6.w, -r6.w
                                                  add r6.w, r5.x, r6.w
                                                  div r6.y, r6.w, r6.y
                                                  mul r6.y, r6.y, l(1.442695)
                                                  exp r6.y, r6.y
                                                  add r7.x, r6.z, r6.y  // r7.x <- x
                                                endif 
                
                #line 84
                                                mov r7.x, r7.x  // r7.x <- <inverse_HLG return value>
                
                #line 115
                                                mov r7.x, r7.x  // r7.x <- rgb.x
                
                #line 116
                                                nop 
                                                mov r5.y, r5.y
                
                #line 76
                                                mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                                mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                                mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                                mov r7.w, l(4.000000)  // r7.w <- B67_inv_r2
                
                #line 80
                                                ge r8.x, l(0.500000), r5.y
                                                if_nz r8.x
                
                #line 81
                                                  mul r8.x, r5.y, r5.y
                                                  mul r7.y, r7.w, r8.x  // r7.y <- x
                                                else   // Prior locations: r5.y <- x
                
                #line 83
                                                  mov r6.w, -r6.w
                                                  add r6.w, r5.y, r6.w
                                                  div r6.y, r6.w, r6.y
                                                  mul r6.y, r6.y, l(1.442695)
                                                  exp r6.y, r6.y
                                                  add r7.y, r6.z, r6.y  // r7.y <- x
                                                endif 
                
                #line 84
                                                mov r7.y, r7.y  // r7.y <- <inverse_HLG return value>
                
                #line 116
                                                mov r7.y, r7.y  // r7.y <- rgb.y
                
                #line 117
                                                nop 
                                                mov r5.z, r5.z
                
                #line 76
                                                mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 77
                                                mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 78
                                                mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 79
                                                mov r7.w, l(4.000000)  // r7.w <- B67_inv_r2
                
                #line 80
                                                ge r8.x, l(0.500000), r5.z
                                                if_nz r8.x
                
                #line 81
                                                  mul r8.x, r5.z, r5.z
                                                  mul r7.z, r7.w, r8.x  // r7.z <- x
                                                else   // Prior locations: r5.z <- x
                
                #line 83
                                                  mov r6.w, -r6.w
                                                  add r6.w, r5.z, r6.w
                                                  div r6.y, r6.w, r6.y
                                                  mul r6.y, r6.y, l(1.442695)
                                                  exp r6.y, r6.y
                                                  add r7.z, r6.z, r6.y  // r7.z <- x
                                                endif 
                
                #line 84
                                                mov r7.z, r7.z  // r7.z <- <inverse_HLG return value>
                
                #line 117
                                                mov r7.z, r7.z  // r7.z <- rgb.z
                
                #line 118
                                                mov r6.yzw, l(0,0.262700,0.678000,0.059300)  // r6.y <- ootf_2020.x; r6.z <- ootf_2020.y; r6.w <- ootf_2020.z
                
                #line 119
                                                dp3 r6.y, r6.yzwy, r7.xyzx
                                                mul r6.x, r6.y, r6.x  // r6.x <- ootf_ys
                
                #line 120
                                                log r6.x, r6.x
                                                mul r6.x, r6.x, l(0.200000)
                                                exp r6.x, r6.x
                                                mul r5.xyz, r6.xxxx, r7.xyzx  // r5.x <- <HLGTOLinear return value>.x; r5.y <- <HLGTOLinear return value>.y; r5.z <- <HLGTOLinear return value>.z
                                                mul r5.w, r5.w, r6.x  // r5.w <- <HLGTOLinear return value>.w
                
                #line 188
                                                mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 189
                                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 190
                                                ieq r6.x, cb0[12].y, l(1)
                                                if_nz r6.x
                
                #line 192
                                                  nop 
                                                  mov r5.xyzw, r5.xyzw
                
                #line 127
                                                  log r6.xyzw, r5.xyzw
                                                  mul r6.xyzw, r6.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                                  exp r5.xyzw, r6.xyzw  // r5.x <- <BT709TOLinear return value>.x; r5.y <- <BT709TOLinear return value>.y; r5.z <- <BT709TOLinear return value>.z; r5.w <- <BT709TOLinear return value>.w
                
                #line 192
                                                  mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 193
                                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 194
                                                  ieq r6.x, cb0[12].y, l(4)
                                                  if_nz r6.x
                
                #line 196
                                                    nop 
                                                    mov r5.xyzw, r5.xyzw
                
                #line 132
                                                    log r6.xyzw, r5.xyzw
                                                    mul r6.xyzw, r6.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                                    exp r5.xyzw, r6.xyzw  // r5.x <- <BT470M_SRGB_TOLinear return value>.x; r5.y <- <BT470M_SRGB_TOLinear return value>.y; r5.z <- <BT470M_SRGB_TOLinear return value>.z; r5.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 196
                                                    mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 197
                                                  else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 198
                                                    ieq r6.x, cb0[12].y, l(5)
                                                    if_nz r6.x
                
                #line 200
                                                      nop 
                                                      mov r5.xyzw, r5.xyzw
                
                #line 136
                                                      log r6.xyzw, r5.xyzw
                                                      mul r6.xyzw, r6.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                                      exp r5.xyzw, r6.xyzw  // r5.x <- <BT470BGTOLinear return value>.x; r5.y <- <BT470BGTOLinear return value>.y; r5.z <- <BT470BGTOLinear return value>.z; r5.w <- <BT470BGTOLinear return value>.w
                
                #line 200
                                                      mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 201
                                                    else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 204
                                                      mov r5.xyzw, r5.xyzw  // r5.x <- <sourceToLinear return value>.x; r5.y <- <sourceToLinear return value>.y; r5.z <- <sourceToLinear return value>.z; r5.w <- <sourceToLinear return value>.w
                
                #line 205
                                                    endif 
                                                  endif 
                                                endif 
                                              endif 
                                            endif 
                                          endif 
                                        endif 
                
                #line 294
                                        mov r5.xyzw, r5.xyzw  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.w <- rgb.w
                
                #line 295
                                        nop 
                                        mov r5.xyzw, r5.xyzw
                
                #line 212
                                        ine r6.x, cb0[12].w, cb0[13].x
                                        if_nz r6.x
                
                #line 214
                                          dp4 r6.x, r5.xyzw, cb1[8].xyzw
                                          dp4 r6.y, r5.xyzw, cb1[9].xyzw
                                          dp4 r6.z, r5.xyzw, cb1[10].xyzw
                                          itof r7.xyz, l(0, 0, 0, 0)
                                          max r5.xyz, r6.xyzx, r7.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 215
                                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 218
                                          mov r5.xyz, r5.xyzx  // r5.x <- <transformPrimaries return value>.x; r5.y <- <transformPrimaries return value>.y; r5.z <- <transformPrimaries return value>.z
                
                #line 219
                                        endif 
                
                #line 295
                                        mov r5.xyz, r5.xyzx
                
                #line 296
                                        nop 
                                        mov r5.xyz, r5.xyzx
                
                #line 224
                                        ieq r5.w, cb0[12].y, cb0[12].z
                                        if_nz r5.w
                
                #line 226
                                          mov r4.xyz, r5.xyzx
                
                #line 227
                                        endif   // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 228
                                        if_z r5.w
                                          ieq r5.w, cb0[12].z, l(1)
                                          ieq r6.x, cb0[12].z, l(4)
                                          or r5.w, r5.w, r6.x
                                          if_nz r5.w
                
                #line 230
                                            ieq r5.w, cb0[12].y, l(16)
                                            ieq r6.x, cb0[12].y, l(18)
                                            or r5.w, r5.w, r6.x
                                            if_nz r5.w
                
                #line 232
                                              nop 
                                              mov r5.xyz, r5.xyzx
                
                #line 166
                                              mov r6.xyz, l(11.200000,11.200000,11.200000,0)  // r6.x <- tmp.x; r6.y <- tmp.y; r6.z <- tmp.z
                
                #line 167
                                              nop 
                                              mov r6.xyz, r6.xyzx
                
                #line 160
                                              mov r5.w, l(0.150000)  // r5.w <- A
                                              mov r6.w, l(0.500000)  // r6.w <- B
                
                #line 161
                                              mul r7.xyz, r6.xyzx, r5.wwww
                                              add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                              mul r7.xyz, r6.xyzx, r7.xyzx
                                              add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                              mul r8.xyz, r6.xyzx, r5.wwww
                                              add r8.xyz, r6.wwww, r8.xyzx
                                              mul r6.xyz, r6.xyzx, r8.xyzx
                                              add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                              div r6.xyz, r7.xyzx, r6.xyzx
                                              mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                              add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 167
                                              mov r6.xyz, r6.xyzx  // r6.x <- HABLE_DIV.x; r6.y <- HABLE_DIV.y; r6.z <- HABLE_DIV.z
                
                #line 168
                                              nop 
                                              mul r7.xyz, r5.xyzx, cb0[13].wwww
                
                #line 160
                                              mov r5.w, l(0.150000)
                                              mov r6.w, l(0.500000)
                
                #line 161
                                              mul r8.xyz, r7.xyzx, r5.wwww
                                              add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                              mul r8.xyz, r7.xyzx, r8.xyzx
                                              add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                              mul r9.xyz, r7.xyzx, r5.wwww
                                              add r9.xyz, r6.wwww, r9.xyzx
                                              mul r7.xyz, r7.xyzx, r9.xyzx
                                              add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                              div r7.xyz, r8.xyzx, r7.xyzx
                                              mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                              add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 168
                                              div r4.xyz, r7.xyzx, r6.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 169
                                              mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 232
                                              mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 233
                                            else 
                
                #line 236
                                              mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 237
                                            endif 
                
                #line 238
                                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 241
                                            mul r4.xyz, r5.xyzx, cb0[13].wwww
                
                #line 242
                                          endif 
                                        endif 
                
                #line 296
                                        mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 297
                                        nop 
                                        mov r4.xyz, r4.xyzx
                
                #line 253
                                        ieq r5.x, cb0[12].y, cb0[12].z
                                        if_nz r5.x
                
                #line 255
                                          mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 256
                                        else 
                
                #line 257
                                          ieq r5.x, cb0[12].z, l(16)
                                          if_nz r5.x
                
                #line 259
                                            nop 
                                            mov r4.xyz, r4.xyzx
                
                #line 147
                                            mov r5.x, l(0.159302)  // r5.x <- ST2084_m1
                
                #line 148
                                            mov r5.y, l(78.843750)  // r5.y <- ST2084_m2
                
                #line 149
                                            mov r5.z, l(0.835938)  // r5.z <- ST2084_c1
                
                #line 150
                                            mov r5.w, l(18.851562)  // r5.w <- ST2084_c2
                
                #line 151
                                            mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 152
                                            itof r6.yzw, l(0, 10000, 10000, 10000)
                                            div r6.yzw, r4.xxyz, r6.yyzw
                                            log r6.yzw, r6.yyzw
                                            mul r6.yzw, r5.xxxx, r6.yyzw
                                            exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 153
                                            mul r7.xyz, r5.wwww, r6.yzwy
                                            add r5.xzw, r5.zzzz, r7.xxyz
                                            itof r7.xyz, l(1, 1, 1, 0)
                                            mul r6.xyz, r6.yzwy, r6.xxxx
                                            add r6.xyz, r6.xyzx, r7.xyzx
                                            div r5.xzw, r5.xxzw, r6.xxyz  // r5.x <- rgb.x; r5.z <- rgb.y; r5.w <- rgb.z
                
                #line 154
                                            log r5.xzw, r5.xxzw
                                            mul r5.xyz, r5.xzwx, r5.yyyy
                                            exp r4.xyz, r5.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 155
                                            mov r4.xyz, r4.xyzx  // r4.x <- <LineTOST2084 return value>.x; r4.y <- <LineTOST2084 return value>.y; r4.z <- <LineTOST2084 return value>.z
                
                #line 259
                                            mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 260
                                          else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 261
                                            ieq r5.x, cb0[12].z, l(18)
                                            if_nz r5.x
                
                #line 263
                                              mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 264
                                            else 
                
                #line 265
                                              ieq r5.x, cb0[12].z, l(1)
                                              if_nz r5.x
                
                #line 267
                                                log r5.xyz, r4.xyzx
                                                mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                                exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 268
                                              else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 269
                                                ieq r5.x, cb0[12].z, l(4)
                                                if_nz r5.x
                
                #line 271
                                                  log r5.xyz, r4.xyzx
                                                  mul r5.xyz, r5.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                                  exp r4.xyz, r5.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 272
                                                else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 275
                                                  mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 276
                                                endif 
                                              endif 
                                            endif 
                                          endif 
                                        endif 
                
                #line 297
                                        mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 298
                                        nop 
                                        mov r4.xyz, r4.xyzx
                
                #line 248
                                        mov r4.xyz, r4.xyzx  // r4.x <- <adjustRange return value>.x; r4.y <- <adjustRange return value>.y; r4.z <- <adjustRange return value>.z
                
                #line 298
                                        mov r4.xyz, r4.xyzx
                
                #line 299
                                        nop 
                                        mov r4.xyz, r4.xyzx
                
                #line 282
                                        mov r4.xyz, r4.xyzx  // r4.x <- <reorderPlanes return value>.x; r4.y <- <reorderPlanes return value>.y; r4.z <- <reorderPlanes return value>.z
                
                #line 299
                                        mov r4.xyz, r4.xyzx
                
                #line 300
                                      endif 
                
                #line 301
                                      mov r4.xyz, r4.xyzx  // r4.x <- <RenderFloat return value>.x; r4.y <- <RenderFloat return value>.y; r4.z <- <RenderFloat return value>.z
                
                #line 423
                                      mov r4.xyz, r4.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 424
                                      itof r4.w, l(1)  // r4.w <- rgba.w
                
                #line 425
                                      mov r4.xyz, r4.xyzx  // r4.x <- <GetRGBA return value>.x; r4.y <- <GetRGBA return value>.y; r4.z <- <GetRGBA return value>.z
                                      mov r4.w, r4.w  // r4.w <- <GetRGBA return value>.w
                
                #line 426
                                    else 
                
                #line 427
                                      ieq r5.x, cb0[12].x, l(12)
                                      if_nz r5.x
                
                #line 429
                                        nop 
                
                #line 323
                                        sample_indexable(texture2d)(float,float,float,float) r5.x, v1.xyxx, t0.xyzw, s0
                                        itof r5.y, l(64)
                                        mul r5.x, r5.y, r5.x  // r5.x <- y0
                
                #line 324
                                        sample_indexable(texture2d)(float,float,float,float) r6.x, v1.xyxx, t1.xyzw, s0
                                        itof r6.y, l(64)
                                        mul r5.y, r6.y, r6.x  // r5.y <- u0
                
                #line 325
                                        sample_indexable(texture2d)(float,float,float,float) r6.x, v1.xyxx, t1.yxzw, s0
                                        itof r6.y, l(64)
                                        mul r5.z, r6.y, r6.x  // r5.z <- v0
                
                #line 326
                                        itof r5.w, l(1)  // r5.w <- <PSPackedNV1210_Reverse10 return value>.w
                                        mov r5.x, r5.x  // r5.x <- <PSPackedNV1210_Reverse10 return value>.x
                                        mov r5.y, r5.y  // r5.y <- <PSPackedNV1210_Reverse10 return value>.y
                                        mov r5.z, r5.z  // r5.z <- <PSPackedNV1210_Reverse10 return value>.z
                
                #line 429
                                        mov r5.xyzw, r5.xyzw  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w
                
                #line 431
                                        dp4 r6.x, r5.xyzw, cb1[0].xyzw  // r6.x <- rr.x
                                        dp4 r6.y, r5.xyzw, cb1[1].xyzw  // v0.x <- input.Pos.x; v0.y <- input.Pos.y; v0.z <- input.Pos.z; v0.w <- input.Pos.w; v1.x <- input.TexCoord.x; v1.y <- input.TexCoord.y; o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w; r6.y <- rr.y
                                        dp4 r6.z, r5.xyzw, cb1[2].xyzw  // r0.x <- yuv2rgbmatrix._m00; r0.y <- yuv2rgbmatrix._m10; r0.z <- yuv2rgbmatrix._m20; r0.w <- yuv2rgbmatrix._m30; r1.x <- yuv2rgbmatrix._m01; r1.y <- yuv2rgbmatrix._m11; r1.z <- yuv2rgbmatrix._m21; r1.w <- yuv2rgbmatrix._m31; r6.z <- rr.z
                                        dp4 r6.w, r5.xyzw, cb1[3].xyzw  // r2.x <- yuv2rgbmatrix._m02; r2.y <- yuv2rgbmatrix._m12; r2.z <- yuv2rgbmatrix._m22; r2.w <- yuv2rgbmatrix._m32; r6.w <- rr.w
                
                #line 432
                                        dp4 r0.x, r6.xyzw, r0.xyzw  // r3.x <- yuv2rgbmatrix._m03; r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33
                                        dp4 r0.y, r6.xyzw, r1.xyzw
                                        dp4 r0.z, r6.xyzw, r2.xyzw
                                        dp4 r0.w, r6.xyzw, r3.xyzw
                                        itof r1.xyzw, l(0, 0, 0, 0)
                                        max r4.xyzw, r0.xyzw, r1.xyzw  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z; r4.w <- rgbarsp.w
                
                #line 433
                                        nop 
                                        mov r4.xyzw, r4.xyzw
                
                #line 288
                                        ieq r0.x, cb0[14].x, l(1)
                                        if_z r0.x
                
                #line 294
                                          nop 
                                          mov r0.xyzw, r4.xyzw
                
                #line 174
                                          ieq r1.x, cb0[12].z, cb0[12].y
                                          if_nz r1.x
                
                #line 176
                                            mov r0.xyzw, r0.xyzw  // r0.x <- <sourceToLinear return value>.x; r0.y <- <sourceToLinear return value>.y; r0.z <- <sourceToLinear return value>.z; r0.w <- <sourceToLinear return value>.w
                
                #line 177
                                          else 
                
                #line 178
                                            ieq r1.x, cb0[12].y, l(8)
                                            if_nz r1.x
                
                #line 180
                                              mov r0.xyzw, r0.xyzw  // r0.x <- <sourceToLinear return value>.x; r0.y <- <sourceToLinear return value>.y; r0.z <- <sourceToLinear return value>.z; r0.w <- <sourceToLinear return value>.w
                
                #line 181
                                            else 
                
                #line 182
                                              ieq r1.x, cb0[12].y, l(16)
                                              if_nz r1.x
                
                #line 184
                                                nop 
                                                mov r0.xyzw, r0.xyzw
                
                #line 102
                                                mov r1.x, l(0.835938)  // r1.x <- ST2084_c1
                
                #line 103
                                                mov r1.y, l(18.851562)  // r1.y <- ST2084_c2
                
                #line 104
                                                mov r1.z, l(18.687500)  // r1.z <- ST2084_c3
                
                #line 105
                                                itof r2.xyzw, l(0, 0, 0, 0)
                                                max r2.xyzw, r0.xyzw, r2.xyzw
                                                log r2.xyzw, r2.xyzw
                                                mul r2.xyzw, r2.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                                exp r2.xyzw, r2.xyzw  // r2.x <- rgb.x; r2.y <- rgb.y; r2.z <- rgb.z; r2.w <- rgb.w
                
                #line 106
                                                mov r3.xyzw, -r1.xxxx
                                                add r3.xyzw, r2.xyzw, r3.xyzw
                                                max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                                mul r2.xyzw, r1.zzzz, r2.xyzw
                                                mov r2.xyzw, -r2.xyzw
                                                add r1.xyzw, r1.yyyy, r2.xyzw
                                                div r1.xyzw, r3.xyzw, r1.xyzw  // r1.x <- rgb.x; r1.y <- rgb.y; r1.z <- rgb.z; r1.w <- rgb.w
                
                #line 107
                                                log r1.xyzw, r1.xyzw
                                                mul r1.xyzw, r1.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                                exp r1.xyzw, r1.xyzw  // r1.x <- rgb.x; r1.y <- rgb.y; r1.z <- rgb.z; r1.w <- rgb.w
                
                #line 108
                                                itof r2.xyzw, l(10000, 10000, 10000, 10000)
                                                mul r0.xyzw, r1.xyzw, r2.xyzw  // r0.x <- <ST2084TOLinear return value>.x; r0.y <- <ST2084TOLinear return value>.y; r0.z <- <ST2084TOLinear return value>.z; r0.w <- <ST2084TOLinear return value>.w
                
                #line 184
                                                mov r0.xyzw, r0.xyzw  // r0.x <- <sourceToLinear return value>.x; r0.y <- <sourceToLinear return value>.y; r0.z <- <sourceToLinear return value>.z; r0.w <- <sourceToLinear return value>.w
                
                #line 185
                                              else   // Prior locations: r2.x <- yuv2rgbmatrix._m02; r2.y <- yuv2rgbmatrix._m12; r2.z <- yuv2rgbmatrix._m22; r2.w <- yuv2rgbmatrix._m32; r3.x <- yuv2rgbmatrix._m03; r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.w <- rgb.w
                
                #line 186
                                                ieq r1.x, cb0[12].y, l(18)
                                                if_nz r1.x
                
                #line 188
                                                  nop 
                                                  mov r0.xyzw, r0.xyzw
                
                #line 114
                                                  itof r1.x, l(1000)  // r1.x <- alpha_gain
                
                #line 115
                                                  nop 
                                                  mov r0.x, r0.x
                
                #line 76
                                                  mov r1.y, l(0.178833)  // r1.y <- B67_a
                
                #line 77
                                                  mov r1.z, l(0.284669)  // r1.z <- B67_b
                
                #line 78
                                                  mov r1.w, l(0.559911)  // r1.w <- B67_c
                
                #line 79
                                                  mov r2.x, l(4.000000)  // r2.x <- B67_inv_r2
                
                #line 80
                                                  ge r2.y, l(0.500000), r0.x
                                                  if_nz r2.y
                
                #line 81
                                                    mul r2.y, r0.x, r0.x
                                                    mul r0.x, r2.x, r2.y
                                                  else   // Prior locations: r0.x <- rgb.x; r0.x <- rgb.x
                
                #line 83
                                                    mov r1.w, -r1.w
                                                    add r1.w, r0.x, r1.w
                                                    div r1.y, r1.w, r1.y
                                                    mul r1.y, r1.y, l(1.442695)
                                                    exp r1.y, r1.y
                                                    add r0.x, r1.z, r1.y
                                                  endif 
                
                #line 84
                                                  mov r0.x, r0.x  // r0.x <- <inverse_HLG return value>
                
                #line 115
                                                  mov r0.x, r0.x  // r0.x <- rgb.x
                
                #line 116
                                                  nop 
                                                  mov r0.y, r0.y
                
                #line 76
                                                  mov r1.y, l(0.178833)  // r1.y <- B67_a
                
                #line 77
                                                  mov r1.z, l(0.284669)  // r1.z <- B67_b
                
                #line 78
                                                  mov r1.w, l(0.559911)  // r1.w <- B67_c
                
                #line 79
                                                  mov r2.x, l(4.000000)  // r2.x <- B67_inv_r2
                
                #line 80
                                                  ge r2.y, l(0.500000), r0.y
                                                  if_nz r2.y
                
                #line 81
                                                    mul r2.y, r0.y, r0.y
                                                    mul r0.y, r2.x, r2.y
                                                  else   // Prior locations: r0.y <- rgb.y; r0.y <- rgb.y
                
                #line 83
                                                    mov r1.w, -r1.w
                                                    add r1.w, r0.y, r1.w
                                                    div r1.y, r1.w, r1.y
                                                    mul r1.y, r1.y, l(1.442695)
                                                    exp r1.y, r1.y
                                                    add r0.y, r1.z, r1.y
                                                  endif 
                
                #line 84
                                                  mov r0.y, r0.y  // r0.y <- <inverse_HLG return value>
                
                #line 116
                                                  mov r0.y, r0.y  // r0.y <- rgb.y
                
                #line 117
                                                  nop 
                                                  mov r0.z, r0.z
                
                #line 76
                                                  mov r1.y, l(0.178833)  // r1.y <- B67_a
                
                #line 77
                                                  mov r1.z, l(0.284669)  // r1.z <- B67_b
                
                #line 78
                                                  mov r1.w, l(0.559911)  // r1.w <- B67_c
                
                #line 79
                                                  mov r2.x, l(4.000000)  // r2.x <- B67_inv_r2
                
                #line 80
                                                  ge r2.y, l(0.500000), r0.z
                                                  if_nz r2.y
                
                #line 81
                                                    mul r2.y, r0.z, r0.z
                                                    mul r0.z, r2.x, r2.y
                                                  else   // Prior locations: r0.z <- rgb.z; r0.z <- rgb.z
                
                #line 83
                                                    mov r1.w, -r1.w
                                                    add r1.w, r0.z, r1.w
                                                    div r1.y, r1.w, r1.y
                                                    mul r1.y, r1.y, l(1.442695)
                                                    exp r1.y, r1.y
                                                    add r0.z, r1.z, r1.y
                                                  endif 
                
                #line 84
                                                  mov r0.z, r0.z  // r0.z <- <inverse_HLG return value>
                
                #line 117
                                                  mov r0.z, r0.z  // r0.z <- rgb.z
                
                #line 118
                                                  mov r1.yzw, l(0,0.262700,0.678000,0.059300)  // r1.y <- ootf_2020.x; r1.z <- ootf_2020.y; r1.w <- ootf_2020.z
                
                #line 119
                                                  dp3 r1.y, r1.yzwy, r0.xyzx
                                                  mul r1.x, r1.y, r1.x  // r1.x <- ootf_ys
                
                #line 120
                                                  log r1.x, r1.x
                                                  mul r1.x, r1.x, l(0.200000)
                                                  exp r1.x, r1.x
                                                  mul r0.xyzw, r0.xyzw, r1.xxxx  // r0.x <- <HLGTOLinear return value>.x; r0.y <- <HLGTOLinear return value>.y; r0.z <- <HLGTOLinear return value>.z; r0.w <- <HLGTOLinear return value>.w
                
                #line 188
                                                  mov r0.xyzw, r0.xyzw  // r0.x <- <sourceToLinear return value>.x; r0.y <- <sourceToLinear return value>.y; r0.z <- <sourceToLinear return value>.z; r0.w <- <sourceToLinear return value>.w
                
                #line 189
                                                else   // Prior locations: r2.x <- yuv2rgbmatrix._m02; r2.y <- yuv2rgbmatrix._m12; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.w <- rgb.w
                
                #line 190
                                                  ieq r1.x, cb0[12].y, l(1)
                                                  if_nz r1.x
                
                #line 192
                                                    nop 
                                                    mov r0.xyzw, r0.xyzw
                
                #line 127
                                                    log r1.xyzw, r0.xyzw
                                                    mul r1.xyzw, r1.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                                    exp r0.xyzw, r1.xyzw  // r0.x <- <BT709TOLinear return value>.x; r0.y <- <BT709TOLinear return value>.y; r0.z <- <BT709TOLinear return value>.z; r0.w <- <BT709TOLinear return value>.w
                
                #line 192
                                                    mov r0.xyzw, r0.xyzw  // r0.x <- <sourceToLinear return value>.x; r0.y <- <sourceToLinear return value>.y; r0.z <- <sourceToLinear return value>.z; r0.w <- <sourceToLinear return value>.w
                
                #line 193
                                                  else   // Prior locations: r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.w <- rgb.w
                
                #line 194
                                                    ieq r1.x, cb0[12].y, l(4)
                                                    if_nz r1.x
                
                #line 196
                                                      nop 
                                                      mov r0.xyzw, r0.xyzw
                
                #line 132
                                                      log r1.xyzw, r0.xyzw
                                                      mul r1.xyzw, r1.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                                      exp r0.xyzw, r1.xyzw  // r0.x <- <BT470M_SRGB_TOLinear return value>.x; r0.y <- <BT470M_SRGB_TOLinear return value>.y; r0.z <- <BT470M_SRGB_TOLinear return value>.z; r0.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 196
                                                      mov r0.xyzw, r0.xyzw  // r0.x <- <sourceToLinear return value>.x; r0.y <- <sourceToLinear return value>.y; r0.z <- <sourceToLinear return value>.z; r0.w <- <sourceToLinear return value>.w
                
                #line 197
                                                    else   // Prior locations: r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.w <- rgb.w
                
                #line 198
                                                      ieq r1.x, cb0[12].y, l(5)
                                                      if_nz r1.x
                
                #line 200
                                                        nop 
                                                        mov r0.xyzw, r0.xyzw
                
                #line 136
                                                        log r1.xyzw, r0.xyzw
                                                        mul r1.xyzw, r1.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                                        exp r0.xyzw, r1.xyzw  // r0.x <- <BT470BGTOLinear return value>.x; r0.y <- <BT470BGTOLinear return value>.y; r0.z <- <BT470BGTOLinear return value>.z; r0.w <- <BT470BGTOLinear return value>.w
                
                #line 200
                                                        mov r0.xyzw, r0.xyzw  // r0.x <- <sourceToLinear return value>.x; r0.y <- <sourceToLinear return value>.y; r0.z <- <sourceToLinear return value>.z; r0.w <- <sourceToLinear return value>.w
                
                #line 201
                                                      else   // Prior locations: r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.w <- rgb.w
                
                #line 204
                                                        mov r0.xyzw, r0.xyzw  // r0.x <- <sourceToLinear return value>.x; r0.y <- <sourceToLinear return value>.y; r0.z <- <sourceToLinear return value>.z; r0.w <- <sourceToLinear return value>.w
                
                #line 205
                                                      endif 
                                                    endif 
                                                  endif 
                                                endif 
                                              endif 
                                            endif 
                                          endif 
                
                #line 294
                                          mov r0.xyzw, r0.xyzw  // r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.w <- rgb.w
                
                #line 295
                                          nop 
                                          mov r0.xyzw, r0.xyzw
                
                #line 212
                                          ine r1.x, cb0[12].w, cb0[13].x
                                          if_nz r1.x
                
                #line 214
                                            dp4 r1.x, r0.xyzw, cb1[8].xyzw
                                            dp4 r1.y, r0.xyzw, cb1[9].xyzw
                                            dp4 r1.z, r0.xyzw, cb1[10].xyzw
                                            itof r2.xyz, l(0, 0, 0, 0)
                                            max r0.xyz, r1.xyzx, r2.xyzx  // r0.x <- <transformPrimaries return value>.x; r0.y <- <transformPrimaries return value>.y; r0.z <- <transformPrimaries return value>.z
                
                #line 215
                                          else   // Prior locations: r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z
                
                #line 218
                                            mov r0.xyz, r0.xyzx  // r0.x <- <transformPrimaries return value>.x; r0.y <- <transformPrimaries return value>.y; r0.z <- <transformPrimaries return value>.z
                
                #line 219
                                          endif 
                
                #line 295
                                          mov r0.xyz, r0.xyzx
                
                #line 296
                                          nop 
                                          mov r0.xyz, r0.xyzx
                
                #line 224
                                          ieq r0.w, cb0[12].y, cb0[12].z
                                          if_nz r0.w
                
                #line 226
                                            mov r4.xyz, r0.xyzx
                
                #line 227
                                          endif   // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 228
                                          if_z r0.w
                                            ieq r0.w, cb0[12].z, l(1)
                                            ieq r1.x, cb0[12].z, l(4)
                                            or r0.w, r0.w, r1.x
                                            if_nz r0.w
                
                #line 230
                                              ieq r0.w, cb0[12].y, l(16)
                                              ieq r1.x, cb0[12].y, l(18)
                                              or r0.w, r0.w, r1.x
                                              if_nz r0.w
                
                #line 232
                                                nop 
                                                mov r0.xyz, r0.xyzx
                
                #line 166
                                                mov r1.xyz, l(11.200000,11.200000,11.200000,0)  // r1.x <- tmp.x; r1.y <- tmp.y; r1.z <- tmp.z
                
                #line 167
                                                nop 
                                                mov r1.xyz, r1.xyzx
                
                #line 160
                                                mov r0.w, l(0.150000)  // r0.w <- A
                                                mov r1.w, l(0.500000)  // r1.w <- B
                
                #line 161
                                                mul r2.xyz, r1.xyzx, r0.wwww
                                                add r2.xyz, r2.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                                mul r2.xyz, r1.xyzx, r2.xyzx
                                                add r2.xyz, r2.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                                mul r3.xyz, r1.xyzx, r0.wwww
                                                add r3.xyz, r1.wwww, r3.xyzx
                                                mul r1.xyz, r1.xyzx, r3.xyzx
                                                add r1.xyz, r1.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                                div r1.xyz, r2.xyzx, r1.xyzx
                                                mov r2.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                                add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- <hable return value>.x; r1.y <- <hable return value>.y; r1.z <- <hable return value>.z
                
                #line 167
                                                mov r1.xyz, r1.xyzx  // r1.x <- HABLE_DIV.x; r1.y <- HABLE_DIV.y; r1.z <- HABLE_DIV.z
                
                #line 168
                                                nop 
                                                mul r2.xyz, r0.xyzx, cb0[13].wwww
                
                #line 160
                                                mov r0.w, l(0.150000)
                                                mov r1.w, l(0.500000)
                
                #line 161
                                                mul r3.xyz, r2.xyzx, r0.wwww
                                                add r3.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                                mul r3.xyz, r2.xyzx, r3.xyzx
                                                add r3.xyz, r3.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                                mul r5.xyz, r2.xyzx, r0.wwww
                                                add r5.xyz, r1.wwww, r5.xyzx
                                                mul r2.xyz, r2.xyzx, r5.xyzx
                                                add r2.xyz, r2.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                                div r2.xyz, r3.xyzx, r2.xyzx
                                                mov r3.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                                add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- <hable return value>.x; r2.y <- <hable return value>.y; r2.z <- <hable return value>.z
                
                #line 168
                                                div r4.xyz, r2.xyzx, r1.xyzx  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z
                
                #line 169
                                                mov r4.xyz, r4.xyzx  // r4.x <- <HDRToneMapping return value>.x; r4.y <- <HDRToneMapping return value>.y; r4.z <- <HDRToneMapping return value>.z
                
                #line 232
                                                mov r4.xyz, r4.xyzx  // r4.x <- <toneMapping return value>.x; r4.y <- <toneMapping return value>.y; r4.z <- <toneMapping return value>.z
                
                #line 233
                                              else   // Prior locations: r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 236
                                                mul r4.xyz, r0.xyzx, cb0[13].wwww
                
                #line 237
                                              endif 
                
                #line 238
                                            else   // Prior locations: r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z; r0.x <- rgb.x; r0.y <- rgb.y; r0.z <- rgb.z
                
                #line 241
                                              mul r4.xyz, r0.xyzx, cb0[13].wwww
                
                #line 242
                                            endif 
                                          endif 
                
                #line 296
                                          mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 297
                                          nop 
                                          mov r4.xyz, r4.xyzx
                
                #line 253
                                          ieq r0.x, cb0[12].y, cb0[12].z
                                          if_nz r0.x
                
                #line 255
                                            mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 256
                                          else 
                
                #line 257
                                            ieq r0.x, cb0[12].z, l(16)
                                            if_nz r0.x
                
                #line 259
                                              nop 
                                              mov r4.xyz, r4.xyzx
                
                #line 147
                                              mov r0.x, l(0.159302)  // r0.x <- ST2084_m1
                
                #line 148
                                              mov r0.y, l(78.843750)  // r0.y <- ST2084_m2
                
                #line 149
                                              mov r0.z, l(0.835938)  // r0.z <- ST2084_c1
                
                #line 150
                                              mov r0.w, l(18.851562)  // r0.w <- ST2084_c2
                
                #line 151
                                              mov r1.x, l(18.687500)  // r1.x <- ST2084_c3
                
                #line 152
                                              itof r1.yzw, l(0, 10000, 10000, 10000)
                                              div r1.yzw, r4.xxyz, r1.yyzw
                                              log r1.yzw, r1.yyzw
                                              mul r1.yzw, r0.xxxx, r1.yyzw
                                              exp r1.yzw, r1.yyzw  // r1.y <- rgb.x; r1.z <- rgb.y; r1.w <- rgb.z
                
                #line 153
                                              mul r2.xyz, r0.wwww, r1.yzwy
                                              add r0.xzw, r0.zzzz, r2.xxyz
                                              itof r2.xyz, l(1, 1, 1, 0)
                                              mul r1.xyz, r1.yzwy, r1.xxxx
                                              add r1.xyz, r1.xyzx, r2.xyzx
                                              div r0.xzw, r0.xxzw, r1.xxyz  // r0.x <- rgb.x; r0.z <- rgb.y; r0.w <- rgb.z
                
                #line 154
                                              log r0.xzw, r0.xxzw
                                              mul r0.xyz, r0.xzwx, r0.yyyy
                                              exp r4.xyz, r0.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 155
                                              mov r4.xyz, r4.xyzx  // r4.x <- <LineTOST2084 return value>.x; r4.y <- <LineTOST2084 return value>.y; r4.z <- <LineTOST2084 return value>.z
                
                #line 259
                                              mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 260
                                            else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 261
                                              ieq r0.x, cb0[12].z, l(18)
                                              if_nz r0.x
                
                #line 263
                                                mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 264
                                              else 
                
                #line 265
                                                ieq r0.x, cb0[12].z, l(1)
                                                if_nz r0.x
                
                #line 267
                                                  log r0.xyz, r4.xyzx
                                                  mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                                  exp r4.xyz, r0.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 268
                                                else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 269
                                                  ieq r0.x, cb0[12].z, l(4)
                                                  if_nz r0.x
                
                #line 271
                                                    log r0.xyz, r4.xyzx
                                                    mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                                    exp r4.xyz, r0.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 272
                                                  else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 275
                                                    mov r4.xyz, r4.xyzx  // r4.x <- <linearToDisplay return value>.x; r4.y <- <linearToDisplay return value>.y; r4.z <- <linearToDisplay return value>.z
                
                #line 276
                                                  endif 
                                                endif 
                                              endif 
                                            endif 
                                          endif 
                
                #line 297
                                          mov r4.xyz, r4.xyzx  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 298
                                          nop 
                                          mov r4.xyz, r4.xyzx
                
                #line 248
                                          mov r4.xyz, r4.xyzx  // r4.x <- <adjustRange return value>.x; r4.y <- <adjustRange return value>.y; r4.z <- <adjustRange return value>.z
                
                #line 298
                                          mov r4.xyz, r4.xyzx
                
                #line 299
                                          nop 
                                          mov r4.xyz, r4.xyzx
                
                #line 282
                                          mov r4.xyz, r4.xyzx  // r4.x <- <reorderPlanes return value>.x; r4.y <- <reorderPlanes return value>.y; r4.z <- <reorderPlanes return value>.z
                
                #line 299
                                          mov r4.xyz, r4.xyzx
                
                #line 300
                                        endif 
                
                #line 301
                                        mov r4.xyz, r4.xyzx  // r4.x <- <RenderFloat return value>.x; r4.y <- <RenderFloat return value>.y; r4.z <- <RenderFloat return value>.z
                
                #line 433
                                        mov r4.xyz, r4.xyzx  // r4.x <- rgbarsp.x; r4.y <- rgbarsp.y; r4.z <- rgbarsp.z
                
                #line 434
                                        itof r4.w, l(1)  // r4.w <- rgbarsp.w
                
                #line 435
                                        mov r4.xyz, r4.xyzx  // r4.x <- <GetRGBA return value>.x; r4.y <- <GetRGBA return value>.y; r4.z <- <GetRGBA return value>.z
                                        mov r4.w, r4.w  // r4.w <- <GetRGBA return value>.w
                
                #line 436
                                      else   // Prior locations: r0.x <- yuv2rgbmatrix._m00; r0.y <- yuv2rgbmatrix._m10; r0.z <- yuv2rgbmatrix._m20; r0.w <- yuv2rgbmatrix._m30; r1.x <- yuv2rgbmatrix._m01; r1.y <- yuv2rgbmatrix._m11; r1.z <- yuv2rgbmatrix._m21; r1.w <- yuv2rgbmatrix._m31; r2.x <- yuv2rgbmatrix._m02; r2.y <- yuv2rgbmatrix._m12; r2.z <- yuv2rgbmatrix._m22; r2.w <- yuv2rgbmatrix._m32; r3.x <- yuv2rgbmatrix._m03; r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33
                
                #line 439
                                        itof r4.xyzw, l(0, 1, 0, 1)  // r4.x <- <GetRGBA return value>.x; r4.y <- <GetRGBA return value>.y; r4.z <- <GetRGBA return value>.z; r4.w <- <GetRGBA return value>.w
                
                #line 440
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                            endif 
                          endif 
                        endif 
                      endif 
                    endif 
                  endif 
                endif 
                
                #line 444
                mov r4.xyzw, r4.xyzw  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 445
                mov o0.xyzw, r4.xyzw
                ret 
                // Approximately 3514 instruction slots used
                            
            };
        }

    }

}

