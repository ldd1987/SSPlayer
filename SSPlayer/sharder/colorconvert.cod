//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer $Globals
{
    float4x4 worldMatrix;               // Offset:    0, size:   64
    float4x4 viewMatrix;                // Offset:   64, size:   64
    float4x4 projectionMatrix;          // Offset:  128, size:   64
    int     PixType;                    // Offset:  192, size:    4
    int     sourcewidth;                // Offset:  196, size:    4
    int     sourceheight;               // Offset:  200, size:    4
    int     transfer;                   // Offset:  204, size:    4
    int     distransfer;                // Offset:  208, size:    4
    int     primaries;                  // Offset:  212, size:    4
    int     disprimaries;               // Offset:  216, size:    4
    int     fullrange;                  // Offset:  220, size:    4
    int     srcrange;                   // Offset:  224, size:    4
    float   LuminanceScale;             // Offset:  228, size:    4
    int     DrawLine;                   // Offset:  232, size:    4
    float4  bt709yuv = { 0.0625, 0.5, 0.5, 0 };// Offset:  240, size:   16
    float4x4 bt601matrix = { 1.16400003, 1.16400003, 1.16400003, 0, 0, -0.391799986, 2.01719999, 0, 1.59599996, -0.813000023, 0, 0, 0, 0, 0, 0 };// Offset:  256, size:   64
    float4x4 bt709matrix = { 1.16400003, 1.16400003, 1.16400003, 0, 0, -0.213, 2.11199999, 0, 1.79299998, -0.532999992, 0, 0, 0, 0, 0, 0 };// Offset:  320, size:   64
    float4x4 bt2020matrix = { 1.16400003, 1.16400003, 1.16400003, 0, 0, -0.127007097, 2.14177227, 0, 1.67864001, -0.440987676, 0, 0, 0, 0, 0, 0 };// Offset:  384, size:   64
}

cbuffer PS_COLOR_TRANSFORM
{
    float4x4 WhitePoint;                // Offset:    0, size:   64
    float4x4 Colorspace;                // Offset:   64, size:   64
    float4x4 TransPrimaries;            // Offset:  128, size:   64
    float4x4 DisTransPrimaries;         // Offset:  192, size:   64
}

//
// 5 local object(s)
//
Texture2D TextureSourceY;
Texture2D TextureSourceU;
Texture2D TextureSourceV;
Texture2D TextureSourceA;
SamplerState SamplerDiffuse
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
    ComparisonFunc = uint(ALWAYS /* 8 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 BasicTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float4x4 worldMatrix;              // Offset:    0 Size:    64 [unused]
                //   float4x4 viewMatrix;               // Offset:   64 Size:    64
                //   float4x4 projectionMatrix;         // Offset:  128 Size:    64 [unused]
                //   int PixType;                       // Offset:  192 Size:     4 [unused]
                //   int sourcewidth;                   // Offset:  196 Size:     4 [unused]
                //   int sourceheight;                  // Offset:  200 Size:     4 [unused]
                //   int transfer;                      // Offset:  204 Size:     4 [unused]
                //   int distransfer;                   // Offset:  208 Size:     4 [unused]
                //   int primaries;                     // Offset:  212 Size:     4 [unused]
                //   int disprimaries;                  // Offset:  216 Size:     4 [unused]
                //   int fullrange;                     // Offset:  220 Size:     4 [unused]
                //   int srcrange;                      // Offset:  224 Size:     4 [unused]
                //   float LuminanceScale;              // Offset:  228 Size:     4 [unused]
                //   int DrawLine;                      // Offset:  232 Size:     4 [unused]
                //   float4 bt709yuv;                   // Offset:  240 Size:    16 [unused]
                //      = 0x3d800000 0x3f000000 0x3f000000 0x00000000 
                //   float4x4 bt601matrix;              // Offset:  256 Size:    64 [unused]
                //      = 0x3f94fdf4 0x3f94fdf4 0x3f94fdf4 0x00000000 
                //        0x00000000 0xbec89a02 0x400119ce 0x00000000 
                //        0x3fcc49ba 0xbf5020c5 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //   float4x4 bt709matrix;              // Offset:  320 Size:    64 [unused]
                //      = 0x3f94fdf4 0x3f94fdf4 0x3f94fdf4 0x00000000 
                //        0x00000000 0xbe5a1cac 0x40072b02 0x00000000 
                //        0x3fe58106 0xbf0872b0 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //   float4x4 bt2020matrix;             // Offset:  384 Size:    64 [unused]
                //      = 0x3f94fdf4 0x3f94fdf4 0x3f94fdf4 0x00000000 
                //        0x00000000 0xbe020e26 0x400912cc 0x00000000 
                //        0x3fd6ddad 0xbee1c923 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // $Globals                          cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyzw        0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- inPos.x; v0.y <- inPos.y; v0.z <- inPos.z; v0.w <- inPos.w; 
                //   v1.x <- inTexCoord.x; v1.y <- inTexCoord.y; 
                //   o1.x <- <VS return value>.TexCoord.x; o1.y <- <VS return value>.TexCoord.y; 
                //   o0.x <- <VS return value>.Pos.x; o0.y <- <VS return value>.Pos.y; o0.z <- <VS return value>.Pos.z; o0.w <- <VS return value>.Pos.w
                //
                #line 47 "C:\github\sinx\SSPlayer\SSPlayer\sharder\colorconvert.fx"
                mov r0.w, l(1.000000)  // r0.w <- inPos.w
                
                #line 48
                mov r0.xyz, v0.xyzx
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- output.Pos.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- output.Pos.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- output.Pos.z
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // r1.w <- output.Pos.w
                
                #line 49
                mov r0.xy, v1.xyxx  // r0.x <- output.TexCoord.x; r0.y <- output.TexCoord.y
                
                #line 50
                mov o0.xyzw, r1.xyzw
                mov o1.xy, r0.xyxx
                ret 
                // Approximately 10 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float4x4 worldMatrix;              // Offset:    0 Size:    64 [unused]
                //   float4x4 viewMatrix;               // Offset:   64 Size:    64 [unused]
                //   float4x4 projectionMatrix;         // Offset:  128 Size:    64 [unused]
                //   int PixType;                       // Offset:  192 Size:     4
                //   int sourcewidth;                   // Offset:  196 Size:     4 [unused]
                //   int sourceheight;                  // Offset:  200 Size:     4 [unused]
                //   int transfer;                      // Offset:  204 Size:     4
                //   int distransfer;                   // Offset:  208 Size:     4
                //   int primaries;                     // Offset:  212 Size:     4
                //   int disprimaries;                  // Offset:  216 Size:     4
                //   int fullrange;                     // Offset:  220 Size:     4 [unused]
                //   int srcrange;                      // Offset:  224 Size:     4 [unused]
                //   float LuminanceScale;              // Offset:  228 Size:     4
                //   int DrawLine;                      // Offset:  232 Size:     4
                //   float4 bt709yuv;                   // Offset:  240 Size:    16
                //      = 0x3d800000 0x3f000000 0x3f000000 0x00000000 
                //   float4x4 bt601matrix;              // Offset:  256 Size:    64 [unused]
                //      = 0x3f94fdf4 0x3f94fdf4 0x3f94fdf4 0x00000000 
                //        0x00000000 0xbec89a02 0x400119ce 0x00000000 
                //        0x3fcc49ba 0xbf5020c5 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //   float4x4 bt709matrix;              // Offset:  320 Size:    64 [unused]
                //      = 0x3f94fdf4 0x3f94fdf4 0x3f94fdf4 0x00000000 
                //        0x00000000 0xbe5a1cac 0x40072b02 0x00000000 
                //        0x3fe58106 0xbf0872b0 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //   float4x4 bt2020matrix;             // Offset:  384 Size:    64 [unused]
                //      = 0x3f94fdf4 0x3f94fdf4 0x3f94fdf4 0x00000000 
                //        0x00000000 0xbe020e26 0x400912cc 0x00000000 
                //        0x3fd6ddad 0xbee1c923 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //
                // }
                //
                // cbuffer PS_COLOR_TRANSFORM
                // {
                //
                //   float4x4 WhitePoint;               // Offset:    0 Size:    64
                //   float4x4 Colorspace;               // Offset:   64 Size:    64
                //   float4x4 TransPrimaries;           // Offset:  128 Size:    64
                //   float4x4 DisTransPrimaries;        // Offset:  192 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // SamplerDiffuse                    sampler      NA          NA             s0      1 
                // TextureSourceY                    texture  float4          2d             t0      1 
                // TextureSourceU                    texture  float4          2d             t1      1 
                // TextureSourceV                    texture  float4          2d             t2      1 
                // $Globals                          cbuffer      NA          NA            cb0      1 
                // PS_COLOR_TRANSFORM                cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[16], immediateIndexed
                dcl_constantbuffer CB1[11], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 10
                //
                // Initial variable locations:
                //   v0.x <- input.Pos.x; v0.y <- input.Pos.y; v0.z <- input.Pos.z; v0.w <- input.Pos.w; 
                //   v1.x <- input.TexCoord.x; v1.y <- input.TexCoord.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 478 "C:\github\sinx\SSPlayer\SSPlayer\sharder\colorconvert.fx"
                nop 
                
                #line 404
                mov r0.xyzw, cb1[4].xyzw  // r0.x <- yuv2rgbmatrix._m00; r0.y <- yuv2rgbmatrix._m10; r0.z <- yuv2rgbmatrix._m20; r0.w <- yuv2rgbmatrix._m30
                mov r1.xyzw, cb1[5].xyzw  // r1.x <- yuv2rgbmatrix._m01; r1.y <- yuv2rgbmatrix._m11; r1.z <- yuv2rgbmatrix._m21; r1.w <- yuv2rgbmatrix._m31
                mov r2.xyzw, cb1[6].xyzw  // r2.x <- yuv2rgbmatrix._m02; r2.y <- yuv2rgbmatrix._m12; r2.z <- yuv2rgbmatrix._m22; r2.w <- yuv2rgbmatrix._m32
                mov r3.xyzw, cb1[7].xyzw  // r3.x <- yuv2rgbmatrix._m03; r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33
                
                #line 405
                ieq r4.x, cb0[12].x, l(6)
                if_nz r4.x
                
                #line 407
                  nop 
                
                #line 55
                  itof r4.xyz, l(0, 1, 0, 0)  // r4.x <- <PSPacked422_Reverse return value>.x; r4.y <- <PSPacked422_Reverse return value>.y; r4.z <- <PSPacked422_Reverse return value>.z
                  mov r4.w, l(1.000000)  // r4.w <- <PSPacked422_Reverse return value>.w
                
                #line 407
                  mov r4.xyzw, r4.xyzw  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 408
                  mov r5.xyzw, -cb0[15].xyzw
                  add r4.xyzw, r4.xyzw, r5.xyzw  // r4.x <- rgbasub.x; r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w
                
                #line 409
                  dp4 r5.x, r4.xyzw, r0.xyzw  // r5.x <- rgbarsp.x
                  dp4 r5.y, r4.xyzw, r1.xyzw  // r5.y <- rgbarsp.y
                  dp4 r5.z, r4.xyzw, r2.xyzw  // r5.z <- rgbarsp.z
                  dp4 r5.w, r4.xyzw, r3.xyzw  // r5.w <- rgbarsp.w
                
                #line 411
                  nop 
                  mov r5.xyzw, r5.xyzw
                
                #line 372
                  if_z cb0[14].z
                
                #line 374
                    nop 
                    mov r4.xyzw, r5.xyzw
                
                #line 191
                    ieq r6.x, cb0[12].w, cb0[13].x
                    if_nz r6.x
                
                #line 193
                      mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 194
                    else 
                
                #line 195
                      ieq r6.x, cb0[12].w, l(8)
                      if_nz r6.x
                
                #line 197
                        mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 198
                      else 
                
                #line 199
                        ieq r6.x, cb0[12].w, l(16)
                        if_nz r6.x
                
                #line 201
                          nop 
                          mov r4.xyzw, r4.xyzw
                
                #line 126
                          mov r6.x, l(0.835938)  // r6.x <- ST2084_c1
                
                #line 127
                          mov r6.y, l(18.851562)  // r6.y <- ST2084_c2
                
                #line 128
                          mov r6.z, l(18.687500)  // r6.z <- ST2084_c3
                
                #line 129
                          itof r7.xyzw, l(0, 0, 0, 0)
                          max r7.xyzw, r4.xyzw, r7.xyzw
                          log r7.xyzw, r7.xyzw
                          mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                          exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 130
                          mov r8.xyzw, -r6.xxxx
                          add r8.xyzw, r7.xyzw, r8.xyzw
                          max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                          mul r7.xyzw, r6.zzzz, r7.xyzw
                          mov r7.xyzw, -r7.xyzw
                          add r6.xyzw, r6.yyyy, r7.xyzw
                          div r6.xyzw, r8.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 131
                          log r6.xyzw, r6.xyzw
                          mul r6.xyzw, r6.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                          exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 132
                          itof r7.xyzw, l(10000, 10000, 10000, 10000)
                          mul r4.xyzw, r6.xyzw, r7.xyzw  // r4.x <- <ST2084TOLinear return value>.x; r4.y <- <ST2084TOLinear return value>.y; r4.z <- <ST2084TOLinear return value>.z; r4.w <- <ST2084TOLinear return value>.w
                
                #line 201
                          mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 202
                        else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 203
                          ieq r6.x, cb0[12].w, l(18)
                          if_nz r6.x
                
                #line 205
                            nop 
                            mov r4.xyzw, r4.xyzw
                
                #line 137
                            itof r6.x, l(2000)  // r6.x <- alpha_gain
                
                #line 138
                            nop 
                            mov r4.x, r4.x
                
                #line 111
                            mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 112
                            mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 113
                            mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 114
                            mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 115
                            ge r7.y, l(0.500000), r4.x
                            if_nz r7.y
                
                #line 116
                              mul r7.y, r4.x, r4.x
                              mul r4.x, r7.x, r7.y
                            else   // Prior locations: r4.x <- rgb.x; r4.x <- rgb.x
                
                #line 118
                              mov r6.w, -r6.w
                              add r6.w, r4.x, r6.w
                              div r6.y, r6.w, r6.y
                              mul r6.y, r6.y, l(1.442695)
                              exp r6.y, r6.y
                              add r4.x, r6.z, r6.y
                            endif 
                
                #line 119
                            mov r4.x, r4.x  // r4.x <- <inverse_HLG return value>
                
                #line 138
                            mov r4.x, r4.x  // r4.x <- rgb.x
                
                #line 139
                            nop 
                            mov r4.y, r4.y
                
                #line 111
                            mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 112
                            mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 113
                            mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 114
                            mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 115
                            ge r7.y, l(0.500000), r4.y
                            if_nz r7.y
                
                #line 116
                              mul r7.y, r4.y, r4.y
                              mul r4.y, r7.x, r7.y
                            else   // Prior locations: r4.y <- rgb.y; r4.y <- rgb.y
                
                #line 118
                              mov r6.w, -r6.w
                              add r6.w, r4.y, r6.w
                              div r6.y, r6.w, r6.y
                              mul r6.y, r6.y, l(1.442695)
                              exp r6.y, r6.y
                              add r4.y, r6.z, r6.y
                            endif 
                
                #line 119
                            mov r4.y, r4.y  // r4.y <- <inverse_HLG return value>
                
                #line 139
                            mov r4.y, r4.y  // r4.y <- rgb.y
                
                #line 140
                            nop 
                            mov r4.z, r4.z
                
                #line 111
                            mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 112
                            mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 113
                            mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 114
                            mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 115
                            ge r7.y, l(0.500000), r4.z
                            if_nz r7.y
                
                #line 116
                              mul r7.y, r4.z, r4.z
                              mul r4.z, r7.x, r7.y
                            else   // Prior locations: r4.z <- rgb.z; r4.z <- rgb.z
                
                #line 118
                              mov r6.w, -r6.w
                              add r6.w, r4.z, r6.w
                              div r6.y, r6.w, r6.y
                              mul r6.y, r6.y, l(1.442695)
                              exp r6.y, r6.y
                              add r4.z, r6.z, r6.y
                            endif 
                
                #line 119
                            mov r4.z, r4.z  // r4.z <- <inverse_HLG return value>
                
                #line 140
                            mov r4.z, r4.z  // r4.z <- rgb.z
                
                #line 141
                            mov r6.yzw, l(0,0.262700,0.678000,0.059300)  // r6.y <- ootf_2020.x; r6.z <- ootf_2020.y; r6.w <- ootf_2020.z
                
                #line 142
                            dp3 r6.y, r6.yzwy, r4.xyzx
                            mul r6.x, r6.y, r6.x  // r6.x <- ootf_ys
                
                #line 143
                            log r6.x, r6.x
                            mul r6.x, r6.x, l(0.200000)
                            exp r6.x, r6.x
                            mul r4.xyzw, r4.xyzw, r6.xxxx  // r4.x <- <HLGTOLinear return value>.x; r4.y <- <HLGTOLinear return value>.y; r4.z <- <HLGTOLinear return value>.z; r4.w <- <HLGTOLinear return value>.w
                
                #line 205
                            mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 206
                          else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 207
                            ieq r6.x, cb0[12].w, l(1)
                            if_nz r6.x
                
                #line 209
                              nop 
                              mov r4.xyzw, r4.xyzw
                
                #line 147
                              log r6.xyzw, r4.xyzw
                              mul r6.xyzw, r6.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                              exp r4.xyzw, r6.xyzw  // r4.x <- <BT709TOLinear return value>.x; r4.y <- <BT709TOLinear return value>.y; r4.z <- <BT709TOLinear return value>.z; r4.w <- <BT709TOLinear return value>.w
                
                #line 209
                              mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 210
                            else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 211
                              ieq r6.x, cb0[12].w, l(4)
                              if_nz r6.x
                
                #line 213
                                nop 
                                mov r4.xyzw, r4.xyzw
                
                #line 152
                                log r6.xyzw, r4.xyzw
                                mul r6.xyzw, r6.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                exp r4.xyzw, r6.xyzw  // r4.x <- <BT470M_SRGB_TOLinear return value>.x; r4.y <- <BT470M_SRGB_TOLinear return value>.y; r4.z <- <BT470M_SRGB_TOLinear return value>.z; r4.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 213
                                mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 214
                              else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 215
                                ieq r6.x, cb0[12].w, l(5)
                                if_nz r6.x
                
                #line 217
                                  nop 
                                  mov r4.xyzw, r4.xyzw
                
                #line 156
                                  log r6.xyzw, r4.xyzw
                                  mul r6.xyzw, r6.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                  exp r4.xyzw, r6.xyzw  // r4.x <- <BT470BGTOLinear return value>.x; r4.y <- <BT470BGTOLinear return value>.y; r4.z <- <BT470BGTOLinear return value>.z; r4.w <- <BT470BGTOLinear return value>.w
                
                #line 217
                                  mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 218
                                else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 225
                                  mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 226
                                endif 
                              endif 
                            endif 
                          endif 
                        endif 
                      endif 
                    endif 
                
                #line 374
                    mov r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 375
                    nop 
                    mov r4.xyzw, r4.xyzw
                
                #line 275
                    ine r6.x, cb0[13].z, cb0[13].y
                    if_nz r6.x
                
                #line 277
                      nop 
                      mov r4.xyzw, r4.xyzw
                
                #line 270
                      dp4 r6.x, r4.xyzw, cb1[8].xyzw
                      dp4 r6.y, r4.xyzw, cb1[9].xyzw
                      dp4 r6.z, r4.xyzw, cb1[10].xyzw
                      itof r7.xyz, l(0, 0, 0, 0)
                      max r4.xyz, r6.xyzx, r7.xyzx  // r4.x <- <PrimariesTransform return value>.x; r4.y <- <PrimariesTransform return value>.y; r4.z <- <PrimariesTransform return value>.z
                
                #line 277
                      mov r4.xyz, r4.xyzx  // r4.x <- <transformPrimaries return value>.x; r4.y <- <transformPrimaries return value>.y; r4.z <- <transformPrimaries return value>.z
                
                #line 278
                    else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 281
                      mov r4.xyz, r4.xyzx  // r4.x <- <transformPrimaries return value>.x; r4.y <- <transformPrimaries return value>.y; r4.z <- <transformPrimaries return value>.z
                
                #line 282
                    endif 
                
                #line 375
                    mov r4.xyz, r4.xyzx
                
                #line 376
                    nop 
                    mov r4.xyz, r4.xyzx
                
                #line 287
                    ieq r4.w, cb0[12].w, cb0[13].x
                    if_nz r4.w
                
                #line 289
                      mov r5.xyz, r4.xyzx
                
                #line 290
                    endif   // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 291
                    if_z r4.w
                      ieq r4.w, cb0[13].x, l(1)
                      ieq r6.x, cb0[13].x, l(4)
                      or r4.w, r4.w, r6.x
                      if_nz r4.w
                
                #line 293
                        ieq r4.w, cb0[12].w, l(16)
                        ieq r6.x, cb0[12].w, l(18)
                        or r4.w, r4.w, r6.x
                        if_nz r4.w
                
                #line 295
                          nop 
                          mov r4.xyz, r4.xyzx
                
                #line 184
                          nop 
                          mov r6.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 178
                          mov r4.w, l(0.150000)  // r4.w <- A
                          mov r6.w, l(0.500000)  // r6.w <- B
                
                #line 179
                          mul r7.xyz, r6.xyzx, r4.wwww
                          add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                          mul r7.xyz, r6.xyzx, r7.xyzx
                          add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                          mul r8.xyz, r6.xyzx, r4.wwww
                          add r8.xyz, r6.wwww, r8.xyzx
                          mul r6.xyz, r6.xyzx, r8.xyzx
                          add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                          div r6.xyz, r7.xyzx, r6.xyzx
                          mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                          add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 184
                          mov r6.xyz, r6.xyzx  // r6.x <- HABLE_DIV.x; r6.y <- HABLE_DIV.y; r6.z <- HABLE_DIV.z
                
                #line 185
                          nop 
                          mul r7.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 178
                          mov r4.w, l(0.150000)
                          mov r6.w, l(0.500000)
                
                #line 179
                          mul r8.xyz, r7.xyzx, r4.wwww
                          add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                          mul r8.xyz, r7.xyzx, r8.xyzx
                          add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                          mul r9.xyz, r7.xyzx, r4.wwww
                          add r9.xyz, r6.wwww, r9.xyzx
                          mul r7.xyz, r7.xyzx, r9.xyzx
                          add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                          div r7.xyz, r8.xyzx, r7.xyzx
                          mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                          add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 185
                          div r5.xyz, r7.xyzx, r6.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 186
                          mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 295
                          mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 296
                        else 
                
                #line 299
                          mul r5.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 300
                        endif 
                
                #line 301
                      else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 304
                        mul r5.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 305
                      endif 
                    endif 
                
                #line 376
                    mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 377
                    nop 
                    mov r5.xyz, r5.xyzx
                
                #line 316
                    ieq r4.x, cb0[12].w, cb0[13].x
                    if_nz r4.x
                
                #line 318
                      mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 319
                    else 
                
                #line 320
                      ieq r4.x, cb0[13].x, l(16)
                      if_nz r4.x
                
                #line 322
                        nop 
                        mov r5.xyz, r5.xyzx
                
                #line 165
                        mov r4.x, l(0.159302)  // r4.x <- ST2084_m1
                
                #line 166
                        mov r4.y, l(78.843750)  // r4.y <- ST2084_m2
                
                #line 167
                        mov r4.z, l(0.835938)  // r4.z <- ST2084_c1
                
                #line 168
                        mov r4.w, l(18.851562)  // r4.w <- ST2084_c2
                
                #line 169
                        mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 170
                        itof r6.yzw, l(0, 10000, 10000, 10000)
                        div r6.yzw, r5.xxyz, r6.yyzw
                        log r6.yzw, r6.yyzw
                        mul r6.yzw, r4.xxxx, r6.yyzw
                        exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 171
                        mul r7.xyz, r4.wwww, r6.yzwy
                        add r4.xzw, r4.zzzz, r7.xxyz
                        itof r7.xyz, l(1, 1, 1, 0)
                        mul r6.xyz, r6.yzwy, r6.xxxx
                        add r6.xyz, r6.xyzx, r7.xyzx
                        div r4.xzw, r4.xxzw, r6.xxyz  // r4.x <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 172
                        log r4.xzw, r4.xxzw
                        mul r4.xyz, r4.xzwx, r4.yyyy
                        exp r5.xyz, r4.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                        mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 322
                        mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 323
                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 324
                        ieq r4.x, cb0[13].x, l(18)
                        if_nz r4.x
                
                #line 326
                          nop 
                          mov r5.xyz, r5.xyzx
                
                #line 165
                          mov r4.x, l(0.159302)  // r4.x <- ST2084_m1
                
                #line 166
                          mov r4.y, l(78.843750)  // r4.y <- ST2084_m2
                
                #line 167
                          mov r4.z, l(0.835938)  // r4.z <- ST2084_c1
                
                #line 168
                          mov r4.w, l(18.851562)  // r4.w <- ST2084_c2
                
                #line 169
                          mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 170
                          itof r6.yzw, l(0, 10000, 10000, 10000)
                          div r6.yzw, r5.xxyz, r6.yyzw
                          log r6.yzw, r6.yyzw
                          mul r6.yzw, r4.xxxx, r6.yyzw
                          exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 171
                          mul r7.xyz, r4.wwww, r6.yzwy
                          add r4.xzw, r4.zzzz, r7.xxyz
                          itof r7.xyz, l(1, 1, 1, 0)
                          mul r6.xyz, r6.yzwy, r6.xxxx
                          add r6.xyz, r6.xyzx, r7.xyzx
                          div r4.xzw, r4.xxzw, r6.xxyz  // r4.x <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 172
                          log r4.xzw, r4.xxzw
                          mul r4.xyz, r4.xzwx, r4.yyyy
                          exp r5.xyz, r4.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                          mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 326
                          mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 327
                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 328
                          ieq r4.x, cb0[13].x, l(1)
                          if_nz r4.x
                
                #line 330
                            log r4.xyz, r5.xyzx
                            mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                            exp r5.xyz, r4.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 331
                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 332
                            ieq r4.x, cb0[13].x, l(4)
                            if_nz r4.x
                
                #line 334
                              log r4.xyz, r5.xyzx
                              mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                              exp r5.xyz, r4.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 335
                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 338
                              mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 339
                            endif 
                          endif 
                        endif 
                      endif 
                    endif 
                
                #line 377
                    mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 378
                    nop 
                    mov r5.xyz, r5.xyzx
                
                #line 311
                    mov r5.xyz, r5.xyzx  // r5.x <- <adjustRange return value>.x; r5.y <- <adjustRange return value>.y; r5.z <- <adjustRange return value>.z
                
                #line 378
                    mov r5.xyz, r5.xyzx
                
                #line 379
                    nop 
                    mov r5.xyz, r5.xyzx
                
                #line 367
                    mov r5.xyz, r5.xyzx  // r5.x <- <reorderPlanes return value>.x; r5.y <- <reorderPlanes return value>.y; r5.z <- <reorderPlanes return value>.z
                
                #line 379
                    mov r5.xyz, r5.xyzx
                
                #line 380
                  else   // Prior locations: r4.x <- rgbasub.x; r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.w <- rgbarsp.w; r5.w <- rgb.w
                
                #line 372
                    mov r4.x, cb0[14].z  // r4.x <- DrawLine; r4.x <- DrawLine; r4.x <- DrawLine
                
                #line 381
                    ieq r4.x, r4.x, l(1)
                    if_z r4.x
                
                #line 387
                      nop 
                      mov r4.xyzw, r5.xyzw
                
                #line 191
                      ieq r6.x, cb0[12].w, cb0[13].x
                      if_nz r6.x
                
                #line 193
                        mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 194
                      else 
                
                #line 195
                        ieq r6.x, cb0[12].w, l(8)
                        if_nz r6.x
                
                #line 197
                          mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 198
                        else 
                
                #line 199
                          ieq r6.x, cb0[12].w, l(16)
                          if_nz r6.x
                
                #line 201
                            nop 
                            mov r4.xyzw, r4.xyzw
                
                #line 126
                            mov r6.x, l(0.835938)  // r6.x <- ST2084_c1
                
                #line 127
                            mov r6.y, l(18.851562)  // r6.y <- ST2084_c2
                
                #line 128
                            mov r6.z, l(18.687500)  // r6.z <- ST2084_c3
                
                #line 129
                            itof r7.xyzw, l(0, 0, 0, 0)
                            max r7.xyzw, r4.xyzw, r7.xyzw
                            log r7.xyzw, r7.xyzw
                            mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                            exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 130
                            mov r8.xyzw, -r6.xxxx
                            add r8.xyzw, r7.xyzw, r8.xyzw
                            max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                            mul r7.xyzw, r6.zzzz, r7.xyzw
                            mov r7.xyzw, -r7.xyzw
                            add r6.xyzw, r6.yyyy, r7.xyzw
                            div r6.xyzw, r8.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 131
                            log r6.xyzw, r6.xyzw
                            mul r6.xyzw, r6.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                            exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 132
                            itof r7.xyzw, l(10000, 10000, 10000, 10000)
                            mul r4.xyzw, r6.xyzw, r7.xyzw  // r4.x <- <ST2084TOLinear return value>.x; r4.y <- <ST2084TOLinear return value>.y; r4.z <- <ST2084TOLinear return value>.z; r4.w <- <ST2084TOLinear return value>.w
                
                #line 201
                            mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 202
                          else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 203
                            ieq r6.x, cb0[12].w, l(18)
                            if_nz r6.x
                
                #line 205
                              nop 
                              mov r4.xyzw, r4.xyzw
                
                #line 137
                              itof r6.x, l(2000)  // r6.x <- alpha_gain
                
                #line 138
                              nop 
                              mov r4.x, r4.x
                
                #line 111
                              mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 112
                              mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 113
                              mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 114
                              mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 115
                              ge r7.y, l(0.500000), r4.x
                              if_nz r7.y
                
                #line 116
                                mul r7.y, r4.x, r4.x
                                mul r4.x, r7.x, r7.y
                              else   // Prior locations: r4.x <- rgb.x; r4.x <- rgb.x
                
                #line 118
                                mov r6.w, -r6.w
                                add r6.w, r4.x, r6.w
                                div r6.y, r6.w, r6.y
                                mul r6.y, r6.y, l(1.442695)
                                exp r6.y, r6.y
                                add r4.x, r6.z, r6.y
                              endif 
                
                #line 119
                              mov r4.x, r4.x  // r4.x <- <inverse_HLG return value>
                
                #line 138
                              mov r4.x, r4.x  // r4.x <- rgb.x
                
                #line 139
                              nop 
                              mov r4.y, r4.y
                
                #line 111
                              mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 112
                              mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 113
                              mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 114
                              mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 115
                              ge r7.y, l(0.500000), r4.y
                              if_nz r7.y
                
                #line 116
                                mul r7.y, r4.y, r4.y
                                mul r4.y, r7.x, r7.y
                              else   // Prior locations: r4.y <- rgb.y; r4.y <- rgb.y
                
                #line 118
                                mov r6.w, -r6.w
                                add r6.w, r4.y, r6.w
                                div r6.y, r6.w, r6.y
                                mul r6.y, r6.y, l(1.442695)
                                exp r6.y, r6.y
                                add r4.y, r6.z, r6.y
                              endif 
                
                #line 119
                              mov r4.y, r4.y  // r4.y <- <inverse_HLG return value>
                
                #line 139
                              mov r4.y, r4.y  // r4.y <- rgb.y
                
                #line 140
                              nop 
                              mov r4.z, r4.z
                
                #line 111
                              mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 112
                              mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 113
                              mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 114
                              mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 115
                              ge r7.y, l(0.500000), r4.z
                              if_nz r7.y
                
                #line 116
                                mul r7.y, r4.z, r4.z
                                mul r4.z, r7.x, r7.y
                              else   // Prior locations: r4.z <- rgb.z; r4.z <- rgb.z
                
                #line 118
                                mov r6.w, -r6.w
                                add r6.w, r4.z, r6.w
                                div r6.y, r6.w, r6.y
                                mul r6.y, r6.y, l(1.442695)
                                exp r6.y, r6.y
                                add r4.z, r6.z, r6.y
                              endif 
                
                #line 119
                              mov r4.z, r4.z  // r4.z <- <inverse_HLG return value>
                
                #line 140
                              mov r4.z, r4.z  // r4.z <- rgb.z
                
                #line 141
                              mov r6.yzw, l(0,0.262700,0.678000,0.059300)  // r6.y <- ootf_2020.x; r6.z <- ootf_2020.y; r6.w <- ootf_2020.z
                
                #line 142
                              dp3 r6.y, r6.yzwy, r4.xyzx
                              mul r6.x, r6.y, r6.x  // r6.x <- ootf_ys
                
                #line 143
                              log r6.x, r6.x
                              mul r6.x, r6.x, l(0.200000)
                              exp r6.x, r6.x
                              mul r4.xyzw, r4.xyzw, r6.xxxx  // r4.x <- <HLGTOLinear return value>.x; r4.y <- <HLGTOLinear return value>.y; r4.z <- <HLGTOLinear return value>.z; r4.w <- <HLGTOLinear return value>.w
                
                #line 205
                              mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 206
                            else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 207
                              ieq r6.x, cb0[12].w, l(1)
                              if_nz r6.x
                
                #line 209
                                nop 
                                mov r4.xyzw, r4.xyzw
                
                #line 147
                                log r6.xyzw, r4.xyzw
                                mul r6.xyzw, r6.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                exp r4.xyzw, r6.xyzw  // r4.x <- <BT709TOLinear return value>.x; r4.y <- <BT709TOLinear return value>.y; r4.z <- <BT709TOLinear return value>.z; r4.w <- <BT709TOLinear return value>.w
                
                #line 209
                                mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 210
                              else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 211
                                ieq r6.x, cb0[12].w, l(4)
                                if_nz r6.x
                
                #line 213
                                  nop 
                                  mov r4.xyzw, r4.xyzw
                
                #line 152
                                  log r6.xyzw, r4.xyzw
                                  mul r6.xyzw, r6.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                  exp r4.xyzw, r6.xyzw  // r4.x <- <BT470M_SRGB_TOLinear return value>.x; r4.y <- <BT470M_SRGB_TOLinear return value>.y; r4.z <- <BT470M_SRGB_TOLinear return value>.z; r4.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 213
                                  mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 214
                                else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 215
                                  ieq r6.x, cb0[12].w, l(5)
                                  if_nz r6.x
                
                #line 217
                                    nop 
                                    mov r4.xyzw, r4.xyzw
                
                #line 156
                                    log r6.xyzw, r4.xyzw
                                    mul r6.xyzw, r6.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                    exp r4.xyzw, r6.xyzw  // r4.x <- <BT470BGTOLinear return value>.x; r4.y <- <BT470BGTOLinear return value>.y; r4.z <- <BT470BGTOLinear return value>.z; r4.w <- <BT470BGTOLinear return value>.w
                
                #line 217
                                    mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 218
                                  else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 225
                                    mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 226
                                  endif 
                                endif 
                              endif 
                            endif 
                          endif 
                        endif 
                      endif 
                
                #line 387
                      mov r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 388
                      nop 
                      mov r4.xyzw, r4.xyzw
                
                #line 275
                      ine r6.x, cb0[13].z, cb0[13].y
                      if_nz r6.x
                
                #line 277
                        nop 
                        mov r4.xyzw, r4.xyzw
                
                #line 270
                        dp4 r6.x, r4.xyzw, cb1[8].xyzw
                        dp4 r6.y, r4.xyzw, cb1[9].xyzw
                        dp4 r6.z, r4.xyzw, cb1[10].xyzw
                        itof r7.xyz, l(0, 0, 0, 0)
                        max r4.xyz, r6.xyzx, r7.xyzx  // r4.x <- <PrimariesTransform return value>.x; r4.y <- <PrimariesTransform return value>.y; r4.z <- <PrimariesTransform return value>.z
                
                #line 277
                        mov r4.xyz, r4.xyzx  // r4.x <- <transformPrimaries return value>.x; r4.y <- <transformPrimaries return value>.y; r4.z <- <transformPrimaries return value>.z
                
                #line 278
                      else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 281
                        mov r4.xyz, r4.xyzx  // r4.x <- <transformPrimaries return value>.x; r4.y <- <transformPrimaries return value>.y; r4.z <- <transformPrimaries return value>.z
                
                #line 282
                      endif 
                
                #line 388
                      mov r4.xyz, r4.xyzx
                
                #line 389
                      nop 
                      mov r4.xyz, r4.xyzx
                
                #line 287
                      ieq r4.w, cb0[12].w, cb0[13].x
                      if_nz r4.w
                
                #line 289
                        mov r5.xyz, r4.xyzx
                
                #line 290
                      endif   // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 291
                      if_z r4.w
                        ieq r4.w, cb0[13].x, l(1)
                        ieq r6.x, cb0[13].x, l(4)
                        or r4.w, r4.w, r6.x
                        if_nz r4.w
                
                #line 293
                          ieq r4.w, cb0[12].w, l(16)
                          ieq r6.x, cb0[12].w, l(18)
                          or r4.w, r4.w, r6.x
                          if_nz r4.w
                
                #line 295
                            nop 
                            mov r4.xyz, r4.xyzx
                
                #line 184
                            nop 
                            mov r6.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 178
                            mov r4.w, l(0.150000)  // r4.w <- A
                            mov r6.w, l(0.500000)  // r6.w <- B
                
                #line 179
                            mul r7.xyz, r6.xyzx, r4.wwww
                            add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                            mul r7.xyz, r6.xyzx, r7.xyzx
                            add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                            mul r8.xyz, r6.xyzx, r4.wwww
                            add r8.xyz, r6.wwww, r8.xyzx
                            mul r6.xyz, r6.xyzx, r8.xyzx
                            add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                            div r6.xyz, r7.xyzx, r6.xyzx
                            mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                            add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 184
                            mov r6.xyz, r6.xyzx  // r6.x <- HABLE_DIV.x; r6.y <- HABLE_DIV.y; r6.z <- HABLE_DIV.z
                
                #line 185
                            nop 
                            mul r7.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 178
                            mov r4.w, l(0.150000)
                            mov r6.w, l(0.500000)
                
                #line 179
                            mul r8.xyz, r7.xyzx, r4.wwww
                            add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                            mul r8.xyz, r7.xyzx, r8.xyzx
                            add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                            mul r9.xyz, r7.xyzx, r4.wwww
                            add r9.xyz, r6.wwww, r9.xyzx
                            mul r7.xyz, r7.xyzx, r9.xyzx
                            add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                            div r7.xyz, r8.xyzx, r7.xyzx
                            mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                            add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 185
                            div r5.xyz, r7.xyzx, r6.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 186
                            mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 295
                            mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 296
                          else 
                
                #line 299
                            mul r5.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 300
                          endif 
                
                #line 301
                        else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 304
                          mul r5.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 305
                        endif 
                      endif 
                
                #line 389
                      mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 390
                      nop 
                      mov r5.xyz, r5.xyzx
                
                #line 316
                      ieq r4.x, cb0[12].w, cb0[13].x
                      if_nz r4.x
                
                #line 318
                        mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 319
                      else 
                
                #line 320
                        ieq r4.x, cb0[13].x, l(16)
                        if_nz r4.x
                
                #line 322
                          nop 
                          mov r5.xyz, r5.xyzx
                
                #line 165
                          mov r4.x, l(0.159302)  // r4.x <- ST2084_m1
                
                #line 166
                          mov r4.y, l(78.843750)  // r4.y <- ST2084_m2
                
                #line 167
                          mov r4.z, l(0.835938)  // r4.z <- ST2084_c1
                
                #line 168
                          mov r4.w, l(18.851562)  // r4.w <- ST2084_c2
                
                #line 169
                          mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 170
                          itof r6.yzw, l(0, 10000, 10000, 10000)
                          div r6.yzw, r5.xxyz, r6.yyzw
                          log r6.yzw, r6.yyzw
                          mul r6.yzw, r4.xxxx, r6.yyzw
                          exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 171
                          mul r7.xyz, r4.wwww, r6.yzwy
                          add r4.xzw, r4.zzzz, r7.xxyz
                          itof r7.xyz, l(1, 1, 1, 0)
                          mul r6.xyz, r6.yzwy, r6.xxxx
                          add r6.xyz, r6.xyzx, r7.xyzx
                          div r4.xzw, r4.xxzw, r6.xxyz  // r4.x <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 172
                          log r4.xzw, r4.xxzw
                          mul r4.xyz, r4.xzwx, r4.yyyy
                          exp r5.xyz, r4.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                          mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 322
                          mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 323
                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 324
                          ieq r4.x, cb0[13].x, l(18)
                          if_nz r4.x
                
                #line 326
                            nop 
                            mov r5.xyz, r5.xyzx
                
                #line 165
                            mov r4.x, l(0.159302)  // r4.x <- ST2084_m1
                
                #line 166
                            mov r4.y, l(78.843750)  // r4.y <- ST2084_m2
                
                #line 167
                            mov r4.z, l(0.835938)  // r4.z <- ST2084_c1
                
                #line 168
                            mov r4.w, l(18.851562)  // r4.w <- ST2084_c2
                
                #line 169
                            mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 170
                            itof r6.yzw, l(0, 10000, 10000, 10000)
                            div r6.yzw, r5.xxyz, r6.yyzw
                            log r6.yzw, r6.yyzw
                            mul r6.yzw, r4.xxxx, r6.yyzw
                            exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 171
                            mul r7.xyz, r4.wwww, r6.yzwy
                            add r4.xzw, r4.zzzz, r7.xxyz
                            itof r7.xyz, l(1, 1, 1, 0)
                            mul r6.xyz, r6.yzwy, r6.xxxx
                            add r6.xyz, r6.xyzx, r7.xyzx
                            div r4.xzw, r4.xxzw, r6.xxyz  // r4.x <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 172
                            log r4.xzw, r4.xxzw
                            mul r4.xyz, r4.xzwx, r4.yyyy
                            exp r5.xyz, r4.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                            mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 326
                            mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 327
                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 328
                            ieq r4.x, cb0[13].x, l(1)
                            if_nz r4.x
                
                #line 330
                              log r4.xyz, r5.xyzx
                              mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                              exp r5.xyz, r4.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 331
                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 332
                              ieq r4.x, cb0[13].x, l(4)
                              if_nz r4.x
                
                #line 334
                                log r4.xyz, r5.xyzx
                                mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                exp r5.xyz, r4.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 335
                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 338
                                mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 339
                              endif 
                            endif 
                          endif 
                        endif 
                      endif 
                
                #line 390
                      mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 391
                      nop 
                      mov r5.xyz, r5.xyzx
                
                #line 311
                      mov r5.xyz, r5.xyzx  // r5.x <- <adjustRange return value>.x; r5.y <- <adjustRange return value>.y; r5.z <- <adjustRange return value>.z
                
                #line 391
                      mov r5.xyz, r5.xyzx
                
                #line 392
                      nop 
                      mov r5.xyz, r5.xyzx
                
                #line 367
                      mov r5.xyz, r5.xyzx  // r5.x <- <reorderPlanes return value>.x; r5.y <- <reorderPlanes return value>.y; r5.z <- <reorderPlanes return value>.z
                
                #line 392
                      mov r5.xyz, r5.xyzx
                
                #line 393
                    endif 
                  endif 
                
                #line 394
                  mov r5.xyz, r5.xyzx  // r5.x <- <RenderFloat return value>.x; r5.y <- <RenderFloat return value>.y; r5.z <- <RenderFloat return value>.z
                
                #line 411
                  mov r5.xyz, r5.xyzx  // r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z
                
                #line 412
                  itof r5.w, l(1)  // r5.w <- rgbarsp.w
                
                #line 413
                  mov r5.xyz, r5.xyzx  // r5.x <- <GetRGBA return value>.x; r5.y <- <GetRGBA return value>.y; r5.z <- <GetRGBA return value>.z
                  mov r5.w, r5.w  // r5.w <- <GetRGBA return value>.w
                
                #line 414
                else 
                
                #line 415
                  ieq r4.x, cb0[12].x, l(5)
                  if_nz r4.x
                
                #line 417
                    nop 
                
                #line 55
                    itof r4.xyz, l(0, 1, 0, 0)  // r4.x <- <PSPacked422_Reverse return value>.x; r4.y <- <PSPacked422_Reverse return value>.y; r4.z <- <PSPacked422_Reverse return value>.z
                    mov r4.w, l(1.000000)  // r4.w <- <PSPacked422_Reverse return value>.w
                
                #line 417
                    mov r4.xyzw, r4.xyzw  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 418
                    mov r6.xyzw, -cb0[15].xyzw
                    add r4.xyzw, r4.xyzw, r6.xyzw  // r4.x <- rgbasub.x; r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w
                
                #line 419
                    dp4 r5.x, r4.xyzw, r0.xyzw  // r5.x <- rgbarsp.x
                    dp4 r5.y, r4.xyzw, r1.xyzw  // r5.y <- rgbarsp.y
                    dp4 r5.z, r4.xyzw, r2.xyzw  // r5.z <- rgbarsp.z
                    dp4 r5.w, r4.xyzw, r3.xyzw  // r5.w <- rgbarsp.w
                
                #line 420
                    nop 
                    mov r5.xyzw, r5.xyzw
                
                #line 372
                    if_z cb0[14].z
                
                #line 374
                      nop 
                      mov r4.xyzw, r5.xyzw
                
                #line 191
                      ieq r6.x, cb0[12].w, cb0[13].x
                      if_nz r6.x
                
                #line 193
                        mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 194
                      else 
                
                #line 195
                        ieq r6.x, cb0[12].w, l(8)
                        if_nz r6.x
                
                #line 197
                          mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 198
                        else 
                
                #line 199
                          ieq r6.x, cb0[12].w, l(16)
                          if_nz r6.x
                
                #line 201
                            nop 
                            mov r4.xyzw, r4.xyzw
                
                #line 126
                            mov r6.x, l(0.835938)  // r6.x <- ST2084_c1
                
                #line 127
                            mov r6.y, l(18.851562)  // r6.y <- ST2084_c2
                
                #line 128
                            mov r6.z, l(18.687500)  // r6.z <- ST2084_c3
                
                #line 129
                            itof r7.xyzw, l(0, 0, 0, 0)
                            max r7.xyzw, r4.xyzw, r7.xyzw
                            log r7.xyzw, r7.xyzw
                            mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                            exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 130
                            mov r8.xyzw, -r6.xxxx
                            add r8.xyzw, r7.xyzw, r8.xyzw
                            max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                            mul r7.xyzw, r6.zzzz, r7.xyzw
                            mov r7.xyzw, -r7.xyzw
                            add r6.xyzw, r6.yyyy, r7.xyzw
                            div r6.xyzw, r8.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 131
                            log r6.xyzw, r6.xyzw
                            mul r6.xyzw, r6.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                            exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 132
                            itof r7.xyzw, l(10000, 10000, 10000, 10000)
                            mul r4.xyzw, r6.xyzw, r7.xyzw  // r4.x <- <ST2084TOLinear return value>.x; r4.y <- <ST2084TOLinear return value>.y; r4.z <- <ST2084TOLinear return value>.z; r4.w <- <ST2084TOLinear return value>.w
                
                #line 201
                            mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 202
                          else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 203
                            ieq r6.x, cb0[12].w, l(18)
                            if_nz r6.x
                
                #line 205
                              nop 
                              mov r4.xyzw, r4.xyzw
                
                #line 137
                              itof r6.x, l(2000)  // r6.x <- alpha_gain
                
                #line 138
                              nop 
                              mov r4.x, r4.x
                
                #line 111
                              mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 112
                              mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 113
                              mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 114
                              mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 115
                              ge r7.y, l(0.500000), r4.x
                              if_nz r7.y
                
                #line 116
                                mul r7.y, r4.x, r4.x
                                mul r4.x, r7.x, r7.y
                              else   // Prior locations: r4.x <- rgb.x; r4.x <- rgb.x
                
                #line 118
                                mov r6.w, -r6.w
                                add r6.w, r4.x, r6.w
                                div r6.y, r6.w, r6.y
                                mul r6.y, r6.y, l(1.442695)
                                exp r6.y, r6.y
                                add r4.x, r6.z, r6.y
                              endif 
                
                #line 119
                              mov r4.x, r4.x  // r4.x <- <inverse_HLG return value>
                
                #line 138
                              mov r4.x, r4.x  // r4.x <- rgb.x
                
                #line 139
                              nop 
                              mov r4.y, r4.y
                
                #line 111
                              mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 112
                              mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 113
                              mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 114
                              mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 115
                              ge r7.y, l(0.500000), r4.y
                              if_nz r7.y
                
                #line 116
                                mul r7.y, r4.y, r4.y
                                mul r4.y, r7.x, r7.y
                              else   // Prior locations: r4.y <- rgb.y; r4.y <- rgb.y
                
                #line 118
                                mov r6.w, -r6.w
                                add r6.w, r4.y, r6.w
                                div r6.y, r6.w, r6.y
                                mul r6.y, r6.y, l(1.442695)
                                exp r6.y, r6.y
                                add r4.y, r6.z, r6.y
                              endif 
                
                #line 119
                              mov r4.y, r4.y  // r4.y <- <inverse_HLG return value>
                
                #line 139
                              mov r4.y, r4.y  // r4.y <- rgb.y
                
                #line 140
                              nop 
                              mov r4.z, r4.z
                
                #line 111
                              mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 112
                              mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 113
                              mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 114
                              mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 115
                              ge r7.y, l(0.500000), r4.z
                              if_nz r7.y
                
                #line 116
                                mul r7.y, r4.z, r4.z
                                mul r4.z, r7.x, r7.y
                              else   // Prior locations: r4.z <- rgb.z; r4.z <- rgb.z
                
                #line 118
                                mov r6.w, -r6.w
                                add r6.w, r4.z, r6.w
                                div r6.y, r6.w, r6.y
                                mul r6.y, r6.y, l(1.442695)
                                exp r6.y, r6.y
                                add r4.z, r6.z, r6.y
                              endif 
                
                #line 119
                              mov r4.z, r4.z  // r4.z <- <inverse_HLG return value>
                
                #line 140
                              mov r4.z, r4.z  // r4.z <- rgb.z
                
                #line 141
                              mov r6.yzw, l(0,0.262700,0.678000,0.059300)  // r6.y <- ootf_2020.x; r6.z <- ootf_2020.y; r6.w <- ootf_2020.z
                
                #line 142
                              dp3 r6.y, r6.yzwy, r4.xyzx
                              mul r6.x, r6.y, r6.x  // r6.x <- ootf_ys
                
                #line 143
                              log r6.x, r6.x
                              mul r6.x, r6.x, l(0.200000)
                              exp r6.x, r6.x
                              mul r4.xyzw, r4.xyzw, r6.xxxx  // r4.x <- <HLGTOLinear return value>.x; r4.y <- <HLGTOLinear return value>.y; r4.z <- <HLGTOLinear return value>.z; r4.w <- <HLGTOLinear return value>.w
                
                #line 205
                              mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 206
                            else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 207
                              ieq r6.x, cb0[12].w, l(1)
                              if_nz r6.x
                
                #line 209
                                nop 
                                mov r4.xyzw, r4.xyzw
                
                #line 147
                                log r6.xyzw, r4.xyzw
                                mul r6.xyzw, r6.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                exp r4.xyzw, r6.xyzw  // r4.x <- <BT709TOLinear return value>.x; r4.y <- <BT709TOLinear return value>.y; r4.z <- <BT709TOLinear return value>.z; r4.w <- <BT709TOLinear return value>.w
                
                #line 209
                                mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 210
                              else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 211
                                ieq r6.x, cb0[12].w, l(4)
                                if_nz r6.x
                
                #line 213
                                  nop 
                                  mov r4.xyzw, r4.xyzw
                
                #line 152
                                  log r6.xyzw, r4.xyzw
                                  mul r6.xyzw, r6.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                  exp r4.xyzw, r6.xyzw  // r4.x <- <BT470M_SRGB_TOLinear return value>.x; r4.y <- <BT470M_SRGB_TOLinear return value>.y; r4.z <- <BT470M_SRGB_TOLinear return value>.z; r4.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 213
                                  mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 214
                                else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 215
                                  ieq r6.x, cb0[12].w, l(5)
                                  if_nz r6.x
                
                #line 217
                                    nop 
                                    mov r4.xyzw, r4.xyzw
                
                #line 156
                                    log r6.xyzw, r4.xyzw
                                    mul r6.xyzw, r6.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                    exp r4.xyzw, r6.xyzw  // r4.x <- <BT470BGTOLinear return value>.x; r4.y <- <BT470BGTOLinear return value>.y; r4.z <- <BT470BGTOLinear return value>.z; r4.w <- <BT470BGTOLinear return value>.w
                
                #line 217
                                    mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 218
                                  else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 225
                                    mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 226
                                  endif 
                                endif 
                              endif 
                            endif 
                          endif 
                        endif 
                      endif 
                
                #line 374
                      mov r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 375
                      nop 
                      mov r4.xyzw, r4.xyzw
                
                #line 275
                      ine r6.x, cb0[13].z, cb0[13].y
                      if_nz r6.x
                
                #line 277
                        nop 
                        mov r4.xyzw, r4.xyzw
                
                #line 270
                        dp4 r6.x, r4.xyzw, cb1[8].xyzw
                        dp4 r6.y, r4.xyzw, cb1[9].xyzw
                        dp4 r6.z, r4.xyzw, cb1[10].xyzw
                        itof r7.xyz, l(0, 0, 0, 0)
                        max r4.xyz, r6.xyzx, r7.xyzx  // r4.x <- <PrimariesTransform return value>.x; r4.y <- <PrimariesTransform return value>.y; r4.z <- <PrimariesTransform return value>.z
                
                #line 277
                        mov r4.xyz, r4.xyzx  // r4.x <- <transformPrimaries return value>.x; r4.y <- <transformPrimaries return value>.y; r4.z <- <transformPrimaries return value>.z
                
                #line 278
                      else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 281
                        mov r4.xyz, r4.xyzx  // r4.x <- <transformPrimaries return value>.x; r4.y <- <transformPrimaries return value>.y; r4.z <- <transformPrimaries return value>.z
                
                #line 282
                      endif 
                
                #line 375
                      mov r4.xyz, r4.xyzx
                
                #line 376
                      nop 
                      mov r4.xyz, r4.xyzx
                
                #line 287
                      ieq r4.w, cb0[12].w, cb0[13].x
                      if_nz r4.w
                
                #line 289
                        mov r5.xyz, r4.xyzx
                
                #line 290
                      endif   // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 291
                      if_z r4.w
                        ieq r4.w, cb0[13].x, l(1)
                        ieq r6.x, cb0[13].x, l(4)
                        or r4.w, r4.w, r6.x
                        if_nz r4.w
                
                #line 293
                          ieq r4.w, cb0[12].w, l(16)
                          ieq r6.x, cb0[12].w, l(18)
                          or r4.w, r4.w, r6.x
                          if_nz r4.w
                
                #line 295
                            nop 
                            mov r4.xyz, r4.xyzx
                
                #line 184
                            nop 
                            mov r6.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 178
                            mov r4.w, l(0.150000)  // r4.w <- A
                            mov r6.w, l(0.500000)  // r6.w <- B
                
                #line 179
                            mul r7.xyz, r6.xyzx, r4.wwww
                            add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                            mul r7.xyz, r6.xyzx, r7.xyzx
                            add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                            mul r8.xyz, r6.xyzx, r4.wwww
                            add r8.xyz, r6.wwww, r8.xyzx
                            mul r6.xyz, r6.xyzx, r8.xyzx
                            add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                            div r6.xyz, r7.xyzx, r6.xyzx
                            mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                            add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 184
                            mov r6.xyz, r6.xyzx  // r6.x <- HABLE_DIV.x; r6.y <- HABLE_DIV.y; r6.z <- HABLE_DIV.z
                
                #line 185
                            nop 
                            mul r7.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 178
                            mov r4.w, l(0.150000)
                            mov r6.w, l(0.500000)
                
                #line 179
                            mul r8.xyz, r7.xyzx, r4.wwww
                            add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                            mul r8.xyz, r7.xyzx, r8.xyzx
                            add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                            mul r9.xyz, r7.xyzx, r4.wwww
                            add r9.xyz, r6.wwww, r9.xyzx
                            mul r7.xyz, r7.xyzx, r9.xyzx
                            add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                            div r7.xyz, r8.xyzx, r7.xyzx
                            mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                            add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 185
                            div r5.xyz, r7.xyzx, r6.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 186
                            mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 295
                            mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 296
                          else 
                
                #line 299
                            mul r5.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 300
                          endif 
                
                #line 301
                        else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 304
                          mul r5.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 305
                        endif 
                      endif 
                
                #line 376
                      mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 377
                      nop 
                      mov r5.xyz, r5.xyzx
                
                #line 316
                      ieq r4.x, cb0[12].w, cb0[13].x
                      if_nz r4.x
                
                #line 318
                        mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 319
                      else 
                
                #line 320
                        ieq r4.x, cb0[13].x, l(16)
                        if_nz r4.x
                
                #line 322
                          nop 
                          mov r5.xyz, r5.xyzx
                
                #line 165
                          mov r4.x, l(0.159302)  // r4.x <- ST2084_m1
                
                #line 166
                          mov r4.y, l(78.843750)  // r4.y <- ST2084_m2
                
                #line 167
                          mov r4.z, l(0.835938)  // r4.z <- ST2084_c1
                
                #line 168
                          mov r4.w, l(18.851562)  // r4.w <- ST2084_c2
                
                #line 169
                          mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 170
                          itof r6.yzw, l(0, 10000, 10000, 10000)
                          div r6.yzw, r5.xxyz, r6.yyzw
                          log r6.yzw, r6.yyzw
                          mul r6.yzw, r4.xxxx, r6.yyzw
                          exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 171
                          mul r7.xyz, r4.wwww, r6.yzwy
                          add r4.xzw, r4.zzzz, r7.xxyz
                          itof r7.xyz, l(1, 1, 1, 0)
                          mul r6.xyz, r6.yzwy, r6.xxxx
                          add r6.xyz, r6.xyzx, r7.xyzx
                          div r4.xzw, r4.xxzw, r6.xxyz  // r4.x <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 172
                          log r4.xzw, r4.xxzw
                          mul r4.xyz, r4.xzwx, r4.yyyy
                          exp r5.xyz, r4.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                          mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 322
                          mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 323
                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 324
                          ieq r4.x, cb0[13].x, l(18)
                          if_nz r4.x
                
                #line 326
                            nop 
                            mov r5.xyz, r5.xyzx
                
                #line 165
                            mov r4.x, l(0.159302)  // r4.x <- ST2084_m1
                
                #line 166
                            mov r4.y, l(78.843750)  // r4.y <- ST2084_m2
                
                #line 167
                            mov r4.z, l(0.835938)  // r4.z <- ST2084_c1
                
                #line 168
                            mov r4.w, l(18.851562)  // r4.w <- ST2084_c2
                
                #line 169
                            mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 170
                            itof r6.yzw, l(0, 10000, 10000, 10000)
                            div r6.yzw, r5.xxyz, r6.yyzw
                            log r6.yzw, r6.yyzw
                            mul r6.yzw, r4.xxxx, r6.yyzw
                            exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 171
                            mul r7.xyz, r4.wwww, r6.yzwy
                            add r4.xzw, r4.zzzz, r7.xxyz
                            itof r7.xyz, l(1, 1, 1, 0)
                            mul r6.xyz, r6.yzwy, r6.xxxx
                            add r6.xyz, r6.xyzx, r7.xyzx
                            div r4.xzw, r4.xxzw, r6.xxyz  // r4.x <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 172
                            log r4.xzw, r4.xxzw
                            mul r4.xyz, r4.xzwx, r4.yyyy
                            exp r5.xyz, r4.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                            mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 326
                            mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 327
                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 328
                            ieq r4.x, cb0[13].x, l(1)
                            if_nz r4.x
                
                #line 330
                              log r4.xyz, r5.xyzx
                              mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                              exp r5.xyz, r4.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 331
                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 332
                              ieq r4.x, cb0[13].x, l(4)
                              if_nz r4.x
                
                #line 334
                                log r4.xyz, r5.xyzx
                                mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                exp r5.xyz, r4.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 335
                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 338
                                mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 339
                              endif 
                            endif 
                          endif 
                        endif 
                      endif 
                
                #line 377
                      mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 378
                      nop 
                      mov r5.xyz, r5.xyzx
                
                #line 311
                      mov r5.xyz, r5.xyzx  // r5.x <- <adjustRange return value>.x; r5.y <- <adjustRange return value>.y; r5.z <- <adjustRange return value>.z
                
                #line 378
                      mov r5.xyz, r5.xyzx
                
                #line 379
                      nop 
                      mov r5.xyz, r5.xyzx
                
                #line 367
                      mov r5.xyz, r5.xyzx  // r5.x <- <reorderPlanes return value>.x; r5.y <- <reorderPlanes return value>.y; r5.z <- <reorderPlanes return value>.z
                
                #line 379
                      mov r5.xyz, r5.xyzx
                
                #line 380
                    else   // Prior locations: r4.x <- rgbasub.x; r4.y <- rgbasub.y; r4.z <- rgbasub.z; r4.w <- rgbasub.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.w <- rgbarsp.w; r5.w <- rgb.w
                
                #line 372
                      mov r4.x, cb0[14].z  // r4.x <- DrawLine; r4.x <- DrawLine; r4.x <- DrawLine
                
                #line 381
                      ieq r4.x, r4.x, l(1)
                      if_z r4.x
                
                #line 387
                        nop 
                        mov r4.xyzw, r5.xyzw
                
                #line 191
                        ieq r6.x, cb0[12].w, cb0[13].x
                        if_nz r6.x
                
                #line 193
                          mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 194
                        else 
                
                #line 195
                          ieq r6.x, cb0[12].w, l(8)
                          if_nz r6.x
                
                #line 197
                            mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 198
                          else 
                
                #line 199
                            ieq r6.x, cb0[12].w, l(16)
                            if_nz r6.x
                
                #line 201
                              nop 
                              mov r4.xyzw, r4.xyzw
                
                #line 126
                              mov r6.x, l(0.835938)  // r6.x <- ST2084_c1
                
                #line 127
                              mov r6.y, l(18.851562)  // r6.y <- ST2084_c2
                
                #line 128
                              mov r6.z, l(18.687500)  // r6.z <- ST2084_c3
                
                #line 129
                              itof r7.xyzw, l(0, 0, 0, 0)
                              max r7.xyzw, r4.xyzw, r7.xyzw
                              log r7.xyzw, r7.xyzw
                              mul r7.xyzw, r7.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                              exp r7.xyzw, r7.xyzw  // r7.x <- rgb.x; r7.y <- rgb.y; r7.z <- rgb.z; r7.w <- rgb.w
                
                #line 130
                              mov r8.xyzw, -r6.xxxx
                              add r8.xyzw, r7.xyzw, r8.xyzw
                              max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                              mul r7.xyzw, r6.zzzz, r7.xyzw
                              mov r7.xyzw, -r7.xyzw
                              add r6.xyzw, r6.yyyy, r7.xyzw
                              div r6.xyzw, r8.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 131
                              log r6.xyzw, r6.xyzw
                              mul r6.xyzw, r6.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                              exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 132
                              itof r7.xyzw, l(10000, 10000, 10000, 10000)
                              mul r4.xyzw, r6.xyzw, r7.xyzw  // r4.x <- <ST2084TOLinear return value>.x; r4.y <- <ST2084TOLinear return value>.y; r4.z <- <ST2084TOLinear return value>.z; r4.w <- <ST2084TOLinear return value>.w
                
                #line 201
                              mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 202
                            else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 203
                              ieq r6.x, cb0[12].w, l(18)
                              if_nz r6.x
                
                #line 205
                                nop 
                                mov r4.xyzw, r4.xyzw
                
                #line 137
                                itof r6.x, l(2000)  // r6.x <- alpha_gain
                
                #line 138
                                nop 
                                mov r4.x, r4.x
                
                #line 111
                                mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 112
                                mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 113
                                mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 114
                                mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 115
                                ge r7.y, l(0.500000), r4.x
                                if_nz r7.y
                
                #line 116
                                  mul r7.y, r4.x, r4.x
                                  mul r4.x, r7.x, r7.y
                                else   // Prior locations: r4.x <- rgb.x; r4.x <- rgb.x
                
                #line 118
                                  mov r6.w, -r6.w
                                  add r6.w, r4.x, r6.w
                                  div r6.y, r6.w, r6.y
                                  mul r6.y, r6.y, l(1.442695)
                                  exp r6.y, r6.y
                                  add r4.x, r6.z, r6.y
                                endif 
                
                #line 119
                                mov r4.x, r4.x  // r4.x <- <inverse_HLG return value>
                
                #line 138
                                mov r4.x, r4.x  // r4.x <- rgb.x
                
                #line 139
                                nop 
                                mov r4.y, r4.y
                
                #line 111
                                mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 112
                                mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 113
                                mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 114
                                mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 115
                                ge r7.y, l(0.500000), r4.y
                                if_nz r7.y
                
                #line 116
                                  mul r7.y, r4.y, r4.y
                                  mul r4.y, r7.x, r7.y
                                else   // Prior locations: r4.y <- rgb.y; r4.y <- rgb.y
                
                #line 118
                                  mov r6.w, -r6.w
                                  add r6.w, r4.y, r6.w
                                  div r6.y, r6.w, r6.y
                                  mul r6.y, r6.y, l(1.442695)
                                  exp r6.y, r6.y
                                  add r4.y, r6.z, r6.y
                                endif 
                
                #line 119
                                mov r4.y, r4.y  // r4.y <- <inverse_HLG return value>
                
                #line 139
                                mov r4.y, r4.y  // r4.y <- rgb.y
                
                #line 140
                                nop 
                                mov r4.z, r4.z
                
                #line 111
                                mov r6.y, l(0.178833)  // r6.y <- B67_a
                
                #line 112
                                mov r6.z, l(0.284669)  // r6.z <- B67_b
                
                #line 113
                                mov r6.w, l(0.559911)  // r6.w <- B67_c
                
                #line 114
                                mov r7.x, l(4.000000)  // r7.x <- B67_inv_r2
                
                #line 115
                                ge r7.y, l(0.500000), r4.z
                                if_nz r7.y
                
                #line 116
                                  mul r7.y, r4.z, r4.z
                                  mul r4.z, r7.x, r7.y
                                else   // Prior locations: r4.z <- rgb.z; r4.z <- rgb.z
                
                #line 118
                                  mov r6.w, -r6.w
                                  add r6.w, r4.z, r6.w
                                  div r6.y, r6.w, r6.y
                                  mul r6.y, r6.y, l(1.442695)
                                  exp r6.y, r6.y
                                  add r4.z, r6.z, r6.y
                                endif 
                
                #line 119
                                mov r4.z, r4.z  // r4.z <- <inverse_HLG return value>
                
                #line 140
                                mov r4.z, r4.z  // r4.z <- rgb.z
                
                #line 141
                                mov r6.yzw, l(0,0.262700,0.678000,0.059300)  // r6.y <- ootf_2020.x; r6.z <- ootf_2020.y; r6.w <- ootf_2020.z
                
                #line 142
                                dp3 r6.y, r6.yzwy, r4.xyzx
                                mul r6.x, r6.y, r6.x  // r6.x <- ootf_ys
                
                #line 143
                                log r6.x, r6.x
                                mul r6.x, r6.x, l(0.200000)
                                exp r6.x, r6.x
                                mul r4.xyzw, r4.xyzw, r6.xxxx  // r4.x <- <HLGTOLinear return value>.x; r4.y <- <HLGTOLinear return value>.y; r4.z <- <HLGTOLinear return value>.z; r4.w <- <HLGTOLinear return value>.w
                
                #line 205
                                mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 206
                              else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 207
                                ieq r6.x, cb0[12].w, l(1)
                                if_nz r6.x
                
                #line 209
                                  nop 
                                  mov r4.xyzw, r4.xyzw
                
                #line 147
                                  log r6.xyzw, r4.xyzw
                                  mul r6.xyzw, r6.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                  exp r4.xyzw, r6.xyzw  // r4.x <- <BT709TOLinear return value>.x; r4.y <- <BT709TOLinear return value>.y; r4.z <- <BT709TOLinear return value>.z; r4.w <- <BT709TOLinear return value>.w
                
                #line 209
                                  mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 210
                                else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 211
                                  ieq r6.x, cb0[12].w, l(4)
                                  if_nz r6.x
                
                #line 213
                                    nop 
                                    mov r4.xyzw, r4.xyzw
                
                #line 152
                                    log r6.xyzw, r4.xyzw
                                    mul r6.xyzw, r6.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                    exp r4.xyzw, r6.xyzw  // r4.x <- <BT470M_SRGB_TOLinear return value>.x; r4.y <- <BT470M_SRGB_TOLinear return value>.y; r4.z <- <BT470M_SRGB_TOLinear return value>.z; r4.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 213
                                    mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 214
                                  else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 215
                                    ieq r6.x, cb0[12].w, l(5)
                                    if_nz r6.x
                
                #line 217
                                      nop 
                                      mov r4.xyzw, r4.xyzw
                
                #line 156
                                      log r6.xyzw, r4.xyzw
                                      mul r6.xyzw, r6.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                      exp r4.xyzw, r6.xyzw  // r4.x <- <BT470BGTOLinear return value>.x; r4.y <- <BT470BGTOLinear return value>.y; r4.z <- <BT470BGTOLinear return value>.z; r4.w <- <BT470BGTOLinear return value>.w
                
                #line 217
                                      mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 218
                                    else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 225
                                      mov r4.xyzw, r4.xyzw  // r4.x <- <sourceToLinear return value>.x; r4.y <- <sourceToLinear return value>.y; r4.z <- <sourceToLinear return value>.z; r4.w <- <sourceToLinear return value>.w
                
                #line 226
                                    endif 
                                  endif 
                                endif 
                              endif 
                            endif 
                          endif 
                        endif 
                
                #line 387
                        mov r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 388
                        nop 
                        mov r4.xyzw, r4.xyzw
                
                #line 275
                        ine r6.x, cb0[13].z, cb0[13].y
                        if_nz r6.x
                
                #line 277
                          nop 
                          mov r4.xyzw, r4.xyzw
                
                #line 270
                          dp4 r6.x, r4.xyzw, cb1[8].xyzw
                          dp4 r6.y, r4.xyzw, cb1[9].xyzw
                          dp4 r6.z, r4.xyzw, cb1[10].xyzw
                          itof r7.xyz, l(0, 0, 0, 0)
                          max r4.xyz, r6.xyzx, r7.xyzx  // r4.x <- <PrimariesTransform return value>.x; r4.y <- <PrimariesTransform return value>.y; r4.z <- <PrimariesTransform return value>.z
                
                #line 277
                          mov r4.xyz, r4.xyzx  // r4.x <- <transformPrimaries return value>.x; r4.y <- <transformPrimaries return value>.y; r4.z <- <transformPrimaries return value>.z
                
                #line 278
                        else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 281
                          mov r4.xyz, r4.xyzx  // r4.x <- <transformPrimaries return value>.x; r4.y <- <transformPrimaries return value>.y; r4.z <- <transformPrimaries return value>.z
                
                #line 282
                        endif 
                
                #line 388
                        mov r4.xyz, r4.xyzx
                
                #line 389
                        nop 
                        mov r4.xyz, r4.xyzx
                
                #line 287
                        ieq r4.w, cb0[12].w, cb0[13].x
                        if_nz r4.w
                
                #line 289
                          mov r5.xyz, r4.xyzx
                
                #line 290
                        endif   // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 291
                        if_z r4.w
                          ieq r4.w, cb0[13].x, l(1)
                          ieq r6.x, cb0[13].x, l(4)
                          or r4.w, r4.w, r6.x
                          if_nz r4.w
                
                #line 293
                            ieq r4.w, cb0[12].w, l(16)
                            ieq r6.x, cb0[12].w, l(18)
                            or r4.w, r4.w, r6.x
                            if_nz r4.w
                
                #line 295
                              nop 
                              mov r4.xyz, r4.xyzx
                
                #line 184
                              nop 
                              mov r6.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 178
                              mov r4.w, l(0.150000)  // r4.w <- A
                              mov r6.w, l(0.500000)  // r6.w <- B
                
                #line 179
                              mul r7.xyz, r6.xyzx, r4.wwww
                              add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                              mul r7.xyz, r6.xyzx, r7.xyzx
                              add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                              mul r8.xyz, r6.xyzx, r4.wwww
                              add r8.xyz, r6.wwww, r8.xyzx
                              mul r6.xyz, r6.xyzx, r8.xyzx
                              add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                              div r6.xyz, r7.xyzx, r6.xyzx
                              mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                              add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 184
                              mov r6.xyz, r6.xyzx  // r6.x <- HABLE_DIV.x; r6.y <- HABLE_DIV.y; r6.z <- HABLE_DIV.z
                
                #line 185
                              nop 
                              mul r7.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 178
                              mov r4.w, l(0.150000)
                              mov r6.w, l(0.500000)
                
                #line 179
                              mul r8.xyz, r7.xyzx, r4.wwww
                              add r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                              mul r8.xyz, r7.xyzx, r8.xyzx
                              add r8.xyz, r8.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                              mul r9.xyz, r7.xyzx, r4.wwww
                              add r9.xyz, r6.wwww, r9.xyzx
                              mul r7.xyz, r7.xyzx, r9.xyzx
                              add r7.xyz, r7.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                              div r7.xyz, r8.xyzx, r7.xyzx
                              mov r8.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                              add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <hable return value>.x; r7.y <- <hable return value>.y; r7.z <- <hable return value>.z
                
                #line 185
                              div r5.xyz, r7.xyzx, r6.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 186
                              mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 295
                              mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 296
                            else 
                
                #line 299
                              mul r5.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 300
                            endif 
                
                #line 301
                          else   // Prior locations: r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z
                
                #line 304
                            mul r5.xyz, r4.xyzx, cb0[14].yyyy
                
                #line 305
                          endif 
                        endif 
                
                #line 389
                        mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 390
                        nop 
                        mov r5.xyz, r5.xyzx
                
                #line 316
                        ieq r4.x, cb0[12].w, cb0[13].x
                        if_nz r4.x
                
                #line 318
                          mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 319
                        else 
                
                #line 320
                          ieq r4.x, cb0[13].x, l(16)
                          if_nz r4.x
                
                #line 322
                            nop 
                            mov r5.xyz, r5.xyzx
                
                #line 165
                            mov r4.x, l(0.159302)  // r4.x <- ST2084_m1
                
                #line 166
                            mov r4.y, l(78.843750)  // r4.y <- ST2084_m2
                
                #line 167
                            mov r4.z, l(0.835938)  // r4.z <- ST2084_c1
                
                #line 168
                            mov r4.w, l(18.851562)  // r4.w <- ST2084_c2
                
                #line 169
                            mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 170
                            itof r6.yzw, l(0, 10000, 10000, 10000)
                            div r6.yzw, r5.xxyz, r6.yyzw
                            log r6.yzw, r6.yyzw
                            mul r6.yzw, r4.xxxx, r6.yyzw
                            exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 171
                            mul r7.xyz, r4.wwww, r6.yzwy
                            add r4.xzw, r4.zzzz, r7.xxyz
                            itof r7.xyz, l(1, 1, 1, 0)
                            mul r6.xyz, r6.yzwy, r6.xxxx
                            add r6.xyz, r6.xyzx, r7.xyzx
                            div r4.xzw, r4.xxzw, r6.xxyz  // r4.x <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 172
                            log r4.xzw, r4.xxzw
                            mul r4.xyz, r4.xzwx, r4.yyyy
                            exp r5.xyz, r4.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                            mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 322
                            mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 323
                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 324
                            ieq r4.x, cb0[13].x, l(18)
                            if_nz r4.x
                
                #line 326
                              nop 
                              mov r5.xyz, r5.xyzx
                
                #line 165
                              mov r4.x, l(0.159302)  // r4.x <- ST2084_m1
                
                #line 166
                              mov r4.y, l(78.843750)  // r4.y <- ST2084_m2
                
                #line 167
                              mov r4.z, l(0.835938)  // r4.z <- ST2084_c1
                
                #line 168
                              mov r4.w, l(18.851562)  // r4.w <- ST2084_c2
                
                #line 169
                              mov r6.x, l(18.687500)  // r6.x <- ST2084_c3
                
                #line 170
                              itof r6.yzw, l(0, 10000, 10000, 10000)
                              div r6.yzw, r5.xxyz, r6.yyzw
                              log r6.yzw, r6.yyzw
                              mul r6.yzw, r4.xxxx, r6.yyzw
                              exp r6.yzw, r6.yyzw  // r6.y <- rgb.x; r6.z <- rgb.y; r6.w <- rgb.z
                
                #line 171
                              mul r7.xyz, r4.wwww, r6.yzwy
                              add r4.xzw, r4.zzzz, r7.xxyz
                              itof r7.xyz, l(1, 1, 1, 0)
                              mul r6.xyz, r6.yzwy, r6.xxxx
                              add r6.xyz, r6.xyzx, r7.xyzx
                              div r4.xzw, r4.xxzw, r6.xxyz  // r4.x <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 172
                              log r4.xzw, r4.xxzw
                              mul r4.xyz, r4.xzwx, r4.yyyy
                              exp r5.xyz, r4.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                              mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 326
                              mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 327
                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 328
                              ieq r4.x, cb0[13].x, l(1)
                              if_nz r4.x
                
                #line 330
                                log r4.xyz, r5.xyzx
                                mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                exp r5.xyz, r4.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 331
                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 332
                                ieq r4.x, cb0[13].x, l(4)
                                if_nz r4.x
                
                #line 334
                                  log r4.xyz, r5.xyzx
                                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                  exp r5.xyz, r4.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 335
                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 338
                                  mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 339
                                endif 
                              endif 
                            endif 
                          endif 
                        endif 
                
                #line 390
                        mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 391
                        nop 
                        mov r5.xyz, r5.xyzx
                
                #line 311
                        mov r5.xyz, r5.xyzx  // r5.x <- <adjustRange return value>.x; r5.y <- <adjustRange return value>.y; r5.z <- <adjustRange return value>.z
                
                #line 391
                        mov r5.xyz, r5.xyzx
                
                #line 392
                        nop 
                        mov r5.xyz, r5.xyzx
                
                #line 367
                        mov r5.xyz, r5.xyzx  // r5.x <- <reorderPlanes return value>.x; r5.y <- <reorderPlanes return value>.y; r5.z <- <reorderPlanes return value>.z
                
                #line 392
                        mov r5.xyz, r5.xyzx
                
                #line 393
                      endif 
                    endif 
                
                #line 394
                    mov r5.xyz, r5.xyzx  // r5.x <- <RenderFloat return value>.x; r5.y <- <RenderFloat return value>.y; r5.z <- <RenderFloat return value>.z
                
                #line 420
                    mov r5.xyz, r5.xyzx  // r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z
                
                #line 421
                    itof r5.w, l(1)  // r5.w <- rgbarsp.w
                
                #line 422
                    mov r5.xyz, r5.xyzx  // r5.x <- <GetRGBA return value>.x; r5.y <- <GetRGBA return value>.y; r5.z <- <GetRGBA return value>.z
                    mov r5.w, r5.w  // r5.w <- <GetRGBA return value>.w
                
                #line 423
                  else 
                
                #line 424
                    ieq r4.x, cb0[12].x, l(3)
                    if_nz r4.x
                
                #line 426
                      nop 
                
                #line 55
                      itof r4.xyz, l(0, 1, 0, 0)  // r4.x <- <PSPacked422_Reverse return value>.x; r4.y <- <PSPacked422_Reverse return value>.y; r4.z <- <PSPacked422_Reverse return value>.z
                      mov r4.w, l(1.000000)  // r4.w <- <PSPacked422_Reverse return value>.w
                
                #line 426
                      mov r4.xyzw, r4.xyzw  // r4.x <- rgba.x; r4.y <- rgba.y; r4.z <- rgba.z; r4.w <- rgba.w
                
                #line 427
                      dp4 r6.x, r4.xyzw, cb1[0].xyzw  // r6.x <- rr.x
                      dp4 r6.y, r4.xyzw, cb1[1].xyzw  // r6.y <- rr.y
                      dp4 r6.z, r4.xyzw, cb1[2].xyzw  // r6.z <- rr.z
                      dp4 r6.w, r4.xyzw, cb1[3].xyzw  // r6.w <- rr.w
                
                #line 428
                      dp4 r4.x, r6.xyzw, r0.xyzw
                      dp4 r4.y, r6.xyzw, r1.xyzw
                      dp4 r4.z, r6.xyzw, r2.xyzw
                      dp4 r4.w, r6.xyzw, r3.xyzw
                      itof r3.xyzw, l(0, 0, 0, 0)
                      max r5.xyzw, r3.xyzw, r4.xyzw  // r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.w <- rgbarsp.w
                
                #line 429
                      nop 
                      mov r5.xyzw, r5.xyzw
                
                #line 372
                      if_z cb0[14].z
                
                #line 374
                        nop 
                        mov r3.xyzw, r5.xyzw
                
                #line 191
                        ieq r4.x, cb0[12].w, cb0[13].x
                        if_nz r4.x
                
                #line 193
                          mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 194
                        else 
                
                #line 195
                          ieq r4.x, cb0[12].w, l(8)
                          if_nz r4.x
                
                #line 197
                            mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 198
                          else 
                
                #line 199
                            ieq r4.x, cb0[12].w, l(16)
                            if_nz r4.x
                
                #line 201
                              nop 
                              mov r3.xyzw, r3.xyzw
                
                #line 126
                              mov r4.x, l(0.835938)  // r4.x <- ST2084_c1
                
                #line 127
                              mov r4.y, l(18.851562)  // r4.y <- ST2084_c2
                
                #line 128
                              mov r4.z, l(18.687500)  // r4.z <- ST2084_c3
                
                #line 129
                              itof r6.xyzw, l(0, 0, 0, 0)
                              max r6.xyzw, r3.xyzw, r6.xyzw
                              log r6.xyzw, r6.xyzw
                              mul r6.xyzw, r6.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                              exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 130
                              mov r7.xyzw, -r4.xxxx
                              add r7.xyzw, r6.xyzw, r7.xyzw
                              max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                              mul r6.xyzw, r4.zzzz, r6.xyzw
                              mov r6.xyzw, -r6.xyzw
                              add r4.xyzw, r4.yyyy, r6.xyzw
                              div r4.xyzw, r7.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 131
                              log r4.xyzw, r4.xyzw
                              mul r4.xyzw, r4.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                              exp r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 132
                              itof r6.xyzw, l(10000, 10000, 10000, 10000)
                              mul r3.xyzw, r4.xyzw, r6.xyzw  // r3.x <- <ST2084TOLinear return value>.x; r3.y <- <ST2084TOLinear return value>.y; r3.z <- <ST2084TOLinear return value>.z; r3.w <- <ST2084TOLinear return value>.w
                
                #line 201
                              mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 202
                            else   // Prior locations: r6.x <- rr.x; r6.y <- rr.y; r6.z <- rr.z; r6.w <- rr.w; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 203
                              ieq r4.x, cb0[12].w, l(18)
                              if_nz r4.x
                
                #line 205
                                nop 
                                mov r3.xyzw, r3.xyzw
                
                #line 137
                                itof r4.x, l(2000)  // r4.x <- alpha_gain
                
                #line 138
                                nop 
                                mov r3.x, r3.x
                
                #line 111
                                mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                mov r6.x, l(4.000000)  // r6.x <- B67_inv_r2
                
                #line 115
                                ge r6.y, l(0.500000), r3.x
                                if_nz r6.y
                
                #line 116
                                  mul r6.y, r3.x, r3.x
                                  mul r3.x, r6.x, r6.y
                                else   // Prior locations: r3.x <- rgb.x; r3.x <- rgb.x
                
                #line 118
                                  mov r4.w, -r4.w
                                  add r4.w, r3.x, r4.w
                                  div r4.y, r4.w, r4.y
                                  mul r4.y, r4.y, l(1.442695)
                                  exp r4.y, r4.y
                                  add r3.x, r4.z, r4.y
                                endif 
                
                #line 119
                                mov r3.x, r3.x  // r3.x <- <inverse_HLG return value>
                
                #line 138
                                mov r3.x, r3.x  // r3.x <- rgb.x
                
                #line 139
                                nop 
                                mov r3.y, r3.y
                
                #line 111
                                mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                mov r6.x, l(4.000000)  // r6.x <- B67_inv_r2
                
                #line 115
                                ge r6.y, l(0.500000), r3.y
                                if_nz r6.y
                
                #line 116
                                  mul r6.y, r3.y, r3.y
                                  mul r3.y, r6.x, r6.y
                                else   // Prior locations: r3.y <- rgb.y; r3.y <- rgb.y
                
                #line 118
                                  mov r4.w, -r4.w
                                  add r4.w, r3.y, r4.w
                                  div r4.y, r4.w, r4.y
                                  mul r4.y, r4.y, l(1.442695)
                                  exp r4.y, r4.y
                                  add r3.y, r4.z, r4.y
                                endif 
                
                #line 119
                                mov r3.y, r3.y  // r3.y <- <inverse_HLG return value>
                
                #line 139
                                mov r3.y, r3.y  // r3.y <- rgb.y
                
                #line 140
                                nop 
                                mov r3.z, r3.z
                
                #line 111
                                mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                mov r6.x, l(4.000000)  // r6.x <- B67_inv_r2
                
                #line 115
                                ge r6.y, l(0.500000), r3.z
                                if_nz r6.y
                
                #line 116
                                  mul r6.y, r3.z, r3.z
                                  mul r3.z, r6.x, r6.y
                                else   // Prior locations: r3.z <- rgb.z; r3.z <- rgb.z
                
                #line 118
                                  mov r4.w, -r4.w
                                  add r4.w, r3.z, r4.w
                                  div r4.y, r4.w, r4.y
                                  mul r4.y, r4.y, l(1.442695)
                                  exp r4.y, r4.y
                                  add r3.z, r4.z, r4.y
                                endif 
                
                #line 119
                                mov r3.z, r3.z  // r3.z <- <inverse_HLG return value>
                
                #line 140
                                mov r3.z, r3.z  // r3.z <- rgb.z
                
                #line 141
                                mov r4.yzw, l(0,0.262700,0.678000,0.059300)  // r4.y <- ootf_2020.x; r4.z <- ootf_2020.y; r4.w <- ootf_2020.z
                
                #line 142
                                dp3 r4.y, r4.yzwy, r3.xyzx
                                mul r4.x, r4.y, r4.x  // r4.x <- ootf_ys
                
                #line 143
                                log r4.x, r4.x
                                mul r4.x, r4.x, l(0.200000)
                                exp r4.x, r4.x
                                mul r3.xyzw, r3.xyzw, r4.xxxx  // r3.x <- <HLGTOLinear return value>.x; r3.y <- <HLGTOLinear return value>.y; r3.z <- <HLGTOLinear return value>.z; r3.w <- <HLGTOLinear return value>.w
                
                #line 205
                                mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 206
                              else   // Prior locations: r6.x <- rr.x; r6.y <- rr.y; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 207
                                ieq r4.x, cb0[12].w, l(1)
                                if_nz r4.x
                
                #line 209
                                  nop 
                                  mov r3.xyzw, r3.xyzw
                
                #line 147
                                  log r4.xyzw, r3.xyzw
                                  mul r4.xyzw, r4.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                  exp r3.xyzw, r4.xyzw  // r3.x <- <BT709TOLinear return value>.x; r3.y <- <BT709TOLinear return value>.y; r3.z <- <BT709TOLinear return value>.z; r3.w <- <BT709TOLinear return value>.w
                
                #line 209
                                  mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 210
                                else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 211
                                  ieq r4.x, cb0[12].w, l(4)
                                  if_nz r4.x
                
                #line 213
                                    nop 
                                    mov r3.xyzw, r3.xyzw
                
                #line 152
                                    log r4.xyzw, r3.xyzw
                                    mul r4.xyzw, r4.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                    exp r3.xyzw, r4.xyzw  // r3.x <- <BT470M_SRGB_TOLinear return value>.x; r3.y <- <BT470M_SRGB_TOLinear return value>.y; r3.z <- <BT470M_SRGB_TOLinear return value>.z; r3.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 213
                                    mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 214
                                  else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 215
                                    ieq r4.x, cb0[12].w, l(5)
                                    if_nz r4.x
                
                #line 217
                                      nop 
                                      mov r3.xyzw, r3.xyzw
                
                #line 156
                                      log r4.xyzw, r3.xyzw
                                      mul r4.xyzw, r4.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                      exp r3.xyzw, r4.xyzw  // r3.x <- <BT470BGTOLinear return value>.x; r3.y <- <BT470BGTOLinear return value>.y; r3.z <- <BT470BGTOLinear return value>.z; r3.w <- <BT470BGTOLinear return value>.w
                
                #line 217
                                      mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 218
                                    else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 225
                                      mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 226
                                    endif 
                                  endif 
                                endif 
                              endif 
                            endif 
                          endif 
                        endif 
                
                #line 374
                        mov r3.xyzw, r3.xyzw  // r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 375
                        nop 
                        mov r3.xyzw, r3.xyzw
                
                #line 275
                        ine r4.x, cb0[13].z, cb0[13].y
                        if_nz r4.x
                
                #line 277
                          nop 
                          mov r3.xyzw, r3.xyzw
                
                #line 270
                          dp4 r4.x, r3.xyzw, cb1[8].xyzw
                          dp4 r4.y, r3.xyzw, cb1[9].xyzw
                          dp4 r4.z, r3.xyzw, cb1[10].xyzw
                          itof r6.xyz, l(0, 0, 0, 0)
                          max r3.xyz, r4.xyzx, r6.xyzx  // r3.x <- <PrimariesTransform return value>.x; r3.y <- <PrimariesTransform return value>.y; r3.z <- <PrimariesTransform return value>.z
                
                #line 277
                          mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 278
                        else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 281
                          mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 282
                        endif 
                
                #line 375
                        mov r3.xyz, r3.xyzx
                
                #line 376
                        nop 
                        mov r3.xyz, r3.xyzx
                
                #line 287
                        ieq r3.w, cb0[12].w, cb0[13].x
                        if_nz r3.w
                
                #line 289
                          mov r5.xyz, r3.xyzx
                
                #line 290
                        endif   // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 291
                        if_z r3.w
                          ieq r3.w, cb0[13].x, l(1)
                          ieq r4.x, cb0[13].x, l(4)
                          or r3.w, r3.w, r4.x
                          if_nz r3.w
                
                #line 293
                            ieq r3.w, cb0[12].w, l(16)
                            ieq r4.x, cb0[12].w, l(18)
                            or r3.w, r3.w, r4.x
                            if_nz r3.w
                
                #line 295
                              nop 
                              mov r3.xyz, r3.xyzx
                
                #line 184
                              nop 
                              mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 178
                              mov r3.w, l(0.150000)  // r3.w <- A
                              mov r4.w, l(0.500000)  // r4.w <- B
                
                #line 179
                              mul r6.xyz, r4.xyzx, r3.wwww
                              add r6.xyz, r6.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                              mul r6.xyz, r4.xyzx, r6.xyzx
                              add r6.xyz, r6.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                              mul r7.xyz, r4.xyzx, r3.wwww
                              add r7.xyz, r4.wwww, r7.xyzx
                              mul r4.xyz, r4.xyzx, r7.xyzx
                              add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                              div r4.xyz, r6.xyzx, r4.xyzx
                              mov r6.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                              add r4.xyz, r4.xyzx, r6.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 184
                              mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 185
                              nop 
                              mul r6.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 178
                              mov r3.w, l(0.150000)
                              mov r4.w, l(0.500000)
                
                #line 179
                              mul r7.xyz, r6.xyzx, r3.wwww
                              add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                              mul r7.xyz, r6.xyzx, r7.xyzx
                              add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                              mul r8.xyz, r6.xyzx, r3.wwww
                              add r8.xyz, r4.wwww, r8.xyzx
                              mul r6.xyz, r6.xyzx, r8.xyzx
                              add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                              div r6.xyz, r7.xyzx, r6.xyzx
                              mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                              add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 185
                              div r5.xyz, r6.xyzx, r4.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 186
                              mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 295
                              mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 296
                            else 
                
                #line 299
                              mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 300
                            endif 
                
                #line 301
                          else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 304
                            mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 305
                          endif 
                        endif 
                
                #line 376
                        mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 377
                        nop 
                        mov r5.xyz, r5.xyzx
                
                #line 316
                        ieq r3.x, cb0[12].w, cb0[13].x
                        if_nz r3.x
                
                #line 318
                          mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 319
                        else 
                
                #line 320
                          ieq r3.x, cb0[13].x, l(16)
                          if_nz r3.x
                
                #line 322
                            nop 
                            mov r5.xyz, r5.xyzx
                
                #line 165
                            mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                            mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                            mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                            mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                            mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                            itof r4.yzw, l(0, 10000, 10000, 10000)
                            div r4.yzw, r5.xxyz, r4.yyzw
                            log r4.yzw, r4.yyzw
                            mul r4.yzw, r3.xxxx, r4.yyzw
                            exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                            mul r6.xyz, r3.wwww, r4.yzwy
                            add r3.xzw, r3.zzzz, r6.xxyz
                            itof r6.xyz, l(1, 1, 1, 0)
                            mul r4.xyz, r4.yzwy, r4.xxxx
                            add r4.xyz, r4.xyzx, r6.xyzx
                            div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                            log r3.xzw, r3.xxzw
                            mul r3.xyz, r3.xzwx, r3.yyyy
                            exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                            mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 322
                            mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 323
                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 324
                            ieq r3.x, cb0[13].x, l(18)
                            if_nz r3.x
                
                #line 326
                              nop 
                              mov r5.xyz, r5.xyzx
                
                #line 165
                              mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                              mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                              mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                              mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                              mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                              itof r4.yzw, l(0, 10000, 10000, 10000)
                              div r4.yzw, r5.xxyz, r4.yyzw
                              log r4.yzw, r4.yyzw
                              mul r4.yzw, r3.xxxx, r4.yyzw
                              exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                              mul r6.xyz, r3.wwww, r4.yzwy
                              add r3.xzw, r3.zzzz, r6.xxyz
                              itof r6.xyz, l(1, 1, 1, 0)
                              mul r4.xyz, r4.yzwy, r4.xxxx
                              add r4.xyz, r4.xyzx, r6.xyzx
                              div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                              log r3.xzw, r3.xxzw
                              mul r3.xyz, r3.xzwx, r3.yyyy
                              exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                              mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 326
                              mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 327
                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 328
                              ieq r3.x, cb0[13].x, l(1)
                              if_nz r3.x
                
                #line 330
                                log r3.xyz, r5.xyzx
                                mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 331
                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 332
                                ieq r3.x, cb0[13].x, l(4)
                                if_nz r3.x
                
                #line 334
                                  log r3.xyz, r5.xyzx
                                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                  exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 335
                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 338
                                  mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 339
                                endif 
                              endif 
                            endif 
                          endif 
                        endif 
                
                #line 377
                        mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 378
                        nop 
                        mov r5.xyz, r5.xyzx
                
                #line 311
                        mov r5.xyz, r5.xyzx  // r5.x <- <adjustRange return value>.x; r5.y <- <adjustRange return value>.y; r5.z <- <adjustRange return value>.z
                
                #line 378
                        mov r5.xyz, r5.xyzx
                
                #line 379
                        nop 
                        mov r5.xyz, r5.xyzx
                
                #line 367
                        mov r5.xyz, r5.xyzx  // r5.x <- <reorderPlanes return value>.x; r5.y <- <reorderPlanes return value>.y; r5.z <- <reorderPlanes return value>.z
                
                #line 379
                        mov r5.xyz, r5.xyzx
                
                #line 380
                      else   // Prior locations: r6.x <- rr.x; r6.y <- rr.y; r6.z <- rr.z; r6.w <- rr.w; r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z; r5.w <- rgbarsp.w; r5.w <- rgb.w
                
                #line 372
                        mov r3.x, cb0[14].z  // r3.x <- DrawLine; r3.x <- DrawLine; r3.x <- DrawLine
                
                #line 381
                        ieq r3.x, r3.x, l(1)
                        if_z r3.x
                
                #line 387
                          nop 
                          mov r3.xyzw, r5.xyzw
                
                #line 191
                          ieq r4.x, cb0[12].w, cb0[13].x
                          if_nz r4.x
                
                #line 193
                            mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 194
                          else 
                
                #line 195
                            ieq r4.x, cb0[12].w, l(8)
                            if_nz r4.x
                
                #line 197
                              mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 198
                            else 
                
                #line 199
                              ieq r4.x, cb0[12].w, l(16)
                              if_nz r4.x
                
                #line 201
                                nop 
                                mov r3.xyzw, r3.xyzw
                
                #line 126
                                mov r4.x, l(0.835938)  // r4.x <- ST2084_c1
                
                #line 127
                                mov r4.y, l(18.851562)  // r4.y <- ST2084_c2
                
                #line 128
                                mov r4.z, l(18.687500)  // r4.z <- ST2084_c3
                
                #line 129
                                itof r6.xyzw, l(0, 0, 0, 0)
                                max r6.xyzw, r3.xyzw, r6.xyzw
                                log r6.xyzw, r6.xyzw
                                mul r6.xyzw, r6.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 130
                                mov r7.xyzw, -r4.xxxx
                                add r7.xyzw, r6.xyzw, r7.xyzw
                                max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                mul r6.xyzw, r4.zzzz, r6.xyzw
                                mov r6.xyzw, -r6.xyzw
                                add r4.xyzw, r4.yyyy, r6.xyzw
                                div r4.xyzw, r7.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 131
                                log r4.xyzw, r4.xyzw
                                mul r4.xyzw, r4.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                exp r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 132
                                itof r6.xyzw, l(10000, 10000, 10000, 10000)
                                mul r3.xyzw, r4.xyzw, r6.xyzw  // r3.x <- <ST2084TOLinear return value>.x; r3.y <- <ST2084TOLinear return value>.y; r3.z <- <ST2084TOLinear return value>.z; r3.w <- <ST2084TOLinear return value>.w
                
                #line 201
                                mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 202
                              else   // Prior locations: r6.x <- rr.x; r6.y <- rr.y; r6.z <- rr.z; r6.w <- rr.w; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 203
                                ieq r4.x, cb0[12].w, l(18)
                                if_nz r4.x
                
                #line 205
                                  nop 
                                  mov r3.xyzw, r3.xyzw
                
                #line 137
                                  itof r4.x, l(2000)  // r4.x <- alpha_gain
                
                #line 138
                                  nop 
                                  mov r3.x, r3.x
                
                #line 111
                                  mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                  mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                  mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                  mov r6.x, l(4.000000)  // r6.x <- B67_inv_r2
                
                #line 115
                                  ge r6.y, l(0.500000), r3.x
                                  if_nz r6.y
                
                #line 116
                                    mul r6.y, r3.x, r3.x
                                    mul r3.x, r6.x, r6.y
                                  else   // Prior locations: r3.x <- rgb.x; r3.x <- rgb.x
                
                #line 118
                                    mov r4.w, -r4.w
                                    add r4.w, r3.x, r4.w
                                    div r4.y, r4.w, r4.y
                                    mul r4.y, r4.y, l(1.442695)
                                    exp r4.y, r4.y
                                    add r3.x, r4.z, r4.y
                                  endif 
                
                #line 119
                                  mov r3.x, r3.x  // r3.x <- <inverse_HLG return value>
                
                #line 138
                                  mov r3.x, r3.x  // r3.x <- rgb.x
                
                #line 139
                                  nop 
                                  mov r3.y, r3.y
                
                #line 111
                                  mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                  mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                  mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                  mov r6.x, l(4.000000)  // r6.x <- B67_inv_r2
                
                #line 115
                                  ge r6.y, l(0.500000), r3.y
                                  if_nz r6.y
                
                #line 116
                                    mul r6.y, r3.y, r3.y
                                    mul r3.y, r6.x, r6.y
                                  else   // Prior locations: r3.y <- rgb.y; r3.y <- rgb.y
                
                #line 118
                                    mov r4.w, -r4.w
                                    add r4.w, r3.y, r4.w
                                    div r4.y, r4.w, r4.y
                                    mul r4.y, r4.y, l(1.442695)
                                    exp r4.y, r4.y
                                    add r3.y, r4.z, r4.y
                                  endif 
                
                #line 119
                                  mov r3.y, r3.y  // r3.y <- <inverse_HLG return value>
                
                #line 139
                                  mov r3.y, r3.y  // r3.y <- rgb.y
                
                #line 140
                                  nop 
                                  mov r3.z, r3.z
                
                #line 111
                                  mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                  mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                  mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                  mov r6.x, l(4.000000)  // r6.x <- B67_inv_r2
                
                #line 115
                                  ge r6.y, l(0.500000), r3.z
                                  if_nz r6.y
                
                #line 116
                                    mul r6.y, r3.z, r3.z
                                    mul r3.z, r6.x, r6.y
                                  else   // Prior locations: r3.z <- rgb.z; r3.z <- rgb.z
                
                #line 118
                                    mov r4.w, -r4.w
                                    add r4.w, r3.z, r4.w
                                    div r4.y, r4.w, r4.y
                                    mul r4.y, r4.y, l(1.442695)
                                    exp r4.y, r4.y
                                    add r3.z, r4.z, r4.y
                                  endif 
                
                #line 119
                                  mov r3.z, r3.z  // r3.z <- <inverse_HLG return value>
                
                #line 140
                                  mov r3.z, r3.z  // r3.z <- rgb.z
                
                #line 141
                                  mov r4.yzw, l(0,0.262700,0.678000,0.059300)  // r4.y <- ootf_2020.x; r4.z <- ootf_2020.y; r4.w <- ootf_2020.z
                
                #line 142
                                  dp3 r4.y, r4.yzwy, r3.xyzx
                                  mul r4.x, r4.y, r4.x  // r4.x <- ootf_ys
                
                #line 143
                                  log r4.x, r4.x
                                  mul r4.x, r4.x, l(0.200000)
                                  exp r4.x, r4.x
                                  mul r3.xyzw, r3.xyzw, r4.xxxx  // r3.x <- <HLGTOLinear return value>.x; r3.y <- <HLGTOLinear return value>.y; r3.z <- <HLGTOLinear return value>.z; r3.w <- <HLGTOLinear return value>.w
                
                #line 205
                                  mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 206
                                else   // Prior locations: r6.x <- rr.x; r6.y <- rr.y; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 207
                                  ieq r4.x, cb0[12].w, l(1)
                                  if_nz r4.x
                
                #line 209
                                    nop 
                                    mov r3.xyzw, r3.xyzw
                
                #line 147
                                    log r4.xyzw, r3.xyzw
                                    mul r4.xyzw, r4.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                    exp r3.xyzw, r4.xyzw  // r3.x <- <BT709TOLinear return value>.x; r3.y <- <BT709TOLinear return value>.y; r3.z <- <BT709TOLinear return value>.z; r3.w <- <BT709TOLinear return value>.w
                
                #line 209
                                    mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 210
                                  else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 211
                                    ieq r4.x, cb0[12].w, l(4)
                                    if_nz r4.x
                
                #line 213
                                      nop 
                                      mov r3.xyzw, r3.xyzw
                
                #line 152
                                      log r4.xyzw, r3.xyzw
                                      mul r4.xyzw, r4.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                      exp r3.xyzw, r4.xyzw  // r3.x <- <BT470M_SRGB_TOLinear return value>.x; r3.y <- <BT470M_SRGB_TOLinear return value>.y; r3.z <- <BT470M_SRGB_TOLinear return value>.z; r3.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 213
                                      mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 214
                                    else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 215
                                      ieq r4.x, cb0[12].w, l(5)
                                      if_nz r4.x
                
                #line 217
                                        nop 
                                        mov r3.xyzw, r3.xyzw
                
                #line 156
                                        log r4.xyzw, r3.xyzw
                                        mul r4.xyzw, r4.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                        exp r3.xyzw, r4.xyzw  // r3.x <- <BT470BGTOLinear return value>.x; r3.y <- <BT470BGTOLinear return value>.y; r3.z <- <BT470BGTOLinear return value>.z; r3.w <- <BT470BGTOLinear return value>.w
                
                #line 217
                                        mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 218
                                      else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 225
                                        mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 226
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                            endif 
                          endif 
                
                #line 387
                          mov r3.xyzw, r3.xyzw  // r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 388
                          nop 
                          mov r3.xyzw, r3.xyzw
                
                #line 275
                          ine r4.x, cb0[13].z, cb0[13].y
                          if_nz r4.x
                
                #line 277
                            nop 
                            mov r3.xyzw, r3.xyzw
                
                #line 270
                            dp4 r4.x, r3.xyzw, cb1[8].xyzw
                            dp4 r4.y, r3.xyzw, cb1[9].xyzw
                            dp4 r4.z, r3.xyzw, cb1[10].xyzw
                            itof r6.xyz, l(0, 0, 0, 0)
                            max r3.xyz, r4.xyzx, r6.xyzx  // r3.x <- <PrimariesTransform return value>.x; r3.y <- <PrimariesTransform return value>.y; r3.z <- <PrimariesTransform return value>.z
                
                #line 277
                            mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 278
                          else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 281
                            mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 282
                          endif 
                
                #line 388
                          mov r3.xyz, r3.xyzx
                
                #line 389
                          nop 
                          mov r3.xyz, r3.xyzx
                
                #line 287
                          ieq r3.w, cb0[12].w, cb0[13].x
                          if_nz r3.w
                
                #line 289
                            mov r5.xyz, r3.xyzx
                
                #line 290
                          endif   // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 291
                          if_z r3.w
                            ieq r3.w, cb0[13].x, l(1)
                            ieq r4.x, cb0[13].x, l(4)
                            or r3.w, r3.w, r4.x
                            if_nz r3.w
                
                #line 293
                              ieq r3.w, cb0[12].w, l(16)
                              ieq r4.x, cb0[12].w, l(18)
                              or r3.w, r3.w, r4.x
                              if_nz r3.w
                
                #line 295
                                nop 
                                mov r3.xyz, r3.xyzx
                
                #line 184
                                nop 
                                mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 178
                                mov r3.w, l(0.150000)  // r3.w <- A
                                mov r4.w, l(0.500000)  // r4.w <- B
                
                #line 179
                                mul r6.xyz, r4.xyzx, r3.wwww
                                add r6.xyz, r6.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                mul r6.xyz, r4.xyzx, r6.xyzx
                                add r6.xyz, r6.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                mul r7.xyz, r4.xyzx, r3.wwww
                                add r7.xyz, r4.wwww, r7.xyzx
                                mul r4.xyz, r4.xyzx, r7.xyzx
                                add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                div r4.xyz, r6.xyzx, r4.xyzx
                                mov r6.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                add r4.xyz, r4.xyzx, r6.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 184
                                mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 185
                                nop 
                                mul r6.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 178
                                mov r3.w, l(0.150000)
                                mov r4.w, l(0.500000)
                
                #line 179
                                mul r7.xyz, r6.xyzx, r3.wwww
                                add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                mul r7.xyz, r6.xyzx, r7.xyzx
                                add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                mul r8.xyz, r6.xyzx, r3.wwww
                                add r8.xyz, r4.wwww, r8.xyzx
                                mul r6.xyz, r6.xyzx, r8.xyzx
                                add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                div r6.xyz, r7.xyzx, r6.xyzx
                                mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 185
                                div r5.xyz, r6.xyzx, r4.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 186
                                mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 295
                                mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 296
                              else 
                
                #line 299
                                mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 300
                              endif 
                
                #line 301
                            else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 304
                              mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 305
                            endif 
                          endif 
                
                #line 389
                          mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 390
                          nop 
                          mov r5.xyz, r5.xyzx
                
                #line 316
                          ieq r3.x, cb0[12].w, cb0[13].x
                          if_nz r3.x
                
                #line 318
                            mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 319
                          else 
                
                #line 320
                            ieq r3.x, cb0[13].x, l(16)
                            if_nz r3.x
                
                #line 322
                              nop 
                              mov r5.xyz, r5.xyzx
                
                #line 165
                              mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                              mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                              mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                              mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                              mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                              itof r4.yzw, l(0, 10000, 10000, 10000)
                              div r4.yzw, r5.xxyz, r4.yyzw
                              log r4.yzw, r4.yyzw
                              mul r4.yzw, r3.xxxx, r4.yyzw
                              exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                              mul r6.xyz, r3.wwww, r4.yzwy
                              add r3.xzw, r3.zzzz, r6.xxyz
                              itof r6.xyz, l(1, 1, 1, 0)
                              mul r4.xyz, r4.yzwy, r4.xxxx
                              add r4.xyz, r4.xyzx, r6.xyzx
                              div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                              log r3.xzw, r3.xxzw
                              mul r3.xyz, r3.xzwx, r3.yyyy
                              exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                              mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 322
                              mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 323
                            else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 324
                              ieq r3.x, cb0[13].x, l(18)
                              if_nz r3.x
                
                #line 326
                                nop 
                                mov r5.xyz, r5.xyzx
                
                #line 165
                                mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                                mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                                mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                                mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                                mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                                itof r4.yzw, l(0, 10000, 10000, 10000)
                                div r4.yzw, r5.xxyz, r4.yyzw
                                log r4.yzw, r4.yyzw
                                mul r4.yzw, r3.xxxx, r4.yyzw
                                exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                                mul r6.xyz, r3.wwww, r4.yzwy
                                add r3.xzw, r3.zzzz, r6.xxyz
                                itof r6.xyz, l(1, 1, 1, 0)
                                mul r4.xyz, r4.yzwy, r4.xxxx
                                add r4.xyz, r4.xyzx, r6.xyzx
                                div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                                log r3.xzw, r3.xxzw
                                mul r3.xyz, r3.xzwx, r3.yyyy
                                exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                                mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 326
                                mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 327
                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 328
                                ieq r3.x, cb0[13].x, l(1)
                                if_nz r3.x
                
                #line 330
                                  log r3.xyz, r5.xyzx
                                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                  exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 331
                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 332
                                  ieq r3.x, cb0[13].x, l(4)
                                  if_nz r3.x
                
                #line 334
                                    log r3.xyz, r5.xyzx
                                    mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                    exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 335
                                  else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 338
                                    mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 339
                                  endif 
                                endif 
                              endif 
                            endif 
                          endif 
                
                #line 390
                          mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 391
                          nop 
                          mov r5.xyz, r5.xyzx
                
                #line 311
                          mov r5.xyz, r5.xyzx  // r5.x <- <adjustRange return value>.x; r5.y <- <adjustRange return value>.y; r5.z <- <adjustRange return value>.z
                
                #line 391
                          mov r5.xyz, r5.xyzx
                
                #line 392
                          nop 
                          mov r5.xyz, r5.xyzx
                
                #line 367
                          mov r5.xyz, r5.xyzx  // r5.x <- <reorderPlanes return value>.x; r5.y <- <reorderPlanes return value>.y; r5.z <- <reorderPlanes return value>.z
                
                #line 392
                          mov r5.xyz, r5.xyzx
                
                #line 393
                        endif 
                      endif 
                
                #line 394
                      mov r5.xyz, r5.xyzx  // r5.x <- <RenderFloat return value>.x; r5.y <- <RenderFloat return value>.y; r5.z <- <RenderFloat return value>.z
                
                #line 429
                      mov r5.xyz, r5.xyzx  // r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z
                
                #line 430
                      itof r5.w, l(1)  // r5.w <- rgbarsp.w
                
                #line 431
                      mov r5.xyz, r5.xyzx  // r5.x <- <GetRGBA return value>.x; r5.y <- <GetRGBA return value>.y; r5.z <- <GetRGBA return value>.z
                      mov r5.w, r5.w  // r5.w <- <GetRGBA return value>.w
                
                #line 432
                    else   // Prior locations: r3.x <- yuv2rgbmatrix._m03; r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33
                
                #line 433
                      ieq r3.x, cb0[12].x, l(2)
                      if_nz r3.x
                
                #line 435
                        nop 
                
                #line 60
                        sample_indexable(texture2d)(float,float,float,float) r3.x, v1.xyxx, t0.xyzw, s0  // r3.x <- y
                
                #line 62
                        sample_indexable(texture2d)(float,float,float,float) r3.y, v1.xyxx, t1.yxzw, s0  // r3.y <- u
                
                #line 63
                        sample_indexable(texture2d)(float,float,float,float) r3.z, v1.xyxx, t2.yzxw, s0  // r3.z <- v
                
                #line 65
                        mov r3.w, l(1.000000)
                        mov r3.xyzw, r3.xyzw  // r3.x <- <PSPlanar420_Reverse return value>.x; r3.y <- <PSPlanar420_Reverse return value>.y; r3.z <- <PSPlanar420_Reverse return value>.z; r3.w <- <PSPlanar420_Reverse return value>.w
                
                #line 435
                        mov r3.xyzw, r3.xyzw  // r3.x <- rgba.x; r3.y <- rgba.y; r3.z <- rgba.z; r3.w <- rgba.w
                
                #line 436
                        dp4 r4.x, r3.xyzw, cb1[0].xyzw  // r4.x <- rr.x
                        dp4 r4.y, r3.xyzw, cb1[1].xyzw  // r4.y <- rr.y
                        dp4 r4.z, r3.xyzw, cb1[2].xyzw  // r4.z <- rr.z
                        dp4 r4.w, r3.xyzw, cb1[3].xyzw  // r4.w <- rr.w
                
                #line 437
                        dp4 r3.x, r4.xyzw, r0.xyzw
                        dp4 r3.y, r4.xyzw, r1.xyzw
                        dp4 r3.z, r4.xyzw, r2.xyzw
                        itof r4.xyz, l(0, 0, 0, 0)
                        max r5.xyz, r3.xyzx, r4.xyzx  // r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z
                
                #line 438
                        nop 
                
                #line 372
                        if_z cb0[14].z
                
                #line 374
                          nop 
                
                #line 191
                          ieq r3.x, cb0[12].w, cb0[13].x
                          if_z r3.x
                
                #line 195
                            ieq r3.x, cb0[12].w, l(8)
                            if_z r3.x
                
                #line 199
                              ieq r3.x, cb0[12].w, l(16)
                              if_nz r3.x
                
                #line 201
                                nop 
                
                #line 202
                              else 
                
                #line 203
                                ieq r3.x, cb0[12].w, l(18)
                                if_nz r3.x
                
                #line 205
                                  nop 
                
                #line 138
                                  nop 
                
                #line 139
                                  nop 
                
                #line 140
                                  nop 
                
                #line 206
                                else 
                
                #line 207
                                  ieq r3.x, cb0[12].w, l(1)
                                  if_nz r3.x
                
                #line 209
                                    nop 
                
                #line 210
                                  else 
                
                #line 211
                                    ieq r3.x, cb0[12].w, l(4)
                                    if_nz r3.x
                
                #line 213
                                      nop 
                
                #line 214
                                    else 
                
                #line 215
                                      ieq r3.x, cb0[12].w, l(5)
                                      if_nz r3.x
                
                #line 217
                                        nop 
                
                #line 226
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                            endif 
                          endif 
                
                #line 375
                          nop 
                
                #line 275
                          ine r3.x, cb0[13].z, cb0[13].y
                          if_nz r3.x
                
                #line 277
                            nop 
                
                #line 282
                          endif 
                
                #line 376
                          nop 
                
                #line 287
                          ieq r3.x, cb0[12].w, cb0[13].x
                
                #line 291
                          if_z r3.x
                            ieq r3.x, cb0[13].x, l(1)
                            ieq r3.y, cb0[13].x, l(4)
                            or r3.x, r3.y, r3.x
                            if_nz r3.x
                
                #line 293
                              ieq r3.x, cb0[12].w, l(16)
                              ieq r3.y, cb0[12].w, l(18)
                              or r3.x, r3.y, r3.x
                              if_nz r3.x
                
                #line 295
                                nop 
                
                #line 184
                                nop 
                
                #line 185
                                nop 
                
                #line 300
                              endif 
                
                #line 305
                            endif 
                          endif 
                
                #line 377
                          nop 
                
                #line 316
                          ieq r3.x, cb0[12].w, cb0[13].x
                          if_z r3.x
                
                #line 320
                            ieq r3.x, cb0[13].x, l(16)
                            if_nz r3.x
                
                #line 322
                              nop 
                
                #line 323
                            else 
                
                #line 324
                              ieq r3.x, cb0[13].x, l(18)
                              if_nz r3.x
                
                #line 326
                                nop 
                
                #line 339
                              endif 
                            endif 
                          endif 
                
                #line 378
                          nop 
                
                #line 379
                          nop 
                
                #line 380
                        else 
                
                #line 372
                          mov r3.x, cb0[14].z  // r3.x <- DrawLine; r3.x <- DrawLine; r3.x <- DrawLine
                
                #line 381
                          ieq r3.x, r3.x, l(1)
                          if_z r3.x
                
                #line 387
                            nop 
                
                #line 191
                            ieq r3.x, cb0[12].w, cb0[13].x
                            if_z r3.x
                
                #line 195
                              ieq r3.x, cb0[12].w, l(8)
                              if_z r3.x
                
                #line 199
                                ieq r3.x, cb0[12].w, l(16)
                                if_nz r3.x
                
                #line 201
                                  nop 
                
                #line 202
                                else 
                
                #line 203
                                  ieq r3.x, cb0[12].w, l(18)
                                  if_nz r3.x
                
                #line 205
                                    nop 
                
                #line 138
                                    nop 
                
                #line 139
                                    nop 
                
                #line 140
                                    nop 
                
                #line 206
                                  else 
                
                #line 207
                                    ieq r3.x, cb0[12].w, l(1)
                                    if_nz r3.x
                
                #line 209
                                      nop 
                
                #line 210
                                    else 
                
                #line 211
                                      ieq r3.x, cb0[12].w, l(4)
                                      if_nz r3.x
                
                #line 213
                                        nop 
                
                #line 214
                                      else 
                
                #line 215
                                        ieq r3.x, cb0[12].w, l(5)
                                        if_nz r3.x
                
                #line 217
                                          nop 
                
                #line 226
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                            endif 
                
                #line 388
                            nop 
                
                #line 275
                            ine r3.x, cb0[13].z, cb0[13].y
                            if_nz r3.x
                
                #line 277
                              nop 
                
                #line 282
                            endif 
                
                #line 389
                            nop 
                
                #line 287
                            ieq r3.x, cb0[12].w, cb0[13].x
                
                #line 291
                            if_z r3.x
                              ieq r3.x, cb0[13].x, l(1)
                              ieq r3.y, cb0[13].x, l(4)
                              or r3.x, r3.y, r3.x
                              if_nz r3.x
                
                #line 293
                                ieq r3.x, cb0[12].w, l(16)
                                ieq r3.y, cb0[12].w, l(18)
                                or r3.x, r3.y, r3.x
                                if_nz r3.x
                
                #line 295
                                  nop 
                
                #line 184
                                  nop 
                
                #line 185
                                  nop 
                
                #line 300
                                endif 
                
                #line 305
                              endif 
                            endif 
                
                #line 390
                            nop 
                
                #line 316
                            ieq r3.x, cb0[12].w, cb0[13].x
                            if_z r3.x
                
                #line 320
                              ieq r3.x, cb0[13].x, l(16)
                              if_nz r3.x
                
                #line 322
                                nop 
                
                #line 323
                              else 
                
                #line 324
                                ieq r3.x, cb0[13].x, l(18)
                                if_nz r3.x
                
                #line 326
                                  nop 
                
                #line 339
                                endif 
                              endif 
                            endif 
                
                #line 391
                            nop 
                
                #line 392
                            nop 
                
                #line 393
                          endif 
                        endif 
                
                #line 439
                        itof r5.w, l(1)  // r5.w <- rgbarsp.w
                
                #line 441
                        mov r5.xyz, r5.xyzx  // r5.x <- <GetRGBA return value>.x; r5.y <- <GetRGBA return value>.y; r5.z <- <GetRGBA return value>.z
                        mov r5.w, r5.w  // r5.w <- <GetRGBA return value>.w
                
                #line 442
                      else   // Prior locations: r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33
                
                #line 443
                        ieq r3.x, cb0[12].x, l(1)
                        if_nz r3.x
                
                #line 445
                          sample_indexable(texture2d)(float,float,float,float) r5.xyz, v1.xyxx, t0.xyzw, s0  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 446
                          itof r5.w, l(0)  // r5.w <- rgba.w
                
                #line 447
                          nop 
                          mov r5.xyz, r5.xyzx
                          mov r5.w, r5.w
                
                #line 372
                          if_z cb0[14].z
                
                #line 374
                            nop 
                            mov r3.xyzw, r5.xyzw
                
                #line 191
                            ieq r4.x, cb0[12].w, cb0[13].x
                            if_nz r4.x
                
                #line 193
                              mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 194
                            else 
                
                #line 195
                              ieq r4.x, cb0[12].w, l(8)
                              if_nz r4.x
                
                #line 197
                                mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 198
                              else 
                
                #line 199
                                ieq r4.x, cb0[12].w, l(16)
                                if_nz r4.x
                
                #line 201
                                  nop 
                                  mov r3.xyzw, r3.xyzw
                
                #line 126
                                  mov r4.x, l(0.835938)  // r4.x <- ST2084_c1
                
                #line 127
                                  mov r4.y, l(18.851562)  // r4.y <- ST2084_c2
                
                #line 128
                                  mov r4.z, l(18.687500)  // r4.z <- ST2084_c3
                
                #line 129
                                  itof r6.xyzw, l(0, 0, 0, 0)
                                  max r6.xyzw, r3.xyzw, r6.xyzw
                                  log r6.xyzw, r6.xyzw
                                  mul r6.xyzw, r6.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                  exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 130
                                  mov r7.xyzw, -r4.xxxx
                                  add r7.xyzw, r6.xyzw, r7.xyzw
                                  max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                  mul r6.xyzw, r4.zzzz, r6.xyzw
                                  mov r6.xyzw, -r6.xyzw
                                  add r4.xyzw, r4.yyyy, r6.xyzw
                                  div r4.xyzw, r7.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 131
                                  log r4.xyzw, r4.xyzw
                                  mul r4.xyzw, r4.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                  exp r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 132
                                  itof r6.xyzw, l(10000, 10000, 10000, 10000)
                                  mul r3.xyzw, r4.xyzw, r6.xyzw  // r3.x <- <ST2084TOLinear return value>.x; r3.y <- <ST2084TOLinear return value>.y; r3.z <- <ST2084TOLinear return value>.z; r3.w <- <ST2084TOLinear return value>.w
                
                #line 201
                                  mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 202
                                else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 203
                                  ieq r4.x, cb0[12].w, l(18)
                                  if_nz r4.x
                
                #line 205
                                    nop 
                                    mov r3.xyzw, r3.xyzw
                
                #line 137
                                    itof r4.x, l(2000)  // r4.x <- alpha_gain
                
                #line 138
                                    nop 
                                    mov r3.x, r3.x
                
                #line 111
                                    mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                    mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                    mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                    mov r6.x, l(4.000000)  // r6.x <- B67_inv_r2
                
                #line 115
                                    ge r6.y, l(0.500000), r3.x
                                    if_nz r6.y
                
                #line 116
                                      mul r6.y, r3.x, r3.x
                                      mul r6.x, r6.x, r6.y  // r6.x <- x
                                    else   // Prior locations: r3.x <- x; r6.x <- B67_inv_r2
                
                #line 118
                                      mov r4.w, -r4.w
                                      add r4.w, r3.x, r4.w
                                      div r4.y, r4.w, r4.y
                                      mul r4.y, r4.y, l(1.442695)
                                      exp r4.y, r4.y
                                      add r6.x, r4.z, r4.y  // r6.x <- x
                                    endif 
                
                #line 119
                                    mov r6.x, r6.x  // r6.x <- <inverse_HLG return value>
                
                #line 138
                                    mov r6.x, r6.x  // r6.x <- rgb.x
                
                #line 139
                                    nop 
                                    mov r3.y, r3.y
                
                #line 111
                                    mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                    mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                    mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                    mov r6.w, l(4.000000)  // r6.w <- B67_inv_r2
                
                #line 115
                                    ge r7.x, l(0.500000), r3.y
                                    if_nz r7.x
                
                #line 116
                                      mul r7.x, r3.y, r3.y
                                      mul r6.y, r6.w, r7.x  // r6.y <- x
                                    else   // Prior locations: r3.y <- x
                
                #line 118
                                      mov r4.w, -r4.w
                                      add r4.w, r3.y, r4.w
                                      div r4.y, r4.w, r4.y
                                      mul r4.y, r4.y, l(1.442695)
                                      exp r4.y, r4.y
                                      add r6.y, r4.z, r4.y  // r6.y <- x
                                    endif 
                
                #line 119
                                    mov r6.y, r6.y  // r6.y <- <inverse_HLG return value>
                
                #line 139
                                    mov r6.y, r6.y  // r6.y <- rgb.y
                
                #line 140
                                    nop 
                                    mov r3.z, r3.z
                
                #line 111
                                    mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                    mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                    mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                    mov r6.w, l(4.000000)  // r6.w <- B67_inv_r2
                
                #line 115
                                    ge r7.x, l(0.500000), r3.z
                                    if_nz r7.x
                
                #line 116
                                      mul r7.x, r3.z, r3.z
                                      mul r6.z, r6.w, r7.x  // r6.z <- x
                                    else   // Prior locations: r3.z <- x
                
                #line 118
                                      mov r4.w, -r4.w
                                      add r4.w, r3.z, r4.w
                                      div r4.y, r4.w, r4.y
                                      mul r4.y, r4.y, l(1.442695)
                                      exp r4.y, r4.y
                                      add r6.z, r4.z, r4.y  // r6.z <- x
                                    endif 
                
                #line 119
                                    mov r6.z, r6.z  // r6.z <- <inverse_HLG return value>
                
                #line 140
                                    mov r6.z, r6.z  // r6.z <- rgb.z
                
                #line 141
                                    mov r4.yzw, l(0,0.262700,0.678000,0.059300)  // r4.y <- ootf_2020.x; r4.z <- ootf_2020.y; r4.w <- ootf_2020.z
                
                #line 142
                                    dp3 r4.y, r4.yzwy, r6.xyzx
                                    mul r4.x, r4.y, r4.x  // r4.x <- ootf_ys
                
                #line 143
                                    log r4.x, r4.x
                                    mul r4.x, r4.x, l(0.200000)
                                    exp r4.x, r4.x
                                    mul r3.xyz, r4.xxxx, r6.xyzx  // r3.x <- <HLGTOLinear return value>.x; r3.y <- <HLGTOLinear return value>.y; r3.z <- <HLGTOLinear return value>.z
                                    mul r3.w, r3.w, r4.x  // r3.w <- <HLGTOLinear return value>.w
                
                #line 205
                                    mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 206
                                  else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 207
                                    ieq r4.x, cb0[12].w, l(1)
                                    if_nz r4.x
                
                #line 209
                                      nop 
                                      mov r3.xyzw, r3.xyzw
                
                #line 147
                                      log r4.xyzw, r3.xyzw
                                      mul r4.xyzw, r4.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                      exp r3.xyzw, r4.xyzw  // r3.x <- <BT709TOLinear return value>.x; r3.y <- <BT709TOLinear return value>.y; r3.z <- <BT709TOLinear return value>.z; r3.w <- <BT709TOLinear return value>.w
                
                #line 209
                                      mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 210
                                    else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 211
                                      ieq r4.x, cb0[12].w, l(4)
                                      if_nz r4.x
                
                #line 213
                                        nop 
                                        mov r3.xyzw, r3.xyzw
                
                #line 152
                                        log r4.xyzw, r3.xyzw
                                        mul r4.xyzw, r4.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                        exp r3.xyzw, r4.xyzw  // r3.x <- <BT470M_SRGB_TOLinear return value>.x; r3.y <- <BT470M_SRGB_TOLinear return value>.y; r3.z <- <BT470M_SRGB_TOLinear return value>.z; r3.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 213
                                        mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 214
                                      else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 215
                                        ieq r4.x, cb0[12].w, l(5)
                                        if_nz r4.x
                
                #line 217
                                          nop 
                                          mov r3.xyzw, r3.xyzw
                
                #line 156
                                          log r4.xyzw, r3.xyzw
                                          mul r4.xyzw, r4.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                          exp r3.xyzw, r4.xyzw  // r3.x <- <BT470BGTOLinear return value>.x; r3.y <- <BT470BGTOLinear return value>.y; r3.z <- <BT470BGTOLinear return value>.z; r3.w <- <BT470BGTOLinear return value>.w
                
                #line 217
                                          mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 218
                                        else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 225
                                          mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 226
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                            endif 
                
                #line 374
                            mov r3.xyzw, r3.xyzw  // r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 375
                            nop 
                            mov r3.xyzw, r3.xyzw
                
                #line 275
                            ine r4.x, cb0[13].z, cb0[13].y
                            if_nz r4.x
                
                #line 277
                              nop 
                              mov r3.xyzw, r3.xyzw
                
                #line 270
                              dp4 r4.x, r3.xyzw, cb1[8].xyzw
                              dp4 r4.y, r3.xyzw, cb1[9].xyzw
                              dp4 r4.z, r3.xyzw, cb1[10].xyzw
                              itof r6.xyz, l(0, 0, 0, 0)
                              max r3.xyz, r4.xyzx, r6.xyzx  // r3.x <- <PrimariesTransform return value>.x; r3.y <- <PrimariesTransform return value>.y; r3.z <- <PrimariesTransform return value>.z
                
                #line 277
                              mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 278
                            else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 281
                              mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 282
                            endif 
                
                #line 375
                            mov r3.xyz, r3.xyzx
                
                #line 376
                            nop 
                            mov r3.xyz, r3.xyzx
                
                #line 287
                            ieq r3.w, cb0[12].w, cb0[13].x
                            if_nz r3.w
                
                #line 289
                              mov r5.xyz, r3.xyzx
                
                #line 290
                            endif   // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 291
                            if_z r3.w
                              ieq r3.w, cb0[13].x, l(1)
                              ieq r4.x, cb0[13].x, l(4)
                              or r3.w, r3.w, r4.x
                              if_nz r3.w
                
                #line 293
                                ieq r3.w, cb0[12].w, l(16)
                                ieq r4.x, cb0[12].w, l(18)
                                or r3.w, r3.w, r4.x
                                if_nz r3.w
                
                #line 295
                                  nop 
                                  mov r3.xyz, r3.xyzx
                
                #line 184
                                  nop 
                                  mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 178
                                  mov r3.w, l(0.150000)  // r3.w <- A
                                  mov r4.w, l(0.500000)  // r4.w <- B
                
                #line 179
                                  mul r6.xyz, r4.xyzx, r3.wwww
                                  add r6.xyz, r6.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                  mul r6.xyz, r4.xyzx, r6.xyzx
                                  add r6.xyz, r6.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                  mul r7.xyz, r4.xyzx, r3.wwww
                                  add r7.xyz, r4.wwww, r7.xyzx
                                  mul r4.xyz, r4.xyzx, r7.xyzx
                                  add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                  div r4.xyz, r6.xyzx, r4.xyzx
                                  mov r6.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                  add r4.xyz, r4.xyzx, r6.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 184
                                  mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 185
                                  nop 
                                  mul r6.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 178
                                  mov r3.w, l(0.150000)
                                  mov r4.w, l(0.500000)
                
                #line 179
                                  mul r7.xyz, r6.xyzx, r3.wwww
                                  add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                  mul r7.xyz, r6.xyzx, r7.xyzx
                                  add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                  mul r8.xyz, r6.xyzx, r3.wwww
                                  add r8.xyz, r4.wwww, r8.xyzx
                                  mul r6.xyz, r6.xyzx, r8.xyzx
                                  add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                  div r6.xyz, r7.xyzx, r6.xyzx
                                  mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                  add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 185
                                  div r5.xyz, r6.xyzx, r4.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 186
                                  mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 295
                                  mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 296
                                else 
                
                #line 299
                                  mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 300
                                endif 
                
                #line 301
                              else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 304
                                mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 305
                              endif 
                            endif 
                
                #line 376
                            mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 377
                            nop 
                            mov r5.xyz, r5.xyzx
                
                #line 316
                            ieq r3.x, cb0[12].w, cb0[13].x
                            if_nz r3.x
                
                #line 318
                              mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 319
                            else 
                
                #line 320
                              ieq r3.x, cb0[13].x, l(16)
                              if_nz r3.x
                
                #line 322
                                nop 
                                mov r5.xyz, r5.xyzx
                
                #line 165
                                mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                                mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                                mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                                mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                                mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                                itof r4.yzw, l(0, 10000, 10000, 10000)
                                div r4.yzw, r5.xxyz, r4.yyzw
                                log r4.yzw, r4.yyzw
                                mul r4.yzw, r3.xxxx, r4.yyzw
                                exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                                mul r6.xyz, r3.wwww, r4.yzwy
                                add r3.xzw, r3.zzzz, r6.xxyz
                                itof r6.xyz, l(1, 1, 1, 0)
                                mul r4.xyz, r4.yzwy, r4.xxxx
                                add r4.xyz, r4.xyzx, r6.xyzx
                                div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                                log r3.xzw, r3.xxzw
                                mul r3.xyz, r3.xzwx, r3.yyyy
                                exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                                mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 322
                                mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 323
                              else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 324
                                ieq r3.x, cb0[13].x, l(18)
                                if_nz r3.x
                
                #line 326
                                  nop 
                                  mov r5.xyz, r5.xyzx
                
                #line 165
                                  mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                                  mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                                  mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                                  mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                                  mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                                  itof r4.yzw, l(0, 10000, 10000, 10000)
                                  div r4.yzw, r5.xxyz, r4.yyzw
                                  log r4.yzw, r4.yyzw
                                  mul r4.yzw, r3.xxxx, r4.yyzw
                                  exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                                  mul r6.xyz, r3.wwww, r4.yzwy
                                  add r3.xzw, r3.zzzz, r6.xxyz
                                  itof r6.xyz, l(1, 1, 1, 0)
                                  mul r4.xyz, r4.yzwy, r4.xxxx
                                  add r4.xyz, r4.xyzx, r6.xyzx
                                  div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                                  log r3.xzw, r3.xxzw
                                  mul r3.xyz, r3.xzwx, r3.yyyy
                                  exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                                  mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 326
                                  mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 327
                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 328
                                  ieq r3.x, cb0[13].x, l(1)
                                  if_nz r3.x
                
                #line 330
                                    log r3.xyz, r5.xyzx
                                    mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                    exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 331
                                  else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 332
                                    ieq r3.x, cb0[13].x, l(4)
                                    if_nz r3.x
                
                #line 334
                                      log r3.xyz, r5.xyzx
                                      mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                      exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 335
                                    else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 338
                                      mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 339
                                    endif 
                                  endif 
                                endif 
                              endif 
                            endif 
                
                #line 377
                            mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 378
                            nop 
                            mov r5.xyz, r5.xyzx
                
                #line 311
                            mov r5.xyz, r5.xyzx  // r5.x <- <adjustRange return value>.x; r5.y <- <adjustRange return value>.y; r5.z <- <adjustRange return value>.z
                
                #line 378
                            mov r5.xyz, r5.xyzx
                
                #line 379
                            nop 
                            mov r5.xyz, r5.xyzx
                
                #line 367
                            mov r5.xyz, r5.xyzx  // r5.x <- <reorderPlanes return value>.x; r5.y <- <reorderPlanes return value>.y; r5.z <- <reorderPlanes return value>.z
                
                #line 379
                            mov r5.xyz, r5.xyzx
                
                #line 380
                          else   // Prior locations: r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33; r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w; r5.w <- rgb.w
                
                #line 372
                            mov r3.x, cb0[14].z  // r3.x <- DrawLine; r3.x <- DrawLine; r3.x <- DrawLine
                
                #line 381
                            ieq r3.x, r3.x, l(1)
                            if_z r3.x
                
                #line 387
                              nop 
                              mov r3.xyzw, r5.xyzw
                
                #line 191
                              ieq r4.x, cb0[12].w, cb0[13].x
                              if_nz r4.x
                
                #line 193
                                mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 194
                              else 
                
                #line 195
                                ieq r4.x, cb0[12].w, l(8)
                                if_nz r4.x
                
                #line 197
                                  mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 198
                                else 
                
                #line 199
                                  ieq r4.x, cb0[12].w, l(16)
                                  if_nz r4.x
                
                #line 201
                                    nop 
                                    mov r3.xyzw, r3.xyzw
                
                #line 126
                                    mov r4.x, l(0.835938)  // r4.x <- ST2084_c1
                
                #line 127
                                    mov r4.y, l(18.851562)  // r4.y <- ST2084_c2
                
                #line 128
                                    mov r4.z, l(18.687500)  // r4.z <- ST2084_c3
                
                #line 129
                                    itof r6.xyzw, l(0, 0, 0, 0)
                                    max r6.xyzw, r3.xyzw, r6.xyzw
                                    log r6.xyzw, r6.xyzw
                                    mul r6.xyzw, r6.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                    exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 130
                                    mov r7.xyzw, -r4.xxxx
                                    add r7.xyzw, r6.xyzw, r7.xyzw
                                    max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                    mul r6.xyzw, r4.zzzz, r6.xyzw
                                    mov r6.xyzw, -r6.xyzw
                                    add r4.xyzw, r4.yyyy, r6.xyzw
                                    div r4.xyzw, r7.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 131
                                    log r4.xyzw, r4.xyzw
                                    mul r4.xyzw, r4.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                    exp r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 132
                                    itof r6.xyzw, l(10000, 10000, 10000, 10000)
                                    mul r3.xyzw, r4.xyzw, r6.xyzw  // r3.x <- <ST2084TOLinear return value>.x; r3.y <- <ST2084TOLinear return value>.y; r3.z <- <ST2084TOLinear return value>.z; r3.w <- <ST2084TOLinear return value>.w
                
                #line 201
                                    mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 202
                                  else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 203
                                    ieq r4.x, cb0[12].w, l(18)
                                    if_nz r4.x
                
                #line 205
                                      nop 
                                      mov r3.xyzw, r3.xyzw
                
                #line 137
                                      itof r4.x, l(2000)  // r4.x <- alpha_gain
                
                #line 138
                                      nop 
                                      mov r3.x, r3.x
                
                #line 111
                                      mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                      mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                      mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                      mov r6.x, l(4.000000)  // r6.x <- B67_inv_r2
                
                #line 115
                                      ge r6.y, l(0.500000), r3.x
                                      if_nz r6.y
                
                #line 116
                                        mul r6.y, r3.x, r3.x
                                        mul r6.x, r6.x, r6.y  // r6.x <- x
                                      else   // Prior locations: r3.x <- x; r6.x <- B67_inv_r2
                
                #line 118
                                        mov r4.w, -r4.w
                                        add r4.w, r3.x, r4.w
                                        div r4.y, r4.w, r4.y
                                        mul r4.y, r4.y, l(1.442695)
                                        exp r4.y, r4.y
                                        add r6.x, r4.z, r4.y  // r6.x <- x
                                      endif 
                
                #line 119
                                      mov r6.x, r6.x  // r6.x <- <inverse_HLG return value>
                
                #line 138
                                      mov r6.x, r6.x  // r6.x <- rgb.x
                
                #line 139
                                      nop 
                                      mov r3.y, r3.y
                
                #line 111
                                      mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                      mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                      mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                      mov r6.w, l(4.000000)  // r6.w <- B67_inv_r2
                
                #line 115
                                      ge r7.x, l(0.500000), r3.y
                                      if_nz r7.x
                
                #line 116
                                        mul r7.x, r3.y, r3.y
                                        mul r6.y, r6.w, r7.x  // r6.y <- x
                                      else   // Prior locations: r3.y <- x
                
                #line 118
                                        mov r4.w, -r4.w
                                        add r4.w, r3.y, r4.w
                                        div r4.y, r4.w, r4.y
                                        mul r4.y, r4.y, l(1.442695)
                                        exp r4.y, r4.y
                                        add r6.y, r4.z, r4.y  // r6.y <- x
                                      endif 
                
                #line 119
                                      mov r6.y, r6.y  // r6.y <- <inverse_HLG return value>
                
                #line 139
                                      mov r6.y, r6.y  // r6.y <- rgb.y
                
                #line 140
                                      nop 
                                      mov r3.z, r3.z
                
                #line 111
                                      mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                      mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                      mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                      mov r6.w, l(4.000000)  // r6.w <- B67_inv_r2
                
                #line 115
                                      ge r7.x, l(0.500000), r3.z
                                      if_nz r7.x
                
                #line 116
                                        mul r7.x, r3.z, r3.z
                                        mul r6.z, r6.w, r7.x  // r6.z <- x
                                      else   // Prior locations: r3.z <- x
                
                #line 118
                                        mov r4.w, -r4.w
                                        add r4.w, r3.z, r4.w
                                        div r4.y, r4.w, r4.y
                                        mul r4.y, r4.y, l(1.442695)
                                        exp r4.y, r4.y
                                        add r6.z, r4.z, r4.y  // r6.z <- x
                                      endif 
                
                #line 119
                                      mov r6.z, r6.z  // r6.z <- <inverse_HLG return value>
                
                #line 140
                                      mov r6.z, r6.z  // r6.z <- rgb.z
                
                #line 141
                                      mov r4.yzw, l(0,0.262700,0.678000,0.059300)  // r4.y <- ootf_2020.x; r4.z <- ootf_2020.y; r4.w <- ootf_2020.z
                
                #line 142
                                      dp3 r4.y, r4.yzwy, r6.xyzx
                                      mul r4.x, r4.y, r4.x  // r4.x <- ootf_ys
                
                #line 143
                                      log r4.x, r4.x
                                      mul r4.x, r4.x, l(0.200000)
                                      exp r4.x, r4.x
                                      mul r3.xyz, r4.xxxx, r6.xyzx  // r3.x <- <HLGTOLinear return value>.x; r3.y <- <HLGTOLinear return value>.y; r3.z <- <HLGTOLinear return value>.z
                                      mul r3.w, r3.w, r4.x  // r3.w <- <HLGTOLinear return value>.w
                
                #line 205
                                      mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 206
                                    else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 207
                                      ieq r4.x, cb0[12].w, l(1)
                                      if_nz r4.x
                
                #line 209
                                        nop 
                                        mov r3.xyzw, r3.xyzw
                
                #line 147
                                        log r4.xyzw, r3.xyzw
                                        mul r4.xyzw, r4.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                        exp r3.xyzw, r4.xyzw  // r3.x <- <BT709TOLinear return value>.x; r3.y <- <BT709TOLinear return value>.y; r3.z <- <BT709TOLinear return value>.z; r3.w <- <BT709TOLinear return value>.w
                
                #line 209
                                        mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 210
                                      else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 211
                                        ieq r4.x, cb0[12].w, l(4)
                                        if_nz r4.x
                
                #line 213
                                          nop 
                                          mov r3.xyzw, r3.xyzw
                
                #line 152
                                          log r4.xyzw, r3.xyzw
                                          mul r4.xyzw, r4.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                          exp r3.xyzw, r4.xyzw  // r3.x <- <BT470M_SRGB_TOLinear return value>.x; r3.y <- <BT470M_SRGB_TOLinear return value>.y; r3.z <- <BT470M_SRGB_TOLinear return value>.z; r3.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 213
                                          mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 214
                                        else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 215
                                          ieq r4.x, cb0[12].w, l(5)
                                          if_nz r4.x
                
                #line 217
                                            nop 
                                            mov r3.xyzw, r3.xyzw
                
                #line 156
                                            log r4.xyzw, r3.xyzw
                                            mul r4.xyzw, r4.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                            exp r3.xyzw, r4.xyzw  // r3.x <- <BT470BGTOLinear return value>.x; r3.y <- <BT470BGTOLinear return value>.y; r3.z <- <BT470BGTOLinear return value>.z; r3.w <- <BT470BGTOLinear return value>.w
                
                #line 217
                                            mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 218
                                          else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 225
                                            mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 226
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                
                #line 387
                              mov r3.xyzw, r3.xyzw  // r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 388
                              nop 
                              mov r3.xyzw, r3.xyzw
                
                #line 275
                              ine r4.x, cb0[13].z, cb0[13].y
                              if_nz r4.x
                
                #line 277
                                nop 
                                mov r3.xyzw, r3.xyzw
                
                #line 270
                                dp4 r4.x, r3.xyzw, cb1[8].xyzw
                                dp4 r4.y, r3.xyzw, cb1[9].xyzw
                                dp4 r4.z, r3.xyzw, cb1[10].xyzw
                                itof r6.xyz, l(0, 0, 0, 0)
                                max r3.xyz, r4.xyzx, r6.xyzx  // r3.x <- <PrimariesTransform return value>.x; r3.y <- <PrimariesTransform return value>.y; r3.z <- <PrimariesTransform return value>.z
                
                #line 277
                                mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 278
                              else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 281
                                mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 282
                              endif 
                
                #line 388
                              mov r3.xyz, r3.xyzx
                
                #line 389
                              nop 
                              mov r3.xyz, r3.xyzx
                
                #line 287
                              ieq r3.w, cb0[12].w, cb0[13].x
                              if_nz r3.w
                
                #line 289
                                mov r5.xyz, r3.xyzx
                
                #line 290
                              endif   // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 291
                              if_z r3.w
                                ieq r3.w, cb0[13].x, l(1)
                                ieq r4.x, cb0[13].x, l(4)
                                or r3.w, r3.w, r4.x
                                if_nz r3.w
                
                #line 293
                                  ieq r3.w, cb0[12].w, l(16)
                                  ieq r4.x, cb0[12].w, l(18)
                                  or r3.w, r3.w, r4.x
                                  if_nz r3.w
                
                #line 295
                                    nop 
                                    mov r3.xyz, r3.xyzx
                
                #line 184
                                    nop 
                                    mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 178
                                    mov r3.w, l(0.150000)  // r3.w <- A
                                    mov r4.w, l(0.500000)  // r4.w <- B
                
                #line 179
                                    mul r6.xyz, r4.xyzx, r3.wwww
                                    add r6.xyz, r6.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                    mul r6.xyz, r4.xyzx, r6.xyzx
                                    add r6.xyz, r6.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                    mul r7.xyz, r4.xyzx, r3.wwww
                                    add r7.xyz, r4.wwww, r7.xyzx
                                    mul r4.xyz, r4.xyzx, r7.xyzx
                                    add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                    div r4.xyz, r6.xyzx, r4.xyzx
                                    mov r6.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                    add r4.xyz, r4.xyzx, r6.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 184
                                    mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 185
                                    nop 
                                    mul r6.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 178
                                    mov r3.w, l(0.150000)
                                    mov r4.w, l(0.500000)
                
                #line 179
                                    mul r7.xyz, r6.xyzx, r3.wwww
                                    add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                    mul r7.xyz, r6.xyzx, r7.xyzx
                                    add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                    mul r8.xyz, r6.xyzx, r3.wwww
                                    add r8.xyz, r4.wwww, r8.xyzx
                                    mul r6.xyz, r6.xyzx, r8.xyzx
                                    add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                    div r6.xyz, r7.xyzx, r6.xyzx
                                    mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                    add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 185
                                    div r5.xyz, r6.xyzx, r4.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 186
                                    mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 295
                                    mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 296
                                  else 
                
                #line 299
                                    mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 300
                                  endif 
                
                #line 301
                                else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 304
                                  mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 305
                                endif 
                              endif 
                
                #line 389
                              mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 390
                              nop 
                              mov r5.xyz, r5.xyzx
                
                #line 316
                              ieq r3.x, cb0[12].w, cb0[13].x
                              if_nz r3.x
                
                #line 318
                                mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 319
                              else 
                
                #line 320
                                ieq r3.x, cb0[13].x, l(16)
                                if_nz r3.x
                
                #line 322
                                  nop 
                                  mov r5.xyz, r5.xyzx
                
                #line 165
                                  mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                                  mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                                  mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                                  mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                                  mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                                  itof r4.yzw, l(0, 10000, 10000, 10000)
                                  div r4.yzw, r5.xxyz, r4.yyzw
                                  log r4.yzw, r4.yyzw
                                  mul r4.yzw, r3.xxxx, r4.yyzw
                                  exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                                  mul r6.xyz, r3.wwww, r4.yzwy
                                  add r3.xzw, r3.zzzz, r6.xxyz
                                  itof r6.xyz, l(1, 1, 1, 0)
                                  mul r4.xyz, r4.yzwy, r4.xxxx
                                  add r4.xyz, r4.xyzx, r6.xyzx
                                  div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                                  log r3.xzw, r3.xxzw
                                  mul r3.xyz, r3.xzwx, r3.yyyy
                                  exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                                  mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 322
                                  mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 323
                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 324
                                  ieq r3.x, cb0[13].x, l(18)
                                  if_nz r3.x
                
                #line 326
                                    nop 
                                    mov r5.xyz, r5.xyzx
                
                #line 165
                                    mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                                    mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                                    mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                                    mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                                    mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                                    itof r4.yzw, l(0, 10000, 10000, 10000)
                                    div r4.yzw, r5.xxyz, r4.yyzw
                                    log r4.yzw, r4.yyzw
                                    mul r4.yzw, r3.xxxx, r4.yyzw
                                    exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                                    mul r6.xyz, r3.wwww, r4.yzwy
                                    add r3.xzw, r3.zzzz, r6.xxyz
                                    itof r6.xyz, l(1, 1, 1, 0)
                                    mul r4.xyz, r4.yzwy, r4.xxxx
                                    add r4.xyz, r4.xyzx, r6.xyzx
                                    div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                                    log r3.xzw, r3.xxzw
                                    mul r3.xyz, r3.xzwx, r3.yyyy
                                    exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                                    mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 326
                                    mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 327
                                  else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 328
                                    ieq r3.x, cb0[13].x, l(1)
                                    if_nz r3.x
                
                #line 330
                                      log r3.xyz, r5.xyzx
                                      mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                      exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 331
                                    else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 332
                                      ieq r3.x, cb0[13].x, l(4)
                                      if_nz r3.x
                
                #line 334
                                        log r3.xyz, r5.xyzx
                                        mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                        exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 335
                                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 338
                                        mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 339
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                
                #line 390
                              mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 391
                              nop 
                              mov r5.xyz, r5.xyzx
                
                #line 311
                              mov r5.xyz, r5.xyzx  // r5.x <- <adjustRange return value>.x; r5.y <- <adjustRange return value>.y; r5.z <- <adjustRange return value>.z
                
                #line 391
                              mov r5.xyz, r5.xyzx
                
                #line 392
                              nop 
                              mov r5.xyz, r5.xyzx
                
                #line 367
                              mov r5.xyz, r5.xyzx  // r5.x <- <reorderPlanes return value>.x; r5.y <- <reorderPlanes return value>.y; r5.z <- <reorderPlanes return value>.z
                
                #line 392
                              mov r5.xyz, r5.xyzx
                
                #line 393
                            endif 
                          endif 
                
                #line 394
                          itof r5.w, l(1)  // r5.w <- <RenderFloat return value>.w
                          mov r5.xyz, r5.xyzx  // r5.x <- <RenderFloat return value>.x; r5.y <- <RenderFloat return value>.y; r5.z <- <RenderFloat return value>.z
                
                #line 447
                          mov r5.xyzw, r5.xyzw  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w
                
                #line 448
                          mov r5.xyzw, r5.xyzw  // r5.x <- <GetRGBA return value>.x; r5.y <- <GetRGBA return value>.y; r5.z <- <GetRGBA return value>.z; r5.w <- <GetRGBA return value>.w
                
                #line 449
                        else   // Prior locations: r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33
                
                #line 450
                          ieq r3.x, cb0[12].x, l(4)
                          if_nz r3.x
                
                #line 452
                            nop 
                
                #line 81
                            itof r5.xyz, l(0, 1, 0, 0)  // r5.x <- <PSPlanarRGB_Reverse return value>.x; r5.y <- <PSPlanarRGB_Reverse return value>.y; r5.z <- <PSPlanarRGB_Reverse return value>.z
                            mov r5.w, l(1.000000)  // r5.w <- <PSPlanarRGB_Reverse return value>.w
                
                #line 452
                            mov r5.xyzw, r5.xyzw  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w
                
                #line 453
                            nop 
                            mov r5.xyzw, r5.xyzw
                
                #line 372
                            if_z cb0[14].z
                
                #line 374
                              nop 
                              mov r3.xyzw, r5.xyzw
                
                #line 191
                              ieq r4.x, cb0[12].w, cb0[13].x
                              if_nz r4.x
                
                #line 193
                                mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 194
                              else 
                
                #line 195
                                ieq r4.x, cb0[12].w, l(8)
                                if_nz r4.x
                
                #line 197
                                  mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 198
                                else 
                
                #line 199
                                  ieq r4.x, cb0[12].w, l(16)
                                  if_nz r4.x
                
                #line 201
                                    nop 
                                    mov r3.xyzw, r3.xyzw
                
                #line 126
                                    mov r4.x, l(0.835938)  // r4.x <- ST2084_c1
                
                #line 127
                                    mov r4.y, l(18.851562)  // r4.y <- ST2084_c2
                
                #line 128
                                    mov r4.z, l(18.687500)  // r4.z <- ST2084_c3
                
                #line 129
                                    itof r6.xyzw, l(0, 0, 0, 0)
                                    max r6.xyzw, r3.xyzw, r6.xyzw
                                    log r6.xyzw, r6.xyzw
                                    mul r6.xyzw, r6.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                    exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 130
                                    mov r7.xyzw, -r4.xxxx
                                    add r7.xyzw, r6.xyzw, r7.xyzw
                                    max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                    mul r6.xyzw, r4.zzzz, r6.xyzw
                                    mov r6.xyzw, -r6.xyzw
                                    add r4.xyzw, r4.yyyy, r6.xyzw
                                    div r4.xyzw, r7.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 131
                                    log r4.xyzw, r4.xyzw
                                    mul r4.xyzw, r4.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                    exp r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 132
                                    itof r6.xyzw, l(10000, 10000, 10000, 10000)
                                    mul r3.xyzw, r4.xyzw, r6.xyzw  // r3.x <- <ST2084TOLinear return value>.x; r3.y <- <ST2084TOLinear return value>.y; r3.z <- <ST2084TOLinear return value>.z; r3.w <- <ST2084TOLinear return value>.w
                
                #line 201
                                    mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 202
                                  else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 203
                                    ieq r4.x, cb0[12].w, l(18)
                                    if_nz r4.x
                
                #line 205
                                      nop 
                                      mov r3.xyzw, r3.xyzw
                
                #line 137
                                      itof r4.x, l(2000)  // r4.x <- alpha_gain
                
                #line 138
                                      nop 
                                      mov r3.x, r3.x
                
                #line 114
                                      mov r4.y, l(4.000000)  // r4.y <- B67_inv_r2
                
                #line 116
                                      mul r4.z, r3.x, r3.x
                                      mul r6.x, r4.y, r4.z  // r6.x <- x
                
                #line 119
                                      mov r6.x, r6.x  // r6.x <- <inverse_HLG return value>
                
                #line 138
                                      mov r6.x, r6.x  // r6.x <- rgb.x
                
                #line 139
                                      nop 
                                      mov r3.y, r3.y
                
                #line 111
                                      mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                      mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                      mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 118
                                      mov r4.w, -r4.w
                                      add r4.w, r3.y, r4.w
                                      div r4.y, r4.w, r4.y
                                      mul r4.y, r4.y, l(1.442695)
                                      exp r4.y, r4.y
                                      add r6.y, r4.z, r4.y  // r6.y <- x
                
                #line 119
                                      mov r6.y, r6.y  // r6.y <- <inverse_HLG return value>
                
                #line 139
                                      mov r6.y, r6.y  // r6.y <- rgb.y
                
                #line 140
                                      nop 
                                      mov r3.z, r3.z
                
                #line 114
                                      mov r4.y, l(4.000000)  // r4.y <- B67_inv_r2
                
                #line 116
                                      mul r4.z, r3.z, r3.z
                                      mul r6.z, r4.y, r4.z  // r6.z <- x
                
                #line 119
                                      mov r6.z, r6.z  // r6.z <- <inverse_HLG return value>
                
                #line 140
                                      mov r6.z, r6.z  // r6.z <- rgb.z
                
                #line 141
                                      mov r4.yzw, l(0,0.262700,0.678000,0.059300)  // r4.y <- ootf_2020.x; r4.z <- ootf_2020.y; r4.w <- ootf_2020.z
                
                #line 142
                                      dp3 r4.y, r4.yzwy, r6.xyzx
                                      mul r4.x, r4.y, r4.x  // r4.x <- ootf_ys
                
                #line 143
                                      log r4.x, r4.x
                                      mul r4.x, r4.x, l(0.200000)
                                      exp r4.x, r4.x
                                      mul r3.xyz, r4.xxxx, r6.xyzx  // r3.x <- <HLGTOLinear return value>.x; r3.y <- <HLGTOLinear return value>.y; r3.z <- <HLGTOLinear return value>.z
                                      mul r3.w, r3.w, r4.x  // r3.w <- <HLGTOLinear return value>.w
                
                #line 205
                                      mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 206
                                    else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 207
                                      ieq r4.x, cb0[12].w, l(1)
                                      if_nz r4.x
                
                #line 209
                                        nop 
                                        mov r3.xyzw, r3.xyzw
                
                #line 147
                                        log r4.xyzw, r3.xyzw
                                        mul r4.xyzw, r4.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                        exp r3.xyzw, r4.xyzw  // r3.x <- <BT709TOLinear return value>.x; r3.y <- <BT709TOLinear return value>.y; r3.z <- <BT709TOLinear return value>.z; r3.w <- <BT709TOLinear return value>.w
                
                #line 209
                                        mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 210
                                      else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 211
                                        ieq r4.x, cb0[12].w, l(4)
                                        if_nz r4.x
                
                #line 213
                                          nop 
                                          mov r3.xyzw, r3.xyzw
                
                #line 152
                                          log r4.xyzw, r3.xyzw
                                          mul r4.xyzw, r4.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                          exp r3.xyzw, r4.xyzw  // r3.x <- <BT470M_SRGB_TOLinear return value>.x; r3.y <- <BT470M_SRGB_TOLinear return value>.y; r3.z <- <BT470M_SRGB_TOLinear return value>.z; r3.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 213
                                          mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 214
                                        else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 215
                                          ieq r4.x, cb0[12].w, l(5)
                                          if_nz r4.x
                
                #line 217
                                            nop 
                                            mov r3.xyzw, r3.xyzw
                
                #line 156
                                            log r4.xyzw, r3.xyzw
                                            mul r4.xyzw, r4.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                            exp r3.xyzw, r4.xyzw  // r3.x <- <BT470BGTOLinear return value>.x; r3.y <- <BT470BGTOLinear return value>.y; r3.z <- <BT470BGTOLinear return value>.z; r3.w <- <BT470BGTOLinear return value>.w
                
                #line 217
                                            mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 218
                                          else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 225
                                            mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 226
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                
                #line 374
                              mov r3.xyzw, r3.xyzw  // r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 375
                              nop 
                              mov r3.xyzw, r3.xyzw
                
                #line 275
                              ine r4.x, cb0[13].z, cb0[13].y
                              if_nz r4.x
                
                #line 277
                                nop 
                                mov r3.xyzw, r3.xyzw
                
                #line 270
                                dp4 r4.x, r3.xyzw, cb1[8].xyzw
                                dp4 r4.y, r3.xyzw, cb1[9].xyzw
                                dp4 r4.z, r3.xyzw, cb1[10].xyzw
                                itof r6.xyz, l(0, 0, 0, 0)
                                max r3.xyz, r4.xyzx, r6.xyzx  // r3.x <- <PrimariesTransform return value>.x; r3.y <- <PrimariesTransform return value>.y; r3.z <- <PrimariesTransform return value>.z
                
                #line 277
                                mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 278
                              else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 281
                                mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 282
                              endif 
                
                #line 375
                              mov r3.xyz, r3.xyzx
                
                #line 376
                              nop 
                              mov r3.xyz, r3.xyzx
                
                #line 287
                              ieq r3.w, cb0[12].w, cb0[13].x
                              if_nz r3.w
                
                #line 289
                                mov r5.xyz, r3.xyzx
                
                #line 290
                              endif   // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 291
                              if_z r3.w
                                ieq r3.w, cb0[13].x, l(1)
                                ieq r4.x, cb0[13].x, l(4)
                                or r3.w, r3.w, r4.x
                                if_nz r3.w
                
                #line 293
                                  ieq r3.w, cb0[12].w, l(16)
                                  ieq r4.x, cb0[12].w, l(18)
                                  or r3.w, r3.w, r4.x
                                  if_nz r3.w
                
                #line 295
                                    nop 
                                    mov r3.xyz, r3.xyzx
                
                #line 184
                                    nop 
                                    mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 178
                                    mov r3.w, l(0.150000)  // r3.w <- A
                                    mov r4.w, l(0.500000)  // r4.w <- B
                
                #line 179
                                    mul r6.xyz, r4.xyzx, r3.wwww
                                    add r6.xyz, r6.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                    mul r6.xyz, r4.xyzx, r6.xyzx
                                    add r6.xyz, r6.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                    mul r7.xyz, r4.xyzx, r3.wwww
                                    add r7.xyz, r4.wwww, r7.xyzx
                                    mul r4.xyz, r4.xyzx, r7.xyzx
                                    add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                    div r4.xyz, r6.xyzx, r4.xyzx
                                    mov r6.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                    add r4.xyz, r4.xyzx, r6.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 184
                                    mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 185
                                    nop 
                                    mul r6.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 178
                                    mov r3.w, l(0.150000)
                                    mov r4.w, l(0.500000)
                
                #line 179
                                    mul r7.xyz, r6.xyzx, r3.wwww
                                    add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                    mul r7.xyz, r6.xyzx, r7.xyzx
                                    add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                    mul r8.xyz, r6.xyzx, r3.wwww
                                    add r8.xyz, r4.wwww, r8.xyzx
                                    mul r6.xyz, r6.xyzx, r8.xyzx
                                    add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                    div r6.xyz, r7.xyzx, r6.xyzx
                                    mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                    add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 185
                                    div r5.xyz, r6.xyzx, r4.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 186
                                    mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 295
                                    mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 296
                                  else 
                
                #line 299
                                    mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 300
                                  endif 
                
                #line 301
                                else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 304
                                  mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 305
                                endif 
                              endif 
                
                #line 376
                              mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 377
                              nop 
                              mov r5.xyz, r5.xyzx
                
                #line 316
                              ieq r3.x, cb0[12].w, cb0[13].x
                              if_nz r3.x
                
                #line 318
                                mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 319
                              else 
                
                #line 320
                                ieq r3.x, cb0[13].x, l(16)
                                if_nz r3.x
                
                #line 322
                                  nop 
                                  mov r5.xyz, r5.xyzx
                
                #line 165
                                  mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                                  mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                                  mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                                  mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                                  mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                                  itof r4.yzw, l(0, 10000, 10000, 10000)
                                  div r4.yzw, r5.xxyz, r4.yyzw
                                  log r4.yzw, r4.yyzw
                                  mul r4.yzw, r3.xxxx, r4.yyzw
                                  exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                                  mul r6.xyz, r3.wwww, r4.yzwy
                                  add r3.xzw, r3.zzzz, r6.xxyz
                                  itof r6.xyz, l(1, 1, 1, 0)
                                  mul r4.xyz, r4.yzwy, r4.xxxx
                                  add r4.xyz, r4.xyzx, r6.xyzx
                                  div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                                  log r3.xzw, r3.xxzw
                                  mul r3.xyz, r3.xzwx, r3.yyyy
                                  exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                                  mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 322
                                  mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 323
                                else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 324
                                  ieq r3.x, cb0[13].x, l(18)
                                  if_nz r3.x
                
                #line 326
                                    nop 
                                    mov r5.xyz, r5.xyzx
                
                #line 165
                                    mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                                    mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                                    mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                                    mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                                    mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                                    itof r4.yzw, l(0, 10000, 10000, 10000)
                                    div r4.yzw, r5.xxyz, r4.yyzw
                                    log r4.yzw, r4.yyzw
                                    mul r4.yzw, r3.xxxx, r4.yyzw
                                    exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                                    mul r6.xyz, r3.wwww, r4.yzwy
                                    add r3.xzw, r3.zzzz, r6.xxyz
                                    itof r6.xyz, l(1, 1, 1, 0)
                                    mul r4.xyz, r4.yzwy, r4.xxxx
                                    add r4.xyz, r4.xyzx, r6.xyzx
                                    div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                                    log r3.xzw, r3.xxzw
                                    mul r3.xyz, r3.xzwx, r3.yyyy
                                    exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                                    mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 326
                                    mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 327
                                  else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 328
                                    ieq r3.x, cb0[13].x, l(1)
                                    if_nz r3.x
                
                #line 330
                                      log r3.xyz, r5.xyzx
                                      mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                      exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 331
                                    else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 332
                                      ieq r3.x, cb0[13].x, l(4)
                                      if_nz r3.x
                
                #line 334
                                        log r3.xyz, r5.xyzx
                                        mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                        exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 335
                                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 338
                                        mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 339
                                      endif 
                                    endif 
                                  endif 
                                endif 
                              endif 
                
                #line 377
                              mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 378
                              nop 
                              mov r5.xyz, r5.xyzx
                
                #line 311
                              mov r5.xyz, r5.xyzx  // r5.x <- <adjustRange return value>.x; r5.y <- <adjustRange return value>.y; r5.z <- <adjustRange return value>.z
                
                #line 378
                              mov r5.xyz, r5.xyzx
                
                #line 379
                              nop 
                              mov r5.xyz, r5.xyzx
                
                #line 367
                              mov r5.xyz, r5.xyzx  // r5.x <- <reorderPlanes return value>.x; r5.y <- <reorderPlanes return value>.y; r5.z <- <reorderPlanes return value>.z
                
                #line 379
                              mov r5.xyz, r5.xyzx
                
                #line 380
                            else   // Prior locations: r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33; r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w; r5.w <- rgb.w
                
                #line 372
                              mov r3.x, cb0[14].z  // r3.x <- DrawLine; r3.x <- DrawLine; r3.x <- DrawLine
                
                #line 381
                              ieq r3.x, r3.x, l(1)
                              if_z r3.x
                
                #line 387
                                nop 
                                mov r3.xyzw, r5.xyzw
                
                #line 191
                                ieq r4.x, cb0[12].w, cb0[13].x
                                if_nz r4.x
                
                #line 193
                                  mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 194
                                else 
                
                #line 195
                                  ieq r4.x, cb0[12].w, l(8)
                                  if_nz r4.x
                
                #line 197
                                    mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 198
                                  else 
                
                #line 199
                                    ieq r4.x, cb0[12].w, l(16)
                                    if_nz r4.x
                
                #line 201
                                      nop 
                                      mov r3.xyzw, r3.xyzw
                
                #line 126
                                      mov r4.x, l(0.835938)  // r4.x <- ST2084_c1
                
                #line 127
                                      mov r4.y, l(18.851562)  // r4.y <- ST2084_c2
                
                #line 128
                                      mov r4.z, l(18.687500)  // r4.z <- ST2084_c3
                
                #line 129
                                      itof r6.xyzw, l(0, 0, 0, 0)
                                      max r6.xyzw, r3.xyzw, r6.xyzw
                                      log r6.xyzw, r6.xyzw
                                      mul r6.xyzw, r6.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                      exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 130
                                      mov r7.xyzw, -r4.xxxx
                                      add r7.xyzw, r6.xyzw, r7.xyzw
                                      max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                      mul r6.xyzw, r4.zzzz, r6.xyzw
                                      mov r6.xyzw, -r6.xyzw
                                      add r4.xyzw, r4.yyyy, r6.xyzw
                                      div r4.xyzw, r7.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 131
                                      log r4.xyzw, r4.xyzw
                                      mul r4.xyzw, r4.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                      exp r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 132
                                      itof r6.xyzw, l(10000, 10000, 10000, 10000)
                                      mul r3.xyzw, r4.xyzw, r6.xyzw  // r3.x <- <ST2084TOLinear return value>.x; r3.y <- <ST2084TOLinear return value>.y; r3.z <- <ST2084TOLinear return value>.z; r3.w <- <ST2084TOLinear return value>.w
                
                #line 201
                                      mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 202
                                    else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 203
                                      ieq r4.x, cb0[12].w, l(18)
                                      if_nz r4.x
                
                #line 205
                                        nop 
                                        mov r3.xyzw, r3.xyzw
                
                #line 137
                                        itof r4.x, l(2000)  // r4.x <- alpha_gain
                
                #line 138
                                        nop 
                                        mov r3.x, r3.x
                
                #line 114
                                        mov r4.y, l(4.000000)  // r4.y <- B67_inv_r2
                
                #line 116
                                        mul r4.z, r3.x, r3.x
                                        mul r6.x, r4.y, r4.z  // r6.x <- x
                
                #line 119
                                        mov r6.x, r6.x  // r6.x <- <inverse_HLG return value>
                
                #line 138
                                        mov r6.x, r6.x  // r6.x <- rgb.x
                
                #line 139
                                        nop 
                                        mov r3.y, r3.y
                
                #line 111
                                        mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                        mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                        mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 118
                                        mov r4.w, -r4.w
                                        add r4.w, r3.y, r4.w
                                        div r4.y, r4.w, r4.y
                                        mul r4.y, r4.y, l(1.442695)
                                        exp r4.y, r4.y
                                        add r6.y, r4.z, r4.y  // r6.y <- x
                
                #line 119
                                        mov r6.y, r6.y  // r6.y <- <inverse_HLG return value>
                
                #line 139
                                        mov r6.y, r6.y  // r6.y <- rgb.y
                
                #line 140
                                        nop 
                                        mov r3.z, r3.z
                
                #line 114
                                        mov r4.y, l(4.000000)  // r4.y <- B67_inv_r2
                
                #line 116
                                        mul r4.z, r3.z, r3.z
                                        mul r6.z, r4.y, r4.z  // r6.z <- x
                
                #line 119
                                        mov r6.z, r6.z  // r6.z <- <inverse_HLG return value>
                
                #line 140
                                        mov r6.z, r6.z  // r6.z <- rgb.z
                
                #line 141
                                        mov r4.yzw, l(0,0.262700,0.678000,0.059300)  // r4.y <- ootf_2020.x; r4.z <- ootf_2020.y; r4.w <- ootf_2020.z
                
                #line 142
                                        dp3 r4.y, r4.yzwy, r6.xyzx
                                        mul r4.x, r4.y, r4.x  // r4.x <- ootf_ys
                
                #line 143
                                        log r4.x, r4.x
                                        mul r4.x, r4.x, l(0.200000)
                                        exp r4.x, r4.x
                                        mul r3.xyz, r4.xxxx, r6.xyzx  // r3.x <- <HLGTOLinear return value>.x; r3.y <- <HLGTOLinear return value>.y; r3.z <- <HLGTOLinear return value>.z
                                        mul r3.w, r3.w, r4.x  // r3.w <- <HLGTOLinear return value>.w
                
                #line 205
                                        mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 206
                                      else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 207
                                        ieq r4.x, cb0[12].w, l(1)
                                        if_nz r4.x
                
                #line 209
                                          nop 
                                          mov r3.xyzw, r3.xyzw
                
                #line 147
                                          log r4.xyzw, r3.xyzw
                                          mul r4.xyzw, r4.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                          exp r3.xyzw, r4.xyzw  // r3.x <- <BT709TOLinear return value>.x; r3.y <- <BT709TOLinear return value>.y; r3.z <- <BT709TOLinear return value>.z; r3.w <- <BT709TOLinear return value>.w
                
                #line 209
                                          mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 210
                                        else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 211
                                          ieq r4.x, cb0[12].w, l(4)
                                          if_nz r4.x
                
                #line 213
                                            nop 
                                            mov r3.xyzw, r3.xyzw
                
                #line 152
                                            log r4.xyzw, r3.xyzw
                                            mul r4.xyzw, r4.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                            exp r3.xyzw, r4.xyzw  // r3.x <- <BT470M_SRGB_TOLinear return value>.x; r3.y <- <BT470M_SRGB_TOLinear return value>.y; r3.z <- <BT470M_SRGB_TOLinear return value>.z; r3.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 213
                                            mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 214
                                          else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 215
                                            ieq r4.x, cb0[12].w, l(5)
                                            if_nz r4.x
                
                #line 217
                                              nop 
                                              mov r3.xyzw, r3.xyzw
                
                #line 156
                                              log r4.xyzw, r3.xyzw
                                              mul r4.xyzw, r4.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                              exp r3.xyzw, r4.xyzw  // r3.x <- <BT470BGTOLinear return value>.x; r3.y <- <BT470BGTOLinear return value>.y; r3.z <- <BT470BGTOLinear return value>.z; r3.w <- <BT470BGTOLinear return value>.w
                
                #line 217
                                              mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 218
                                            else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 225
                                              mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 226
                                            endif 
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                                endif 
                
                #line 387
                                mov r3.xyzw, r3.xyzw  // r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 388
                                nop 
                                mov r3.xyzw, r3.xyzw
                
                #line 275
                                ine r4.x, cb0[13].z, cb0[13].y
                                if_nz r4.x
                
                #line 277
                                  nop 
                                  mov r3.xyzw, r3.xyzw
                
                #line 270
                                  dp4 r4.x, r3.xyzw, cb1[8].xyzw
                                  dp4 r4.y, r3.xyzw, cb1[9].xyzw
                                  dp4 r4.z, r3.xyzw, cb1[10].xyzw
                                  itof r6.xyz, l(0, 0, 0, 0)
                                  max r3.xyz, r4.xyzx, r6.xyzx  // r3.x <- <PrimariesTransform return value>.x; r3.y <- <PrimariesTransform return value>.y; r3.z <- <PrimariesTransform return value>.z
                
                #line 277
                                  mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 278
                                else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 281
                                  mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 282
                                endif 
                
                #line 388
                                mov r3.xyz, r3.xyzx
                
                #line 389
                                nop 
                                mov r3.xyz, r3.xyzx
                
                #line 287
                                ieq r3.w, cb0[12].w, cb0[13].x
                                if_nz r3.w
                
                #line 289
                                  mov r5.xyz, r3.xyzx
                
                #line 290
                                endif   // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 291
                                if_z r3.w
                                  ieq r3.w, cb0[13].x, l(1)
                                  ieq r4.x, cb0[13].x, l(4)
                                  or r3.w, r3.w, r4.x
                                  if_nz r3.w
                
                #line 293
                                    ieq r3.w, cb0[12].w, l(16)
                                    ieq r4.x, cb0[12].w, l(18)
                                    or r3.w, r3.w, r4.x
                                    if_nz r3.w
                
                #line 295
                                      nop 
                                      mov r3.xyz, r3.xyzx
                
                #line 184
                                      nop 
                                      mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 178
                                      mov r3.w, l(0.150000)  // r3.w <- A
                                      mov r4.w, l(0.500000)  // r4.w <- B
                
                #line 179
                                      mul r6.xyz, r4.xyzx, r3.wwww
                                      add r6.xyz, r6.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                      mul r6.xyz, r4.xyzx, r6.xyzx
                                      add r6.xyz, r6.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                      mul r7.xyz, r4.xyzx, r3.wwww
                                      add r7.xyz, r4.wwww, r7.xyzx
                                      mul r4.xyz, r4.xyzx, r7.xyzx
                                      add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                      div r4.xyz, r6.xyzx, r4.xyzx
                                      mov r6.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                      add r4.xyz, r4.xyzx, r6.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 184
                                      mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 185
                                      nop 
                                      mul r6.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 178
                                      mov r3.w, l(0.150000)
                                      mov r4.w, l(0.500000)
                
                #line 179
                                      mul r7.xyz, r6.xyzx, r3.wwww
                                      add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                      mul r7.xyz, r6.xyzx, r7.xyzx
                                      add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                      mul r8.xyz, r6.xyzx, r3.wwww
                                      add r8.xyz, r4.wwww, r8.xyzx
                                      mul r6.xyz, r6.xyzx, r8.xyzx
                                      add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                      div r6.xyz, r7.xyzx, r6.xyzx
                                      mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                      add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 185
                                      div r5.xyz, r6.xyzx, r4.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 186
                                      mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 295
                                      mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 296
                                    else 
                
                #line 299
                                      mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 300
                                    endif 
                
                #line 301
                                  else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 304
                                    mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 305
                                  endif 
                                endif 
                
                #line 389
                                mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 390
                                nop 
                                mov r5.xyz, r5.xyzx
                
                #line 316
                                ieq r3.x, cb0[12].w, cb0[13].x
                                if_nz r3.x
                
                #line 318
                                  mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 319
                                else 
                
                #line 320
                                  ieq r3.x, cb0[13].x, l(16)
                                  if_nz r3.x
                
                #line 322
                                    nop 
                                    mov r5.xyz, r5.xyzx
                
                #line 165
                                    mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                                    mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                                    mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                                    mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                                    mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                                    itof r4.yzw, l(0, 10000, 10000, 10000)
                                    div r4.yzw, r5.xxyz, r4.yyzw
                                    log r4.yzw, r4.yyzw
                                    mul r4.yzw, r3.xxxx, r4.yyzw
                                    exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                                    mul r6.xyz, r3.wwww, r4.yzwy
                                    add r3.xzw, r3.zzzz, r6.xxyz
                                    itof r6.xyz, l(1, 1, 1, 0)
                                    mul r4.xyz, r4.yzwy, r4.xxxx
                                    add r4.xyz, r4.xyzx, r6.xyzx
                                    div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                                    log r3.xzw, r3.xxzw
                                    mul r3.xyz, r3.xzwx, r3.yyyy
                                    exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                                    mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 322
                                    mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 323
                                  else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 324
                                    ieq r3.x, cb0[13].x, l(18)
                                    if_nz r3.x
                
                #line 326
                                      nop 
                                      mov r5.xyz, r5.xyzx  // v0.x <- input.Pos.x; v0.y <- input.Pos.y; v0.z <- input.Pos.z; v0.w <- input.Pos.w; v1.x <- input.TexCoord.x; v1.y <- input.TexCoord.y; o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                
                #line 165
                                      mov r3.x, l(0.159302)  // r0.x <- yuv2rgbmatrix._m00; r0.y <- yuv2rgbmatrix._m10; r0.z <- yuv2rgbmatrix._m20; r0.w <- yuv2rgbmatrix._m30; r3.x <- ST2084_m1
                
                #line 166
                                      mov r3.y, l(78.843750)  // r1.x <- yuv2rgbmatrix._m01; r1.y <- yuv2rgbmatrix._m11; r1.z <- yuv2rgbmatrix._m21; r1.w <- yuv2rgbmatrix._m31; r3.y <- ST2084_m2
                
                #line 167
                                      mov r3.z, l(0.835938)  // r2.x <- yuv2rgbmatrix._m02; r2.y <- yuv2rgbmatrix._m12; r2.z <- yuv2rgbmatrix._m22; r2.w <- yuv2rgbmatrix._m32; r3.z <- ST2084_c1
                
                #line 168
                                      mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                                      mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                                      itof r4.yzw, l(0, 10000, 10000, 10000)
                                      div r4.yzw, r5.xxyz, r4.yyzw
                                      log r4.yzw, r4.yyzw
                                      mul r4.yzw, r3.xxxx, r4.yyzw
                                      exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                                      mul r6.xyz, r3.wwww, r4.yzwy
                                      add r3.xzw, r3.zzzz, r6.xxyz
                                      itof r6.xyz, l(1, 1, 1, 0)
                                      mul r4.xyz, r4.yzwy, r4.xxxx
                                      add r4.xyz, r4.xyzx, r6.xyzx
                                      div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                                      log r3.xzw, r3.xxzw
                                      mul r3.xyz, r3.xzwx, r3.yyyy
                                      exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                                      mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 326
                                      mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 327
                                    else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 328
                                      ieq r3.x, cb0[13].x, l(1)
                                      if_nz r3.x
                
                #line 330
                                        log r3.xyz, r5.xyzx
                                        mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                        exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 331
                                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 332
                                        ieq r3.x, cb0[13].x, l(4)
                                        if_nz r3.x
                
                #line 334
                                          log r3.xyz, r5.xyzx
                                          mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                          exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 335
                                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 338
                                          mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 339
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                                endif 
                
                #line 390
                                mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 391
                                nop 
                                mov r5.xyz, r5.xyzx
                
                #line 311
                                mov r5.xyz, r5.xyzx  // r5.x <- <adjustRange return value>.x; r5.y <- <adjustRange return value>.y; r5.z <- <adjustRange return value>.z
                
                #line 391
                                mov r5.xyz, r5.xyzx
                
                #line 392
                                nop 
                                mov r5.xyz, r5.xyzx
                
                #line 367
                                mov r5.xyz, r5.xyzx  // r5.x <- <reorderPlanes return value>.x; r5.y <- <reorderPlanes return value>.y; r5.z <- <reorderPlanes return value>.z
                
                #line 392
                                mov r5.xyz, r5.xyzx
                
                #line 393
                              endif 
                            endif 
                
                #line 394
                            itof r5.w, l(1)  // r5.w <- <RenderFloat return value>.w
                            mov r5.xyz, r5.xyzx  // r5.x <- <RenderFloat return value>.x; r5.y <- <RenderFloat return value>.y; r5.z <- <RenderFloat return value>.z
                
                #line 453
                            mov r5.xyzw, r5.xyzw  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w
                
                #line 454
                            mov r5.xyzw, r5.xyzw  // r5.x <- <GetRGBA return value>.x; r5.y <- <GetRGBA return value>.y; r5.z <- <GetRGBA return value>.z; r5.w <- <GetRGBA return value>.w
                
                #line 455
                          else   // Prior locations: r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33
                
                #line 456
                            ieq r3.x, cb0[12].x, l(7)
                            if_nz r3.x
                
                #line 458
                              sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v1.xyxx, t0.xyzw, s0  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w
                
                #line 459
                              nop 
                              mov r5.xyzw, r5.xyzw
                
                #line 372
                              if_z cb0[14].z
                
                #line 374
                                nop 
                                mov r3.xyzw, r5.xyzw
                
                #line 191
                                ieq r4.x, cb0[12].w, cb0[13].x
                                if_nz r4.x
                
                #line 193
                                  mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 194
                                else 
                
                #line 195
                                  ieq r4.x, cb0[12].w, l(8)
                                  if_nz r4.x
                
                #line 197
                                    mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 198
                                  else 
                
                #line 199
                                    ieq r4.x, cb0[12].w, l(16)
                                    if_nz r4.x
                
                #line 201
                                      nop 
                                      mov r3.xyzw, r3.xyzw
                
                #line 126
                                      mov r4.x, l(0.835938)  // r4.x <- ST2084_c1
                
                #line 127
                                      mov r4.y, l(18.851562)  // r4.y <- ST2084_c2
                
                #line 128
                                      mov r4.z, l(18.687500)  // r4.z <- ST2084_c3
                
                #line 129
                                      itof r6.xyzw, l(0, 0, 0, 0)
                                      max r6.xyzw, r3.xyzw, r6.xyzw
                                      log r6.xyzw, r6.xyzw
                                      mul r6.xyzw, r6.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                      exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 130
                                      mov r7.xyzw, -r4.xxxx
                                      add r7.xyzw, r6.xyzw, r7.xyzw
                                      max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                      mul r6.xyzw, r4.zzzz, r6.xyzw
                                      mov r6.xyzw, -r6.xyzw
                                      add r4.xyzw, r4.yyyy, r6.xyzw
                                      div r4.xyzw, r7.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 131
                                      log r4.xyzw, r4.xyzw
                                      mul r4.xyzw, r4.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                      exp r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 132
                                      itof r6.xyzw, l(10000, 10000, 10000, 10000)
                                      mul r3.xyzw, r4.xyzw, r6.xyzw  // r3.x <- <ST2084TOLinear return value>.x; r3.y <- <ST2084TOLinear return value>.y; r3.z <- <ST2084TOLinear return value>.z; r3.w <- <ST2084TOLinear return value>.w
                
                #line 201
                                      mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 202
                                    else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 203
                                      ieq r4.x, cb0[12].w, l(18)
                                      if_nz r4.x
                
                #line 205
                                        nop 
                                        mov r3.xyzw, r3.xyzw
                
                #line 137
                                        itof r4.x, l(2000)  // r4.x <- alpha_gain
                
                #line 138
                                        nop 
                                        mov r3.x, r3.x
                
                #line 111
                                        mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                        mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                        mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                        mov r6.x, l(4.000000)  // r6.x <- B67_inv_r2
                
                #line 115
                                        ge r6.y, l(0.500000), r3.x
                                        if_nz r6.y
                
                #line 116
                                          mul r6.y, r3.x, r3.x
                                          mul r3.x, r6.x, r6.y
                                        else   // Prior locations: r3.x <- rgb.x; r3.x <- rgb.x
                
                #line 118
                                          mov r4.w, -r4.w
                                          add r4.w, r3.x, r4.w
                                          div r4.y, r4.w, r4.y
                                          mul r4.y, r4.y, l(1.442695)
                                          exp r4.y, r4.y
                                          add r3.x, r4.z, r4.y
                                        endif 
                
                #line 119
                                        mov r3.x, r3.x  // r3.x <- <inverse_HLG return value>
                
                #line 138
                                        mov r3.x, r3.x  // r3.x <- rgb.x
                
                #line 139
                                        nop 
                                        mov r3.y, r3.y
                
                #line 111
                                        mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                        mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                        mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                        mov r6.x, l(4.000000)  // r6.x <- B67_inv_r2
                
                #line 115
                                        ge r6.y, l(0.500000), r3.y
                                        if_nz r6.y
                
                #line 116
                                          mul r6.y, r3.y, r3.y
                                          mul r3.y, r6.x, r6.y
                                        else   // Prior locations: r3.y <- rgb.y; r3.y <- rgb.y
                
                #line 118
                                          mov r4.w, -r4.w
                                          add r4.w, r3.y, r4.w
                                          div r4.y, r4.w, r4.y
                                          mul r4.y, r4.y, l(1.442695)
                                          exp r4.y, r4.y
                                          add r3.y, r4.z, r4.y
                                        endif 
                
                #line 119
                                        mov r3.y, r3.y  // r3.y <- <inverse_HLG return value>
                
                #line 139
                                        mov r3.y, r3.y  // r3.y <- rgb.y
                
                #line 140
                                        nop 
                                        mov r3.z, r3.z
                
                #line 111
                                        mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                        mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                        mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                        mov r6.x, l(4.000000)  // r6.x <- B67_inv_r2
                
                #line 115
                                        ge r6.y, l(0.500000), r3.z
                                        if_nz r6.y
                
                #line 116
                                          mul r6.y, r3.z, r3.z
                                          mul r3.z, r6.x, r6.y
                                        else   // Prior locations: r3.z <- rgb.z; r3.z <- rgb.z
                
                #line 118
                                          mov r4.w, -r4.w
                                          add r4.w, r3.z, r4.w
                                          div r4.y, r4.w, r4.y
                                          mul r4.y, r4.y, l(1.442695)
                                          exp r4.y, r4.y
                                          add r3.z, r4.z, r4.y
                                        endif 
                
                #line 119
                                        mov r3.z, r3.z  // r3.z <- <inverse_HLG return value>
                
                #line 140
                                        mov r3.z, r3.z  // r3.z <- rgb.z
                
                #line 141
                                        mov r4.yzw, l(0,0.262700,0.678000,0.059300)  // r4.y <- ootf_2020.x; r4.z <- ootf_2020.y; r4.w <- ootf_2020.z
                
                #line 142
                                        dp3 r4.y, r4.yzwy, r3.xyzx
                                        mul r4.x, r4.y, r4.x  // r4.x <- ootf_ys
                
                #line 143
                                        log r4.x, r4.x
                                        mul r4.x, r4.x, l(0.200000)
                                        exp r4.x, r4.x
                                        mul r3.xyzw, r3.xyzw, r4.xxxx  // r3.x <- <HLGTOLinear return value>.x; r3.y <- <HLGTOLinear return value>.y; r3.z <- <HLGTOLinear return value>.z; r3.w <- <HLGTOLinear return value>.w
                
                #line 205
                                        mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 206
                                      else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 207
                                        ieq r4.x, cb0[12].w, l(1)
                                        if_nz r4.x
                
                #line 209
                                          nop 
                                          mov r3.xyzw, r3.xyzw
                
                #line 147
                                          log r4.xyzw, r3.xyzw
                                          mul r4.xyzw, r4.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                          exp r3.xyzw, r4.xyzw  // r3.x <- <BT709TOLinear return value>.x; r3.y <- <BT709TOLinear return value>.y; r3.z <- <BT709TOLinear return value>.z; r3.w <- <BT709TOLinear return value>.w
                
                #line 209
                                          mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 210
                                        else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 211
                                          ieq r4.x, cb0[12].w, l(4)
                                          if_nz r4.x
                
                #line 213
                                            nop 
                                            mov r3.xyzw, r3.xyzw
                
                #line 152
                                            log r4.xyzw, r3.xyzw
                                            mul r4.xyzw, r4.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                            exp r3.xyzw, r4.xyzw  // r3.x <- <BT470M_SRGB_TOLinear return value>.x; r3.y <- <BT470M_SRGB_TOLinear return value>.y; r3.z <- <BT470M_SRGB_TOLinear return value>.z; r3.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 213
                                            mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 214
                                          else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 215
                                            ieq r4.x, cb0[12].w, l(5)
                                            if_nz r4.x
                
                #line 217
                                              nop 
                                              mov r3.xyzw, r3.xyzw
                
                #line 156
                                              log r4.xyzw, r3.xyzw
                                              mul r4.xyzw, r4.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                              exp r3.xyzw, r4.xyzw  // r3.x <- <BT470BGTOLinear return value>.x; r3.y <- <BT470BGTOLinear return value>.y; r3.z <- <BT470BGTOLinear return value>.z; r3.w <- <BT470BGTOLinear return value>.w
                
                #line 217
                                              mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 218
                                            else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 225
                                              mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 226
                                            endif 
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                                endif 
                
                #line 374
                                mov r3.xyzw, r3.xyzw  // r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 375
                                nop 
                                mov r3.xyzw, r3.xyzw
                
                #line 275
                                ine r4.x, cb0[13].z, cb0[13].y
                                if_nz r4.x
                
                #line 277
                                  nop 
                                  mov r3.xyzw, r3.xyzw
                
                #line 270
                                  dp4 r4.x, r3.xyzw, cb1[8].xyzw
                                  dp4 r4.y, r3.xyzw, cb1[9].xyzw
                                  dp4 r4.z, r3.xyzw, cb1[10].xyzw
                                  itof r6.xyz, l(0, 0, 0, 0)
                                  max r3.xyz, r4.xyzx, r6.xyzx  // r3.x <- <PrimariesTransform return value>.x; r3.y <- <PrimariesTransform return value>.y; r3.z <- <PrimariesTransform return value>.z
                
                #line 277
                                  mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 278
                                else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 281
                                  mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 282
                                endif 
                
                #line 375
                                mov r3.xyz, r3.xyzx
                
                #line 376
                                nop 
                                mov r3.xyz, r3.xyzx
                
                #line 287
                                ieq r3.w, cb0[12].w, cb0[13].x
                                if_nz r3.w
                
                #line 289
                                  mov r5.xyz, r3.xyzx
                
                #line 290
                                endif   // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 291
                                if_z r3.w
                                  ieq r3.w, cb0[13].x, l(1)
                                  ieq r4.x, cb0[13].x, l(4)
                                  or r3.w, r3.w, r4.x
                                  if_nz r3.w
                
                #line 293
                                    ieq r3.w, cb0[12].w, l(16)
                                    ieq r4.x, cb0[12].w, l(18)
                                    or r3.w, r3.w, r4.x
                                    if_nz r3.w
                
                #line 295
                                      nop 
                                      mov r3.xyz, r3.xyzx
                
                #line 184
                                      nop 
                                      mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 178
                                      mov r3.w, l(0.150000)  // r3.w <- A
                                      mov r4.w, l(0.500000)  // r4.w <- B
                
                #line 179
                                      mul r6.xyz, r4.xyzx, r3.wwww
                                      add r6.xyz, r6.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                      mul r6.xyz, r4.xyzx, r6.xyzx
                                      add r6.xyz, r6.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                      mul r7.xyz, r4.xyzx, r3.wwww
                                      add r7.xyz, r4.wwww, r7.xyzx
                                      mul r4.xyz, r4.xyzx, r7.xyzx
                                      add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                      div r4.xyz, r6.xyzx, r4.xyzx
                                      mov r6.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                      add r4.xyz, r4.xyzx, r6.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 184
                                      mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 185
                                      nop 
                                      mul r6.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 178
                                      mov r3.w, l(0.150000)
                                      mov r4.w, l(0.500000)
                
                #line 179
                                      mul r7.xyz, r6.xyzx, r3.wwww
                                      add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                      mul r7.xyz, r6.xyzx, r7.xyzx
                                      add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                      mul r8.xyz, r6.xyzx, r3.wwww
                                      add r8.xyz, r4.wwww, r8.xyzx
                                      mul r6.xyz, r6.xyzx, r8.xyzx
                                      add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                      div r6.xyz, r7.xyzx, r6.xyzx
                                      mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                      add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 185
                                      div r5.xyz, r6.xyzx, r4.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 186
                                      mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 295
                                      mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 296
                                    else 
                
                #line 299
                                      mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 300
                                    endif 
                
                #line 301
                                  else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 304
                                    mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 305
                                  endif 
                                endif 
                
                #line 376
                                mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 377
                                nop 
                                mov r5.xyz, r5.xyzx
                
                #line 316
                                ieq r3.x, cb0[12].w, cb0[13].x
                                if_nz r3.x
                
                #line 318
                                  mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 319
                                else 
                
                #line 320
                                  ieq r3.x, cb0[13].x, l(16)
                                  if_nz r3.x
                
                #line 322
                                    nop 
                                    mov r5.xyz, r5.xyzx
                
                #line 165
                                    mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                                    mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                                    mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                                    mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                                    mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                                    itof r4.yzw, l(0, 10000, 10000, 10000)
                                    div r4.yzw, r5.xxyz, r4.yyzw
                                    log r4.yzw, r4.yyzw
                                    mul r4.yzw, r3.xxxx, r4.yyzw
                                    exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                                    mul r6.xyz, r3.wwww, r4.yzwy
                                    add r3.xzw, r3.zzzz, r6.xxyz
                                    itof r6.xyz, l(1, 1, 1, 0)
                                    mul r4.xyz, r4.yzwy, r4.xxxx
                                    add r4.xyz, r4.xyzx, r6.xyzx
                                    div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                                    log r3.xzw, r3.xxzw
                                    mul r3.xyz, r3.xzwx, r3.yyyy
                                    exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                                    mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 322
                                    mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 323
                                  else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 324
                                    ieq r3.x, cb0[13].x, l(18)
                                    if_nz r3.x
                
                #line 326
                                      nop 
                                      mov r5.xyz, r5.xyzx
                
                #line 165
                                      mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                                      mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                                      mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                                      mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                                      mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                                      itof r4.yzw, l(0, 10000, 10000, 10000)
                                      div r4.yzw, r5.xxyz, r4.yyzw
                                      log r4.yzw, r4.yyzw
                                      mul r4.yzw, r3.xxxx, r4.yyzw
                                      exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                                      mul r6.xyz, r3.wwww, r4.yzwy
                                      add r3.xzw, r3.zzzz, r6.xxyz
                                      itof r6.xyz, l(1, 1, 1, 0)
                                      mul r4.xyz, r4.yzwy, r4.xxxx
                                      add r4.xyz, r4.xyzx, r6.xyzx
                                      div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                                      log r3.xzw, r3.xxzw
                                      mul r3.xyz, r3.xzwx, r3.yyyy
                                      exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                                      mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 326
                                      mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 327
                                    else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 328
                                      ieq r3.x, cb0[13].x, l(1)
                                      if_nz r3.x
                
                #line 330
                                        log r3.xyz, r5.xyzx
                                        mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                        exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 331
                                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 332
                                        ieq r3.x, cb0[13].x, l(4)
                                        if_nz r3.x
                
                #line 334
                                          log r3.xyz, r5.xyzx
                                          mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                          exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 335
                                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 338
                                          mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 339
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                                endif 
                
                #line 377
                                mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 378
                                nop 
                                mov r5.xyz, r5.xyzx
                
                #line 311
                                mov r5.xyz, r5.xyzx  // r5.x <- <adjustRange return value>.x; r5.y <- <adjustRange return value>.y; r5.z <- <adjustRange return value>.z
                
                #line 378
                                mov r5.xyz, r5.xyzx
                
                #line 379
                                nop 
                                mov r5.xyz, r5.xyzx
                
                #line 367
                                mov r5.xyz, r5.xyzx  // r5.x <- <reorderPlanes return value>.x; r5.y <- <reorderPlanes return value>.y; r5.z <- <reorderPlanes return value>.z
                
                #line 379
                                mov r5.xyz, r5.xyzx
                
                #line 380
                              else   // Prior locations: r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33; r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w; r5.w <- rgb.w
                
                #line 372
                                mov r3.x, cb0[14].z  // r3.x <- DrawLine; r3.x <- DrawLine; r3.x <- DrawLine
                
                #line 381
                                ieq r3.x, r3.x, l(1)
                                if_z r3.x
                
                #line 387
                                  nop 
                                  mov r3.xyzw, r5.xyzw
                
                #line 191
                                  ieq r4.x, cb0[12].w, cb0[13].x
                                  if_nz r4.x
                
                #line 193
                                    mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 194
                                  else 
                
                #line 195
                                    ieq r4.x, cb0[12].w, l(8)
                                    if_nz r4.x
                
                #line 197
                                      mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 198
                                    else 
                
                #line 199
                                      ieq r4.x, cb0[12].w, l(16)
                                      if_nz r4.x
                
                #line 201
                                        nop 
                                        mov r3.xyzw, r3.xyzw
                
                #line 126
                                        mov r4.x, l(0.835938)  // r4.x <- ST2084_c1
                
                #line 127
                                        mov r4.y, l(18.851562)  // r4.y <- ST2084_c2
                
                #line 128
                                        mov r4.z, l(18.687500)  // r4.z <- ST2084_c3
                
                #line 129
                                        itof r6.xyzw, l(0, 0, 0, 0)
                                        max r6.xyzw, r3.xyzw, r6.xyzw
                                        log r6.xyzw, r6.xyzw
                                        mul r6.xyzw, r6.xyzw, l(0.012683, 0.012683, 0.012683, 0.012683)
                                        exp r6.xyzw, r6.xyzw  // r6.x <- rgb.x; r6.y <- rgb.y; r6.z <- rgb.z; r6.w <- rgb.w
                
                #line 130
                                        mov r7.xyzw, -r4.xxxx
                                        add r7.xyzw, r6.xyzw, r7.xyzw
                                        max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                                        mul r6.xyzw, r4.zzzz, r6.xyzw
                                        mov r6.xyzw, -r6.xyzw
                                        add r4.xyzw, r4.yyyy, r6.xyzw
                                        div r4.xyzw, r7.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 131
                                        log r4.xyzw, r4.xyzw
                                        mul r4.xyzw, r4.xyzw, l(6.277395, 6.277395, 6.277395, 6.277395)
                                        exp r4.xyzw, r4.xyzw  // r4.x <- rgb.x; r4.y <- rgb.y; r4.z <- rgb.z; r4.w <- rgb.w
                
                #line 132
                                        itof r6.xyzw, l(10000, 10000, 10000, 10000)
                                        mul r3.xyzw, r4.xyzw, r6.xyzw  // r3.x <- <ST2084TOLinear return value>.x; r3.y <- <ST2084TOLinear return value>.y; r3.z <- <ST2084TOLinear return value>.z; r3.w <- <ST2084TOLinear return value>.w
                
                #line 201
                                        mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 202
                                      else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 203
                                        ieq r4.x, cb0[12].w, l(18)
                                        if_nz r4.x
                
                #line 205
                                          nop 
                                          mov r3.xyzw, r3.xyzw
                
                #line 137
                                          itof r4.x, l(2000)  // r4.x <- alpha_gain
                
                #line 138
                                          nop 
                                          mov r3.x, r3.x
                
                #line 111
                                          mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                          mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                          mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                          mov r6.x, l(4.000000)  // r6.x <- B67_inv_r2
                
                #line 115
                                          ge r6.y, l(0.500000), r3.x
                                          if_nz r6.y
                
                #line 116
                                            mul r6.y, r3.x, r3.x
                                            mul r3.x, r6.x, r6.y
                                          else   // Prior locations: r3.x <- rgb.x; r3.x <- rgb.x
                
                #line 118
                                            mov r4.w, -r4.w
                                            add r4.w, r3.x, r4.w
                                            div r4.y, r4.w, r4.y
                                            mul r4.y, r4.y, l(1.442695)
                                            exp r4.y, r4.y
                                            add r3.x, r4.z, r4.y
                                          endif 
                
                #line 119
                                          mov r3.x, r3.x  // r3.x <- <inverse_HLG return value>
                
                #line 138
                                          mov r3.x, r3.x  // r3.x <- rgb.x
                
                #line 139
                                          nop 
                                          mov r3.y, r3.y
                
                #line 111
                                          mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                          mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                          mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                          mov r6.x, l(4.000000)  // r6.x <- B67_inv_r2
                
                #line 115
                                          ge r6.y, l(0.500000), r3.y
                                          if_nz r6.y
                
                #line 116
                                            mul r6.y, r3.y, r3.y
                                            mul r3.y, r6.x, r6.y
                                          else   // Prior locations: r3.y <- rgb.y; r3.y <- rgb.y
                
                #line 118
                                            mov r4.w, -r4.w
                                            add r4.w, r3.y, r4.w
                                            div r4.y, r4.w, r4.y
                                            mul r4.y, r4.y, l(1.442695)
                                            exp r4.y, r4.y
                                            add r3.y, r4.z, r4.y
                                          endif 
                
                #line 119
                                          mov r3.y, r3.y  // r3.y <- <inverse_HLG return value>
                
                #line 139
                                          mov r3.y, r3.y  // r3.y <- rgb.y
                
                #line 140
                                          nop 
                                          mov r3.z, r3.z
                
                #line 111
                                          mov r4.y, l(0.178833)  // r4.y <- B67_a
                
                #line 112
                                          mov r4.z, l(0.284669)  // r4.z <- B67_b
                
                #line 113
                                          mov r4.w, l(0.559911)  // r4.w <- B67_c
                
                #line 114
                                          mov r6.x, l(4.000000)  // r6.x <- B67_inv_r2
                
                #line 115
                                          ge r6.y, l(0.500000), r3.z
                                          if_nz r6.y
                
                #line 116
                                            mul r6.y, r3.z, r3.z
                                            mul r3.z, r6.x, r6.y
                                          else   // Prior locations: r3.z <- rgb.z; r3.z <- rgb.z
                
                #line 118
                                            mov r4.w, -r4.w
                                            add r4.w, r3.z, r4.w
                                            div r4.y, r4.w, r4.y
                                            mul r4.y, r4.y, l(1.442695)
                                            exp r4.y, r4.y
                                            add r3.z, r4.z, r4.y
                                          endif 
                
                #line 119
                                          mov r3.z, r3.z  // r3.z <- <inverse_HLG return value>
                
                #line 140
                                          mov r3.z, r3.z  // r3.z <- rgb.z
                
                #line 141
                                          mov r4.yzw, l(0,0.262700,0.678000,0.059300)  // r4.y <- ootf_2020.x; r4.z <- ootf_2020.y; r4.w <- ootf_2020.z
                
                #line 142
                                          dp3 r4.y, r4.yzwy, r3.xyzx
                                          mul r4.x, r4.y, r4.x  // r4.x <- ootf_ys
                
                #line 143
                                          log r4.x, r4.x
                                          mul r4.x, r4.x, l(0.200000)
                                          exp r4.x, r4.x
                                          mul r3.xyzw, r3.xyzw, r4.xxxx  // r3.x <- <HLGTOLinear return value>.x; r3.y <- <HLGTOLinear return value>.y; r3.z <- <HLGTOLinear return value>.z; r3.w <- <HLGTOLinear return value>.w
                
                #line 205
                                          mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 206
                                        else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 207
                                          ieq r4.x, cb0[12].w, l(1)
                                          if_nz r4.x
                
                #line 209
                                            nop 
                                            mov r3.xyzw, r3.xyzw
                
                #line 147
                                            log r4.xyzw, r3.xyzw
                                            mul r4.xyzw, r4.xyzw, l(2.222222, 2.222222, 2.222222, 2.222222)
                                            exp r3.xyzw, r4.xyzw  // r3.x <- <BT709TOLinear return value>.x; r3.y <- <BT709TOLinear return value>.y; r3.z <- <BT709TOLinear return value>.z; r3.w <- <BT709TOLinear return value>.w
                
                #line 209
                                            mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 210
                                          else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 211
                                            ieq r4.x, cb0[12].w, l(4)
                                            if_nz r4.x
                
                #line 213
                                              nop 
                                              mov r3.xyzw, r3.xyzw
                
                #line 152
                                              log r4.xyzw, r3.xyzw
                                              mul r4.xyzw, r4.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
                                              exp r3.xyzw, r4.xyzw  // r3.x <- <BT470M_SRGB_TOLinear return value>.x; r3.y <- <BT470M_SRGB_TOLinear return value>.y; r3.z <- <BT470M_SRGB_TOLinear return value>.z; r3.w <- <BT470M_SRGB_TOLinear return value>.w
                
                #line 213
                                              mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 214
                                            else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 215
                                              ieq r4.x, cb0[12].w, l(5)
                                              if_nz r4.x
                
                #line 217
                                                nop 
                                                mov r3.xyzw, r3.xyzw
                
                #line 156
                                                log r4.xyzw, r3.xyzw
                                                mul r4.xyzw, r4.xyzw, l(2.800000, 2.800000, 2.800000, 2.800000)
                                                exp r3.xyzw, r4.xyzw  // r3.x <- <BT470BGTOLinear return value>.x; r3.y <- <BT470BGTOLinear return value>.y; r3.z <- <BT470BGTOLinear return value>.z; r3.w <- <BT470BGTOLinear return value>.w
                
                #line 217
                                                mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 218
                                              else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 225
                                                mov r3.xyzw, r3.xyzw  // r3.x <- <sourceToLinear return value>.x; r3.y <- <sourceToLinear return value>.y; r3.z <- <sourceToLinear return value>.z; r3.w <- <sourceToLinear return value>.w
                
                #line 226
                                              endif 
                                            endif 
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                
                #line 387
                                  mov r3.xyzw, r3.xyzw  // r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.w <- rgb.w
                
                #line 388
                                  nop 
                                  mov r3.xyzw, r3.xyzw
                
                #line 275
                                  ine r4.x, cb0[13].z, cb0[13].y
                                  if_nz r4.x
                
                #line 277
                                    nop 
                                    mov r3.xyzw, r3.xyzw
                
                #line 270
                                    dp4 r4.x, r3.xyzw, cb1[8].xyzw
                                    dp4 r4.y, r3.xyzw, cb1[9].xyzw
                                    dp4 r4.z, r3.xyzw, cb1[10].xyzw
                                    itof r6.xyz, l(0, 0, 0, 0)
                                    max r3.xyz, r4.xyzx, r6.xyzx  // r3.x <- <PrimariesTransform return value>.x; r3.y <- <PrimariesTransform return value>.y; r3.z <- <PrimariesTransform return value>.z
                
                #line 277
                                    mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 278
                                  else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 281
                                    mov r3.xyz, r3.xyzx  // r3.x <- <transformPrimaries return value>.x; r3.y <- <transformPrimaries return value>.y; r3.z <- <transformPrimaries return value>.z
                
                #line 282
                                  endif 
                
                #line 388
                                  mov r3.xyz, r3.xyzx
                
                #line 389
                                  nop 
                                  mov r3.xyz, r3.xyzx
                
                #line 287
                                  ieq r3.w, cb0[12].w, cb0[13].x
                                  if_nz r3.w
                
                #line 289
                                    mov r5.xyz, r3.xyzx
                
                #line 290
                                  endif   // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 291
                                  if_z r3.w
                                    ieq r3.w, cb0[13].x, l(1)
                                    ieq r4.x, cb0[13].x, l(4)
                                    or r3.w, r3.w, r4.x
                                    if_nz r3.w
                
                #line 293
                                      ieq r3.w, cb0[12].w, l(16)
                                      ieq r4.x, cb0[12].w, l(18)
                                      or r3.w, r3.w, r4.x
                                      if_nz r3.w
                
                #line 295
                                        nop 
                                        mov r3.xyz, r3.xyzx
                
                #line 184
                                        nop 
                                        mov r4.xyz, l(11.200000,11.200000,11.200000,0)
                
                #line 178
                                        mov r3.w, l(0.150000)  // r3.w <- A
                                        mov r4.w, l(0.500000)  // r4.w <- B
                
                #line 179
                                        mul r6.xyz, r4.xyzx, r3.wwww
                                        add r6.xyz, r6.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                        mul r6.xyz, r4.xyzx, r6.xyzx
                                        add r6.xyz, r6.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                        mul r7.xyz, r4.xyzx, r3.wwww
                                        add r7.xyz, r4.wwww, r7.xyzx
                                        mul r4.xyz, r4.xyzx, r7.xyzx
                                        add r4.xyz, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                        div r4.xyz, r6.xyzx, r4.xyzx
                                        mov r6.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                        add r4.xyz, r4.xyzx, r6.xyzx  // r4.x <- <hable return value>.x; r4.y <- <hable return value>.y; r4.z <- <hable return value>.z
                
                #line 184
                                        mov r4.xyz, r4.xyzx  // r4.x <- HABLE_DIV.x; r4.y <- HABLE_DIV.y; r4.z <- HABLE_DIV.z
                
                #line 185
                                        nop 
                                        mul r6.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 178
                                        mov r3.w, l(0.150000)
                                        mov r4.w, l(0.500000)
                
                #line 179
                                        mul r7.xyz, r6.xyzx, r3.wwww
                                        add r7.xyz, r7.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
                                        mul r7.xyz, r6.xyzx, r7.xyzx
                                        add r7.xyz, r7.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
                                        mul r8.xyz, r6.xyzx, r3.wwww
                                        add r8.xyz, r4.wwww, r8.xyzx
                                        mul r6.xyz, r6.xyzx, r8.xyzx
                                        add r6.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
                                        div r6.xyz, r7.xyzx, r6.xyzx
                                        mov r7.xyz, l(-0.066667,-0.066667,-0.066667,-0.000000)
                                        add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <hable return value>.x; r6.y <- <hable return value>.y; r6.z <- <hable return value>.z
                
                #line 185
                                        div r5.xyz, r6.xyzx, r4.xyzx  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z
                
                #line 186
                                        mov r5.xyz, r5.xyzx  // r5.x <- <HDRToneMapping return value>.x; r5.y <- <HDRToneMapping return value>.y; r5.z <- <HDRToneMapping return value>.z
                
                #line 295
                                        mov r5.xyz, r5.xyzx  // r5.x <- <toneMapping return value>.x; r5.y <- <toneMapping return value>.y; r5.z <- <toneMapping return value>.z
                
                #line 296
                                      else 
                
                #line 299
                                        mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 300
                                      endif 
                
                #line 301
                                    else   // Prior locations: r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z; r3.x <- rgb.x; r3.y <- rgb.y; r3.z <- rgb.z
                
                #line 304
                                      mul r5.xyz, r3.xyzx, cb0[14].yyyy
                
                #line 305
                                    endif 
                                  endif 
                
                #line 389
                                  mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 390
                                  nop 
                                  mov r5.xyz, r5.xyzx
                
                #line 316
                                  ieq r3.x, cb0[12].w, cb0[13].x
                                  if_nz r3.x
                
                #line 318
                                    mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 319
                                  else 
                
                #line 320
                                    ieq r3.x, cb0[13].x, l(16)
                                    if_nz r3.x
                
                #line 322
                                      nop 
                                      mov r5.xyz, r5.xyzx
                
                #line 165
                                      mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                                      mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                                      mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                                      mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                                      mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                                      itof r4.yzw, l(0, 10000, 10000, 10000)
                                      div r4.yzw, r5.xxyz, r4.yyzw
                                      log r4.yzw, r4.yyzw
                                      mul r4.yzw, r3.xxxx, r4.yyzw
                                      exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                                      mul r6.xyz, r3.wwww, r4.yzwy
                                      add r3.xzw, r3.zzzz, r6.xxyz
                                      itof r6.xyz, l(1, 1, 1, 0)
                                      mul r4.xyz, r4.yzwy, r4.xxxx
                                      add r4.xyz, r4.xyzx, r6.xyzx
                                      div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                                      log r3.xzw, r3.xxzw
                                      mul r3.xyz, r3.xzwx, r3.yyyy
                                      exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                                      mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 322
                                      mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 323
                                    else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 324
                                      ieq r3.x, cb0[13].x, l(18)
                                      if_nz r3.x
                
                #line 326
                                        nop 
                                        mov r5.xyz, r5.xyzx
                
                #line 165
                                        mov r3.x, l(0.159302)  // r3.x <- ST2084_m1
                
                #line 166
                                        mov r3.y, l(78.843750)  // r3.y <- ST2084_m2
                
                #line 167
                                        mov r3.z, l(0.835938)  // r3.z <- ST2084_c1
                
                #line 168
                                        mov r3.w, l(18.851562)  // r3.w <- ST2084_c2
                
                #line 169
                                        mov r4.x, l(18.687500)  // r4.x <- ST2084_c3
                
                #line 170
                                        itof r4.yzw, l(0, 10000, 10000, 10000)
                                        div r4.yzw, r5.xxyz, r4.yyzw
                                        log r4.yzw, r4.yyzw
                                        mul r4.yzw, r3.xxxx, r4.yyzw
                                        exp r4.yzw, r4.yyzw  // r4.y <- rgb.x; r4.z <- rgb.y; r4.w <- rgb.z
                
                #line 171
                                        mul r6.xyz, r3.wwww, r4.yzwy
                                        add r3.xzw, r3.zzzz, r6.xxyz
                                        itof r6.xyz, l(1, 1, 1, 0)
                                        mul r4.xyz, r4.yzwy, r4.xxxx
                                        add r4.xyz, r4.xyzx, r6.xyzx
                                        div r3.xzw, r3.xxzw, r4.xxyz  // r3.x <- rgb.x; r3.z <- rgb.y; r3.w <- rgb.z
                
                #line 172
                                        log r3.xzw, r3.xxzw
                                        mul r3.xyz, r3.xzwx, r3.yyyy
                                        exp r5.xyz, r3.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 173
                                        mov r5.xyz, r5.xyzx  // r5.x <- <LineTOST2084 return value>.x; r5.y <- <LineTOST2084 return value>.y; r5.z <- <LineTOST2084 return value>.z
                
                #line 326
                                        mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 327
                                      else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 328
                                        ieq r3.x, cb0[13].x, l(1)
                                        if_nz r3.x
                
                #line 330
                                          log r3.xyz, r5.xyzx
                                          mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                          exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 331
                                        else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 332
                                          ieq r3.x, cb0[13].x, l(4)
                                          if_nz r3.x
                
                #line 334
                                            log r3.xyz, r5.xyzx
                                            mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                                            exp r5.xyz, r3.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 335
                                          else   // Prior locations: r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z; r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 338
                                            mov r5.xyz, r5.xyzx  // r5.x <- <linearToDisplay return value>.x; r5.y <- <linearToDisplay return value>.y; r5.z <- <linearToDisplay return value>.z
                
                #line 339
                                          endif 
                                        endif 
                                      endif 
                                    endif 
                                  endif 
                
                #line 390
                                  mov r5.xyz, r5.xyzx  // r5.x <- rgb.x; r5.y <- rgb.y; r5.z <- rgb.z
                
                #line 391
                                  nop 
                                  mov r5.xyz, r5.xyzx
                
                #line 311
                                  mov r5.xyz, r5.xyzx  // r5.x <- <adjustRange return value>.x; r5.y <- <adjustRange return value>.y; r5.z <- <adjustRange return value>.z
                
                #line 391
                                  mov r5.xyz, r5.xyzx
                
                #line 392
                                  nop 
                                  mov r5.xyz, r5.xyzx
                
                #line 367
                                  mov r5.xyz, r5.xyzx  // r5.x <- <reorderPlanes return value>.x; r5.y <- <reorderPlanes return value>.y; r5.z <- <reorderPlanes return value>.z
                
                #line 392
                                  mov r5.xyz, r5.xyzx
                
                #line 393
                                endif 
                              endif 
                
                #line 394
                              itof r5.w, l(1)  // r5.w <- <RenderFloat return value>.w
                              mov r5.xyz, r5.xyzx  // r5.x <- <RenderFloat return value>.x; r5.y <- <RenderFloat return value>.y; r5.z <- <RenderFloat return value>.z
                
                #line 459
                              mov r5.xyzw, r5.xyzw  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w
                
                #line 460
                              mov r5.xyzw, r5.xyzw  // r5.x <- <GetRGBA return value>.x; r5.y <- <GetRGBA return value>.y; r5.z <- <GetRGBA return value>.z; r5.w <- <GetRGBA return value>.w
                
                #line 461
                            else   // Prior locations: r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33
                
                #line 462
                              ieq r3.x, cb0[12].x, l(8)
                              if_nz r3.x
                
                #line 464
                                nop 
                
                #line 71
                                sample_indexable(texture2d)(float,float,float,float) r3.x, v1.xyxx, t0.xyzw, s0
                                itof r3.y, l(64)
                                mul r3.x, r3.y, r3.x  // r3.x <- y
                
                #line 73
                                sample_indexable(texture2d)(float,float,float,float) r4.x, v1.xyxx, t1.xyzw, s0
                                itof r4.y, l(64)
                                mul r3.y, r4.y, r4.x  // r3.y <- u
                
                #line 74
                                sample_indexable(texture2d)(float,float,float,float) r4.x, v1.xyxx, t2.xyzw, s0
                                itof r4.y, l(64)
                                mul r3.z, r4.y, r4.x  // r3.z <- v
                
                #line 76
                                mov r3.w, l(1.000000)
                                mov r3.xyzw, r3.xyzw  // r3.x <- <PSPlanar42010_Reverse return value>.x; r3.y <- <PSPlanar42010_Reverse return value>.y; r3.z <- <PSPlanar42010_Reverse return value>.z; r3.w <- <PSPlanar42010_Reverse return value>.w
                
                #line 464
                                mov r3.xyzw, r3.xyzw  // r3.x <- rgba.x; r3.y <- rgba.y; r3.z <- rgba.z; r3.w <- rgba.w
                
                #line 466
                                dp4 r4.x, r3.xyzw, cb1[0].xyzw  // r4.x <- rr.x
                                dp4 r4.y, r3.xyzw, cb1[1].xyzw  // r4.y <- rr.y
                                dp4 r4.z, r3.xyzw, cb1[2].xyzw  // r4.z <- rr.z
                                dp4 r4.w, r3.xyzw, cb1[3].xyzw  // r4.w <- rr.w
                
                #line 467
                                dp4 r0.x, r4.xyzw, r0.xyzw
                                dp4 r0.y, r4.xyzw, r1.xyzw
                                dp4 r0.z, r4.xyzw, r2.xyzw
                                itof r1.xyz, l(0, 0, 0, 0)
                                max r5.xyz, r0.xyzx, r1.xyzx  // r5.x <- rgbarsp.x; r5.y <- rgbarsp.y; r5.z <- rgbarsp.z
                
                #line 468
                                itof r5.w, l(1)  // r5.w <- rgbarsp.w
                
                #line 469
                                mov r5.xyz, r5.xyzx  // r5.x <- <GetRGBA return value>.x; r5.y <- <GetRGBA return value>.y; r5.z <- <GetRGBA return value>.z
                                mov r5.w, r5.w  // r5.w <- <GetRGBA return value>.w
                
                #line 470
                              else   // Prior locations: r0.x <- yuv2rgbmatrix._m00; r0.y <- yuv2rgbmatrix._m10; r0.z <- yuv2rgbmatrix._m20; r1.x <- yuv2rgbmatrix._m01; r1.y <- yuv2rgbmatrix._m11; r1.z <- yuv2rgbmatrix._m21; r3.y <- yuv2rgbmatrix._m13; r3.z <- yuv2rgbmatrix._m23; r3.w <- yuv2rgbmatrix._m33
                
                #line 473
                                itof r5.xyzw, l(0, 1, 0, 1)  // r5.x <- <GetRGBA return value>.x; r5.y <- <GetRGBA return value>.y; r5.z <- <GetRGBA return value>.z; r5.w <- <GetRGBA return value>.w
                
                #line 474
                              endif 
                            endif 
                          endif 
                        endif 
                      endif 
                    endif 
                  endif 
                endif 
                
                #line 478
                mov r5.xyzw, r5.xyzw  // r5.x <- rgba.x; r5.y <- rgba.y; r5.z <- rgba.z; r5.w <- rgba.w
                
                #line 479
                mov o0.xyzw, r5.xyzw
                ret 
                // Approximately 3968 instruction slots used
                            
            };
        }

    }

}

